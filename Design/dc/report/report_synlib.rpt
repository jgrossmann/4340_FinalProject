
****************************************
Report : library
Library: dw_foundation.sldb
Version: F-2011.09-SP2
Date   : Fri Dec 19 15:39:22 2014
****************************************

Library Type            : Synthetic
Tool Created            : F-2011.09-SP2
Date Created            : 11.24.11
Library Version         : D-2010.03:F-2011.09-DWBB_201109.2:ec652726

Operator Types:

   Operator Name    Type
   ----------------------------------------------------------------------
   ASHR_TC_TC_OP    bidir_right_shift

   ASHR_TC_UNS_OP   unidir_arith_right_shift

   ASHR_UNS_TC_OP   bidir_right_shift

   ASHR_UNS_UNS_OP  unidir_logical_right_shift



Operators:

   Operator         Ports    Dir
   ----------------------------------------------------------------------
   ASHR_TC_TC_OP    A        in
                    SH       in
                    Z        out

   ASHR_TC_UNS_OP   A        in
                    SH       in
                    Z        out

   ASHR_UNS_TC_OP   A        in
                    SH       in
                    Z        out

   ASHR_UNS_UNS_OP  A        in
                    SH       in
                    Z        out

   BIN2GRAY_STD_LOGIC_OP B   in
                    G        out

   BINENC_STD_LOGIC_OP A     in
                    Z        out

   BINENC_TC_OP     A        in
                    Z        out

   BINENC_UNS_OP    A        in
                    Z        out

   COS_TC_OP        A        in
                    width    in
                    WAVE     out

   CSA_TC_OP        A        in
                    B        in
                    C        in
                    CI       in
                    CARRY    out
                    SUM      out
                    CO       out

   CSA_UNS_OP       A        in
                    B        in
                    C        in
                    CI       in
                    CARRY    out
                    SUM      out
                    CO       out

   ECC_RD_OP        correct_n in
                    datain   in
                    chkin    in
                    err_detect out
                    err_multpl out
                    dataout  out
                    chkout   out
                    chkbits  in
                    synd_sel in

   ECC_WR_OP        datain   in
                    chkout   out
                    chkbits  in
                    synd_sel in

   GRAY2BIN_STD_LOGIC_OP G   in
                    B        out

   INC_GRAY_STD_LOGIC_OP A   in
                    CI       in
                    Z        out

   LOD_DEC_STD_LOGIC_OP A    in
                    Z        out

   LOD_DEC_TC_OP    A        in
                    Z        out

   LOD_DEC_UNS_OP   A        in
                    Z        out

   LOD_ENC_STD_LOGIC_OP A    in
                    Z        out

   LOD_ENC_TC_OP    A        in
                    Z        out

   LOD_ENC_UNS_OP   A        in
                    Z        out

   LSD_DEC_STD_LOGIC_OP A    in
                    Z        out

   LSD_DEC_TC_OP    A        in
                    Z        out

   LSD_DEC_UNS_OP   A        in
                    Z        out

   LSD_ENC_STD_LOGIC_OP A    in
                    Z        out

   LSD_ENC_TC_OP    A        in
                    Z        out

   LSD_ENC_UNS_OP   A        in
                    Z        out

   LZA_CNT_STD_LOGIC_OP A    in
                    B        in
                    Z        out

   LZD_DEC_STD_LOGIC_OP A    in
                    Z        out

   LZD_DEC_TC_OP    A        in
                    Z        out

   LZD_DEC_UNS_OP   A        in
                    Z        out

   LZD_ENC_STD_LOGIC_OP A    in
                    Z        out

   LZD_ENC_TC_OP    A        in
                    Z        out

   LZD_ENC_UNS_OP   A        in
                    Z        out

   MAC_TC_OP        A        in
                    B        in
                    C        in
                    Z        out

   MAC_UNS_OP       A        in
                    B        in
                    C        in
                    Z        out

   MAX_TC_OP        a        in
                    num_inputs in
                    value    out

   MAX_UNS_OP       a        in
                    num_inputs in
                    value    out

   MIN_TC_OP        a        in
                    num_inputs in
                    value    out

   MIN_UNS_OP       a        in
                    num_inputs in
                    value    out

   MULTP_TC_OP      A        in
                    B        in
                    Z1       out
                    Z2       out

   MULTP_UNS_OP     A        in
                    B        in
                    Z1       out
                    Z2       out

   PAR_ODD_OP       datain   in
                    parity   out

   PREFIX_AND_OP    PI       in
                    PO       out

   PRIENC_STD_LOGIC_OP A     in
                    Z        out

   PRIENC_TC_OP     A        in
                    Z        out

   PRIENC_UNS_OP    A        in
                    Z        out

   PRODSUM1_TC_OP   A        in
                    B        in
                    C        in
                    Z        out

   PRODSUM1_UNS_OP  A        in
                    B        in
                    C        in
                    Z        out

   PRODSUM_TC_OP    A        in
                    B        in
                    num_inputs in
                    SUM_width in
                    Z        out

   PRODSUM_UNS_OP   A        in
                    B        in
                    num_inputs in
                    SUM_width in
                    Z        out

   SHIFTER_TC_TC_OP data_in  in
                    sh       in
                    sh_mode  in
                    Z        out

   SHIFTER_TC_UNS_OP data_in in
                    sh       in
                    sh_mode  in
                    Z        out

   SHIFTER_UNS_TC_OP data_in in
                    sh       in
                    sh_mode  in
                    Z        out

   SHIFTER_UNS_UNS_OP data_in in
                    sh       in
                    sh_mode  in
                    Z        out

   SIN_TC_OP        A        in
                    width    in
                    WAVE     out

   SQRT_TC_OP       A        in
                    ROOT     out

   SQRT_UNS_OP      A        in
                    ROOT     out

   SQR_TC_OP        A        in
                    SQUARE   out

   SQR_UNS_OP       A        in
                    SQUARE   out

   SUM_TC_OP        A        in
                    NUM_INPUTS in
                    Z        out

   SUM_UNS_OP       A        in
                    NUM_INPUTS in
                    Z        out

   VECTOR_SUM_OP    A        in
                    Z        out

   WALL_TREE_TC_OP  A        in
                    Z1       out
                    Z2       out



Synthetic Modules:

   Module
   ----------------------------------------------------------------------
   DW01_binenc      design_library: DW01
                    HDL parameter: A_width = width('A')
                    HDL parameter: ADDR_width = width('ADDR')

   DW01_bsh         design_library: DW01
                    HDL parameter: A_width = width('A')
                    HDL parameter: SH_width = width('SH')
                    module type: unidir_left_rotate

   DW01_csa         design_library: DW01
                    HDL parameter: width = max( width('a'), width('b'), width('c'), width('sum'), width('carry') )

   DW01_mux_any     design_library: DW01
                    HDL parameter: A_width = width('A')
                    HDL parameter: SEL_width = width('SEL')
                    HDL parameter: MUX_width = width('MUX')
                    HDL parameter: bal_str = 0

   DW01_prienc      design_library: DW01
                    HDL parameter: A_width = width('A')
                    HDL parameter: INDEX_width = width('INDEX')

   DW01_satrnd      design_library: DW01
                    HDL parameter: width = 16
                    HDL parameter: msb_out = 15
                    HDL parameter: lsb_out = 0
                    Parameter: dout_width = msb_out-lsb_out+1

   DW02_booth       design_library: DW02
                    HDL parameter: n
                    HDL parameter: arch = 0
                    Parameter: e = (n/2+1)*3

   DW02_cos         design_library: DW02
                    HDL parameter: A_width = width('A')
                    HDL parameter: cos_width = width('COS')

   DW02_mac         design_library: DW02
                    HDL parameter: A_width = width('A')
                    HDL parameter: B_width = width('B')
                    Parameter: PRODUCT_width = B_width + A_width
                    module type: multiply_accumulate

   DW02_mult_2_stage design_library: DW02
                    HDL parameter: A_width = width('A')
                    HDL parameter: B_width = width('B')
                    Parameter: PRODUCT_width = B_width + A_width

   DW02_mult_3_stage design_library: DW02
                    HDL parameter: A_width = width('A')
                    HDL parameter: B_width = width('B')
                    Parameter: PRODUCT_width = B_width + A_width

   DW02_mult_4_stage design_library: DW02
                    HDL parameter: A_width = width('A')
                    HDL parameter: B_width = width('B')
                    Parameter: PRODUCT_width = B_width + A_width

   DW02_mult_5_stage design_library: DW02
                    HDL parameter: A_width = width('A')
                    HDL parameter: B_width = width('B')
                    Parameter: PRODUCT_width = B_width + A_width

   DW02_mult_6_stage design_library: DW02
                    HDL parameter: A_width = width('A')
                    HDL parameter: B_width = width('B')
                    Parameter: PRODUCT_width = B_width + A_width

   DW02_multp       design_library: DW02
                    HDL parameter: a_width = width('a')
                    HDL parameter: b_width = width('b')
                    HDL parameter: out_width = a_width + b_width + 2

   DW02_prod_sum    design_library: DW02
                    HDL parameter: A_width = width('A')
                    HDL parameter: B_width = width('B')
                    HDL parameter: num_inputs
                    HDL parameter: SUM_width = width('SUM')
                    Parameter: A_vector_width = num_inputs * A_width
                    Parameter: B_vector_width = num_inputs * B_width

   DW02_prod_sum1   design_library: DW02
                    HDL parameter: A_width = width('A')
                    HDL parameter: B_width = width('B')
                    HDL parameter: SUM_width = width('SUM')

   DW02_sin         design_library: DW02
                    HDL parameter: A_width = width('A')
                    HDL parameter: sin_width = width('SIN')

   DW02_sincos      design_library: DW02
                    HDL parameter: A_width = width('A')
                    HDL parameter: wave_width = width('WAVE')

   DW02_sum         design_library: DW02
                    HDL parameter: num_inputs = width('INPUT') / width('SUM')
                    HDL parameter: input_width = width('SUM')
                    Parameter: vector_width = num_inputs * input_width

   DW02_tree        design_library: DW02
                    HDL parameter: num_inputs = width('INPUT') / width('OUT0')
                    HDL parameter: input_width = width('OUT0')
                    Parameter: vector_width = num_inputs * input_width

   DW03_bictr_dcnto design_library: DW03
                    HDL parameter: width

   DW03_bictr_decode design_library: DW03
                    HDL parameter: width
                    Parameter: dec_width = 2**width

   DW03_bictr_scnto design_library: DW03
                    HDL parameter: width
                    HDL parameter: count_to

   DW03_lfsr_dcnto  design_library: DW03
                    HDL parameter: width

   DW03_lfsr_load   design_library: DW03
                    HDL parameter: width

   DW03_lfsr_scnto  design_library: DW03
                    HDL parameter: width
                    HDL parameter: count_to

   DW03_lfsr_updn   design_library: DW03
                    HDL parameter: width

   DW03_pipe_reg    design_library: DW03
                    HDL parameter: depth
                    HDL parameter: width

   DW03_reg_s_pl    design_library: DW03
                    HDL parameter: width = 8
                    HDL parameter: reset_value = 0

   DW03_shftreg     design_library: DW03
                    HDL parameter: length = max( width('P_IN'), width('P_OUT'))
                    module type: SHIFT_REG

   DW03_updn_ctr    design_library: DW03
                    HDL parameter: width

   DW04_par_gen     design_library: DW04
                    HDL parameter: width = width('datain')
                    HDL parameter: par_type = 1

   DW04_shad_reg    design_library: DW04
                    HDL parameter: width
                    HDL parameter: bld_shad_reg

   DW_8b10b_dec     design_library: DW04
                    HDL parameter: bytes = 2
                    HDL parameter: k28_5_only = 0
                    HDL parameter: en_mode = 0
                    HDL parameter: init_mode = 0
                    HDL parameter: rst_mode = 0
                    HDL parameter: op_iso_mode = 0
                    Parameter: data_in_width = bytes*10
                    Parameter: data_out_width = bytes*8

   DW_8b10b_enc     design_library: DW04
                    HDL parameter: bytes = 1
                    HDL parameter: k28_5_only = 0
                    HDL parameter: en_mode = 0
                    HDL parameter: init_mode = 0
                    HDL parameter: rst_mode = 0
                    HDL parameter: op_iso_mode = 0
                    Parameter: enc_data_in_width = 8 * bytes
                    Parameter: enc_data_out_width = 10 * bytes

   DW_8b10b_unbal   design_library: DW04
                    HDL parameter: k28_5_only = 0

   DW_ASYMFIFOCTL_IN_WRAPPER design_library: DW03
                    HDL parameter: data_in_width
                    HDL parameter: data_out_width
                    HDL parameter: err_mode = 1
                    HDL parameter: rst_mode = 1
                    HDL parameter: push_pop_full = 1
                    HDL parameter: byte_order = 0
                    Parameter: ram_data_width = data_in_width
                    Parameter: byte_ctl_addr_width = data_out_width/data_in_width
                    Parameter: buf_addr_width = log2(data_out_width/data_in_width)

   DW_ASYMFIFOCTL_OUT_WRAPPER design_library: DW03
                    HDL parameter: data_in_width
                    HDL parameter: data_out_width
                    HDL parameter: err_mode = 1
                    HDL parameter: rst_mode = 1
                    HDL parameter: byte_order = 0
                    Parameter: ram_data_width = max(data_in_width,data_out_width)
                    Parameter: ctl_addr_width = log2(data_in_width/data_out_width)

   DW_ASYMFIFOCTL_S2SF_INWRP design_library: DW03
                    HDL parameter: data_in_width
                    HDL parameter: data_out_width
                    HDL parameter: depth = 8
                    HDL parameter: push_ae_lvl = 2
                    HDL parameter: push_af_lvl = 2
                    HDL parameter: err_mode = 0
                    HDL parameter: push_sync = 2
                    HDL parameter: rst_mode = 2
                    HDL parameter: byte_order = 0
                    Parameter: addr_width = log2(depth)
                    Parameter: pntr_width = log2(depth+1)
                    Parameter: ram_data_width = max(data_in_width,data_out_width)

   DW_ASYMFIFOCTL_S2SF_OUTWRP design_library: DW03
                    HDL parameter: data_in_width
                    HDL parameter: data_out_width
                    HDL parameter: depth = 8
                    HDL parameter: pop_ae_lvl = 2
                    HDL parameter: pop_af_lvl = 2
                    HDL parameter: err_mode = 0
                    HDL parameter: pop_sync = 2
                    HDL parameter: rst_mode = 1
                    HDL parameter: byte_order = 0
                    Parameter: addr_width = log2(depth)
                    Parameter: pntr_width = log2(depth+1)
                    Parameter: ram_data_width = max(data_in_width,data_out_width)

   DW_BYPASS        design_library: DW04

   DW_CAPTURE       design_library: DW04

   DW_CAPUP         design_library: DW04

   DW_FIFOCTL_IF    design_library: DW03
                    HDL parameter: depth = 8
                    HDL parameter: ae_level = 2
                    HDL parameter: af_level = 2
                    HDL parameter: err_mode = 0
                    HDL parameter: sync_mode = 2
                    HDL parameter: io_mode = 0
                    HDL parameter: tst_mode = 0
                    Parameter: other_addr_g_width = log2(depth+1)
                    Parameter: this_addr_width = log2(depth)

   DW_FIR_SEQ_AU    design_library: DW03
                    HDL parameter: D_width = width('D')
                    HDL parameter: C_width = width('C')
                    HDL parameter: Y_width = width('S')

   DW_FIR_SEQ_CSR   design_library: DW03
                    HDL parameter: C_width = width('CIN')
                    HDL parameter: length
                    HDL parameter: addr_width = width('raddr')

   DW_FIR_SEQ_CTL   design_library: DW03
                    HDL parameter: length
                    HDL parameter: addr_width = width('dw_addr')

   DW_FIR_SEQ_DSR   design_library: DW03
                    HDL parameter: D_width = width('DIN')
                    HDL parameter: length
                    HDL parameter: addr_width = width('raddr')

   DW_FP_ALIGN      design_library: DW02
                    HDL parameter: a_width = 8
                    HDL parameter: sh_width = 3

   DW_IDREG         design_library: DW04
                    HDL parameter: version = 0
                    HDL parameter: part = 0
                    HDL parameter: man_num = 0

   DW_IDREGUC       design_library: DW04
                    HDL parameter: version = 0
                    HDL parameter: part = 0
                    HDL parameter: man_num = 0

   DW_INSTRREG      design_library: DW04
                    HDL parameter: width
                    module type: INSTRREG

   DW_MEM_2R_W_A_DFF design_library: DW06
                    HDL parameter: data_width
                    HDL parameter: depth
                    HDL parameter: rst_mode = 0
                    Parameter: log2_depth = log2(depth)

   DW_MEM_2R_W_A_LAT design_library: DW06
                    HDL parameter: data_width
                    HDL parameter: depth
                    HDL parameter: rst_mode = 1
                    Parameter: log2_depth = log2(depth)

   DW_MEM_2R_W_S_DFF design_library: DW06
                    clocking_scheme: positive_edge
                    HDL parameter: data_width
                    HDL parameter: depth
                    HDL parameter: rst_mode = 0
                    Parameter: log2_depth = log2(depth)

   DW_MEM_2R_W_S_LAT design_library: DW06
                    clocking_scheme: positive_edge
                    HDL parameter: data_width
                    HDL parameter: depth
                    Parameter: log2_depth = log2(depth)

   DW_MEM_RW_A_DFF  design_library: DW06
                    HDL parameter: data_width
                    HDL parameter: depth
                    HDL parameter: rst_mode = 0

   DW_MEM_RW_A_LAT  design_library: DW06
                    HDL parameter: data_width
                    HDL parameter: depth
                    HDL parameter: rst_mode = 1

   DW_MEM_RW_S_DFF  design_library: DW06
                    clocking_scheme: positive_edge
                    HDL parameter: data_width
                    HDL parameter: depth
                    HDL parameter: rst_mode = 0

   DW_MEM_RW_S_LAT  design_library: DW06
                    clocking_scheme: positive_edge
                    HDL parameter: data_width
                    HDL parameter: depth

   DW_MEM_R_W_A_DFF design_library: DW06
                    HDL parameter: data_width
                    HDL parameter: depth
                    HDL parameter: rst_mode = 0
                    Parameter: log2_depth = log2(depth)

   DW_MEM_R_W_A_LAT design_library: DW06
                    HDL parameter: data_width
                    HDL parameter: depth
                    HDL parameter: rst_mode = 1
                    Parameter: log2_depth = log2(depth)

   DW_MEM_R_W_S_DFF design_library: DW06
                    clocking_scheme: positive_edge
                    HDL parameter: data_width
                    HDL parameter: depth
                    HDL parameter: rst_mode = 0
                    Parameter: log2_depth = log2(depth)

   DW_MEM_R_W_S_LAT design_library: DW06
                    clocking_scheme: positive_edge
                    HDL parameter: data_width
                    HDL parameter: depth
                    Parameter: log2_depth = log2(depth)

   DW_MULTP_SC      design_library: DW02
                    HDL parameter: a_width = width('a')
                    HDL parameter: b_width = width('b')
                    HDL parameter: out_width = a_width + b_width + 2

   DW_PREFIX_AND    design_library: DW01
                    HDL parameter: width = width('pi')

   DW_PREFIX_ANDOR  design_library: DW01
                    HDL parameter: width = width('gi')

   DW_PREFIX_OR     design_library: DW01
                    HDL parameter: width = width('pi')

   DW_PREFIX_XOR    design_library: DW01
                    HDL parameter: width = width('pi')

   DW_PRIORITY_CODER design_library: DW01
                    HDL parameter: A_width = width('A')
                    HDL parameter: A_detect_1 = 1
                    HDL parameter: DEC_lsb2msb = 1
                    HDL parameter: ENC_lsb2msb = 1
                    Parameter: ENC_width = log2(A_width+1)

   DW_TAPFSM        design_library: DW04
                    HDL parameter: sync_mode = 0

   DW_addsub_dx     design_library: DW01
                    HDL parameter: width = width('a')
                    HDL parameter: p1_width = width / 2

   DW_and_tree      design_library: DW01
                    HDL parameter: width = width('a')

   DW_arb_2t        design_library: DW05
                    HDL parameter: n = 4
                    HDL parameter: p_width = 2
                    HDL parameter: park_mode = 1
                    HDL parameter: park_index = 0
                    HDL parameter: output_mode = 1
                    Parameter: index_width = log2(n)
                    Parameter: priority_width = p_width*n

   DW_arb_dp        design_library: DW05
                    HDL parameter: n = 4
                    HDL parameter: park_mode = 1
                    HDL parameter: park_index = 0
                    HDL parameter: output_mode = 1
                    Parameter: index_width = log2(n)
                    Parameter: priority_width = log2(n)*n

   DW_arb_fcfs      design_library: DW05
                    HDL parameter: n = 4
                    HDL parameter: park_mode = 1
                    HDL parameter: park_index = 0
                    HDL parameter: output_mode = 1
                    Parameter: index_width = log2(n)

   DW_arb_rr        design_library: DW05
                    HDL parameter: n = 4
                    HDL parameter: output_mode = 1
                    Parameter: grant_index_width = log2(n)

   DW_arb_sp        design_library: DW05
                    HDL parameter: n = 4
                    HDL parameter: park_mode = 1
                    HDL parameter: park_index = 0
                    HDL parameter: output_mode = 1
                    Parameter: index_width = log2(n)

   DW_asymdata_inbuf design_library: DW03
                    HDL parameter: in_width = 8
                    HDL parameter: out_width = 8
                    HDL parameter: err_mode = 0
                    HDL parameter: byte_order = 0
                    HDL parameter: flush_value = 1

   DW_asymdata_outbuf design_library: DW03
                    HDL parameter: in_width = 8
                    HDL parameter: out_width = 8
                    HDL parameter: err_mode = 0
                    HDL parameter: byte_order = 0

   DW_asymfifo_s1_df design_library: DW06
                    HDL parameter: data_in_width
                    HDL parameter: data_out_width
                    HDL parameter: depth
                    HDL parameter: err_mode = 1
                    HDL parameter: rst_mode = 1
                    HDL parameter: byte_order = 0
                    Parameter: addr_width = log2(depth)

   DW_asymfifo_s1_sf design_library: DW06
                    HDL parameter: data_in_width
                    HDL parameter: data_out_width
                    HDL parameter: depth
                    HDL parameter: ae_level
                    HDL parameter: af_level
                    HDL parameter: err_mode = 1
                    HDL parameter: rst_mode = 1
                    HDL parameter: byte_order = 0

   DW_asymfifo_s2_sf design_library: DW06
                    HDL parameter: data_in_width
                    HDL parameter: data_out_width
                    HDL parameter: depth = 8
                    HDL parameter: push_ae_lvl = 2
                    HDL parameter: push_af_lvl = 2
                    HDL parameter: pop_ae_lvl = 2
                    HDL parameter: pop_af_lvl = 2
                    HDL parameter: err_mode = 0
                    HDL parameter: push_sync = 2
                    HDL parameter: pop_sync = 2
                    HDL parameter: rst_mode = 1
                    HDL parameter: byte_order = 0

   DW_asymfifoctl_2c_df design_library: DW03
                    HDL parameter: data_s_width = 16
                    HDL parameter: data_d_width = 8
                    HDL parameter: ram_depth = 1
                    HDL parameter: mem_mode = 3
                    HDL parameter: arch_type = 0
                    HDL parameter: f_sync_type = 2
                    HDL parameter: r_sync_type = 2
                    HDL parameter: byte_order = 0
                    HDL parameter: flush_value = 0
                    HDL parameter: clk_ratio = 1
                    HDL parameter: ram_re_ext = 1
                    HDL parameter: err_mode = 0
                    HDL parameter: tst_mode = 0
                    HDL parameter: verif_en = 1
                    Parameter: log2_ram_depth_p1 = log2(ram_depth+1)
                    Parameter: ram_width = (data_s_width > data_d_width) ? data_s_width : data_d_width
                    Parameter: log2_ram_depth = log2(ram_depth)
                    Parameter: log2_fifo_depth_p1 = log2((ram_depth+1+(mem_mode % 2)+((mem_mode/2) % 2))+1)

   DW_asymfifoctl_s1_df design_library: DW03
                    HDL parameter: data_in_width
                    HDL parameter: data_out_width
                    HDL parameter: depth
                    HDL parameter: err_mode = 1
                    HDL parameter: rst_mode = 1
                    HDL parameter: byte_order = 0
                    Parameter: addr_width = log2(depth)
                    Parameter: ram_data_width = max(data_in_width,data_out_width)

   DW_asymfifoctl_s1_sf design_library: DW03
                    HDL parameter: data_in_width
                    HDL parameter: data_out_width
                    HDL parameter: depth
                    HDL parameter: ae_level
                    HDL parameter: af_level
                    HDL parameter: err_mode = 1
                    HDL parameter: rst_mode = 1
                    HDL parameter: byte_order = 0
                    Parameter: addr_width = log2(depth)
                    Parameter: ram_data_width = max(data_in_width,data_out_width)

   DW_asymfifoctl_s2_sf design_library: DW03
                    HDL parameter: data_in_width
                    HDL parameter: data_out_width
                    HDL parameter: depth = 8
                    HDL parameter: push_ae_lvl = 2
                    HDL parameter: push_af_lvl = 2
                    HDL parameter: pop_ae_lvl = 2
                    HDL parameter: pop_af_lvl = 2
                    HDL parameter: err_mode = 0
                    HDL parameter: push_sync = 2
                    HDL parameter: pop_sync = 2
                    HDL parameter: rst_mode = 1
                    HDL parameter: byte_order = 0
                    Parameter: addr_width = log2(depth)
                    Parameter: ram_data_width = max(data_in_width,data_out_width)

   DW_bc_1          design_library: DW04
                    module type: BC1

   DW_bc_2          design_library: DW04
                    module type: BC2

   DW_bc_3          design_library: DW04
                    module type: BC3

   DW_bc_4          design_library: DW04
                    module type: BC4

   DW_bc_5          design_library: DW04
                    module type: BC5

   DW_bc_7          design_library: DW04
                    module type: BC7

   DW_bc_8          design_library: DW04
                    module type: BC8

   DW_bc_9          design_library: DW04
                    module type: BC9

   DW_bc_10         design_library: DW04
                    module type: BC10

   DW_bin2gray      design_library: DW01
                    HDL parameter: width = width('b')

   DW_bit_order     design_library: DW01
                    HDL parameter: width = 16
                    HDL parameter: bit_order = 0

   DW_bthenc        design_library: DW02

   DW_cmp           design_library: DW01
                    HDL parameter: width = max( width('A'),  width('B') )
                    module type: compare_ge_gt_le_lt_eq_ne

   DW_cmp_dx        design_library: DW01
                    HDL parameter: width = width('a')
                    HDL parameter: p1_width = width / 2

   DW_cntr_dcnto    design_library: DW03
                    HDL parameter: width
                    HDL parameter: rst_mode = 0

   DW_cntr_gray     design_library: DW03
                    HDL parameter: width = width('count')

   DW_cntr_scnto    design_library: DW03
                    HDL parameter: width
                    HDL parameter: count_to = (2^width)-1
                    HDL parameter: rst_mode = 0
                    HDL parameter: dcod_mode = 0

   DW_cntr_smod     design_library: DW03
                    HDL parameter: width
                    HDL parameter: modulus = 2^width
                    HDL parameter: rst_mode = 0

   DW_crc_p         design_library: DW04
                    HDL parameter: data_width = 16
                    HDL parameter: poly_size = 16
                    HDL parameter: crc_cfg = 7
                    HDL parameter: bit_order = 3
                    HDL parameter: poly_coef0 = 4129
                    HDL parameter: poly_coef1 = 0
                    HDL parameter: poly_coef2 = 0
                    HDL parameter: poly_coef3 = 0

   DW_crc_s         design_library: DW04
                    HDL parameter: data_width = 16
                    HDL parameter: poly_size = 16
                    HDL parameter: crc_cfg = 7
                    HDL parameter: bit_order = 3
                    HDL parameter: poly_coef0 = 4129
                    HDL parameter: poly_coef1 = 0
                    HDL parameter: poly_coef2 = 0
                    HDL parameter: poly_coef3 = 0

   DW_crc_spm       design_library: DW04
                    HDL parameter: data_width = 16
                    HDL parameter: poly_size = 16
                    HDL parameter: poly_coef0 = 4129
                    HDL parameter: poly_coef1 = 0
                    HDL parameter: poly_coef2 = 0
                    HDL parameter: poly_coef3 = 0

   DW_data_qsync_hl design_library: DW03
                    HDL parameter: width = 8
                    HDL parameter: clk_ratio = 2
                    HDL parameter: tst_mode = 0

   DW_data_qsync_lh design_library: DW03
                    HDL parameter: width = 8
                    HDL parameter: clk_ratio = 2
                    HDL parameter: reg_data_s = 1
                    HDL parameter: reg_data_d = 1
                    HDL parameter: tst_mode = 0

   DW_data_sync     design_library: DW03
                    HDL parameter: width = 8
                    HDL parameter: pend_mode = 1
                    HDL parameter: ack_delay = 1
                    HDL parameter: f_sync_type = 2
                    HDL parameter: r_sync_type = 2
                    HDL parameter: tst_mode = 0
                    HDL parameter: verif_en = 1
                    HDL parameter: send_mode = 0

   DW_data_sync_1c  design_library: DW03
                    HDL parameter: width = 8
                    HDL parameter: f_sync_type = 2
                    HDL parameter: filt_size = 1
                    HDL parameter: tst_mode = 0
                    HDL parameter: verif_en = 2
                    Parameter: max_skew_width = filt_size+1

   DW_data_sync_na  design_library: DW03
                    HDL parameter: width = 8
                    HDL parameter: f_sync_type = 2
                    HDL parameter: tst_mode = 0
                    HDL parameter: verif_en = 1
                    HDL parameter: send_mode = 0

   DW_dct_2d        design_library: DW03
                    HDL parameter: bpp = 8
                    HDL parameter: n = 8
                    HDL parameter: reg_out = 0
                    HDL parameter: tc_mode = 0
                    HDL parameter: rt_mode = 0
                    HDL parameter: idct_mode = 0
                    HDL parameter: co_a = 23170
                    HDL parameter: co_b = 32138
                    HDL parameter: co_c = 30274
                    HDL parameter: co_d = 27245
                    HDL parameter: co_e = 18205
                    HDL parameter: co_f = 12541
                    HDL parameter: co_g = 6393
                    HDL parameter: co_h = 35355
                    HDL parameter: co_i = 49039
                    HDL parameter: co_j = 46194
                    HDL parameter: co_k = 41573
                    HDL parameter: co_l = 27779
                    HDL parameter: co_m = 19134
                    HDL parameter: co_n = 9755
                    HDL parameter: co_o = 35355
                    HDL parameter: co_p = 49039
                    Parameter: inwidth = bpp+(n/2 * idct_mode)
                    Parameter: intwidth = bpp/2+bpp+4 + ((1-tc_mode)*(1-idct_mode))
                    Parameter: outwidth = bpp +(n/2 * (1-idct_mode))
                    Parameter: bitwidth = log2(n*n)

   DW_dec           design_library: DW01
                    HDL parameter: width = max( width('a'), width('sum') )
                    module type: dec

   DW_decode_en     design_library: DW01
                    HDL parameter: width = width('a')
                    Parameter: dec_width = 2**width

   DW_div           design_library: DW02
                    HDL parameter: a_width = width('a')
                    HDL parameter: b_width = width('b')
                    HDL parameter: tc_mode = 0
                    HDL parameter: rem_mode = 1
                    Parameter: quotient_width = a_width
                    Parameter: remainder_width = b_width

   DW_div_pipe      design_library: DW02
                    clocking_scheme: positive_edge
                    HDL parameter: a_width = width('a')
                    HDL parameter: b_width = width('b')
                    HDL parameter: tc_mode = 0
                    HDL parameter: rem_mode = 1
                    HDL parameter: num_stages = 2
                    HDL parameter: stall_mode = 1
                    HDL parameter: rst_mode = 1
                    HDL parameter: op_iso_mode = 0

   DW_div_seq       design_library: DW03
                    HDL parameter: a_width = width('a')
                    HDL parameter: b_width = width('b')
                    HDL parameter: tc_mode = 0
                    HDL parameter: num_cyc = 3
                    HDL parameter: rst_mode = 0
                    HDL parameter: input_mode = 1
                    HDL parameter: output_mode = 1
                    HDL parameter: early_start = 0

   DW_div_tc        design_library: DW02
                    HDL parameter: a_width = max(width('a'),width('quotient'))
                    HDL parameter: b_width = max(width('b'),width('remainder'))
                    Parameter: quotient_width = max(width('a'),width('quotient'))
                    Parameter: remainder_width = max(width('b'),width('remainder'))

   DW_div_uns       design_library: DW02
                    HDL parameter: a_width = max(width('a'),width('quotient'))
                    HDL parameter: b_width = max(width('b'),width('remainder'))
                    Parameter: quotient_width = max(width('a'),width('quotient'))
                    Parameter: remainder_width = max(width('b'),width('remainder'))

   DW_dpll_sd       design_library: DW03
                    HDL parameter: width = 1
                    HDL parameter: divisor = 1
                    HDL parameter: gain = 1
                    HDL parameter: filter = 1
                    HDL parameter: windows = 1
                    Parameter: log2_windows = log2(windows)

   DW_ecc           design_library: DW04
                    HDL parameter: width
                    HDL parameter: chkbits
                    HDL parameter: synd_sel

   DW_eq            design_library: DW01
                    HDL parameter: width = width('a')
                    module type: compare_eq

   DW_exp2          design_library: DW02
                    HDL parameter: op_width = 11
                    HDL parameter: arch = 0
                    HDL parameter: err_range = 1

   DW_fifo_2c_df    design_library: DW06
                    HDL parameter: width = 8
                    HDL parameter: ram_depth = 8
                    HDL parameter: mem_mode = 3
                    HDL parameter: f_sync_type = 2
                    HDL parameter: r_sync_type = 2
                    HDL parameter: clk_ratio = 1
                    HDL parameter: rst_mode = 0
                    HDL parameter: err_mode = 0
                    HDL parameter: tst_mode = 0
                    HDL parameter: verif_en = 1
                    HDL parameter: clr_dual_domain = 1
                    HDL parameter: arch_type = 0
                    Parameter: log2_ram_depth_p1 = log2(ram_depth+1)
                    Parameter: log2_ram_depth = log2(ram_depth)
                    Parameter: log2_fifo_depth_p1 = log2((ram_depth+1+(mem_mode % 2)+((mem_mode/2) % 2))+1)

   DW_fifo_s1_df    design_library: DW06
                    HDL parameter: width = 8
                    HDL parameter: depth = 4
                    HDL parameter: err_mode = 0
                    HDL parameter: rst_mode = 0
                    Parameter: addr_width = log2(depth)

   DW_fifo_s1_sf    design_library: DW06
                    HDL parameter: width = 8
                    HDL parameter: depth = 4
                    HDL parameter: ae_level = 1
                    HDL parameter: af_level = 1
                    HDL parameter: err_mode = 0
                    HDL parameter: rst_mode = 0

   DW_fifo_s2_sf    design_library: DW06
                    HDL parameter: width = 8
                    HDL parameter: depth = 8
                    HDL parameter: push_ae_lvl = 2
                    HDL parameter: push_af_lvl = 2
                    HDL parameter: pop_ae_lvl = 2
                    HDL parameter: pop_af_lvl = 2
                    HDL parameter: err_mode = 0
                    HDL parameter: push_sync = 2
                    HDL parameter: pop_sync = 2
                    HDL parameter: rst_mode = 0

   DW_fifoctl_2c_df design_library: DW03
                    HDL parameter: width = 8
                    HDL parameter: ram_depth = 8
                    HDL parameter: mem_mode = 3
                    HDL parameter: f_sync_type = 2
                    HDL parameter: r_sync_type = 2
                    HDL parameter: clk_ratio = 1
                    HDL parameter: ram_re_ext = 0
                    HDL parameter: err_mode = 0
                    HDL parameter: tst_mode = 0
                    HDL parameter: verif_en = 1
                    HDL parameter: clr_dual_domain = 1
                    HDL parameter: arch_type = 0
                    Parameter: log2_ram_depth_p1 = log2(ram_depth+1)
                    Parameter: log2_ram_depth = log2(ram_depth)
                    Parameter: log2_fifo_depth_p1 = log2((ram_depth+1+(mem_mode % 2)+((mem_mode/2) % 2))+1)

   DW_fifoctl_s1_df design_library: DW03
                    HDL parameter: depth = 4
                    HDL parameter: err_mode = 0
                    HDL parameter: rst_mode = 0
                    Parameter: addr_width = log2(depth)

   DW_fifoctl_s1_sf design_library: DW03
                    HDL parameter: depth = 4
                    HDL parameter: ae_level = 1
                    HDL parameter: af_level = 1
                    HDL parameter: err_mode = 0
                    HDL parameter: rst_mode = 0
                    Parameter: addr_width = log2(depth)

   DW_fifoctl_s1r   design_library: DW03
                    HDL parameter: width = 1
                    HDL parameter: depth = 1
                    HDL parameter: mem_mode = 1
                    Parameter: log2_depthM2 = log2(depth-2)
                    Parameter: log2_depth = log2(depth)

   DW_fifoctl_s2_sf design_library: DW03
                    HDL parameter: depth = 8
                    HDL parameter: push_ae_lvl = 2
                    HDL parameter: push_af_lvl = 2
                    HDL parameter: pop_ae_lvl = 2
                    HDL parameter: pop_af_lvl = 2
                    HDL parameter: err_mode = 0
                    HDL parameter: push_sync = 2
                    HDL parameter: pop_sync = 2
                    HDL parameter: rst_mode = 0
                    HDL parameter: tst_mode = 0
                    Parameter: wr_addr_width = log2(depth)
                    Parameter: push_word_count_width = log2(depth+1)

   DW_fifoctl_s2dr_sf design_library: DW03
                    HDL parameter: depth = 8
                    HDL parameter: push_ae_lvl = 2
                    HDL parameter: push_af_lvl = 2
                    HDL parameter: pop_ae_lvl = 2
                    HDL parameter: pop_af_lvl = 2
                    HDL parameter: err_mode = 0
                    HDL parameter: push_sync = 2
                    HDL parameter: pop_sync = 2
                    HDL parameter: tst_mode = 0
                    Parameter: wr_addr_width = log2(depth)
                    Parameter: push_word_count_width = log2(depth+1)

   DW_fir           design_library: DW03
                    HDL parameter: data_in_width = 8
                    HDL parameter: coef_width = 8
                    HDL parameter: data_out_width = 18
                    HDL parameter: order = 6

   DW_fir_seq       design_library: DW03
                    HDL parameter: data_in_width = 8
                    HDL parameter: coef_width = 8
                    HDL parameter: data_out_width = 18
                    HDL parameter: order = 6

   DW_fp_add        design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: ieee_compliance = 0
                    Parameter: fp_size = exp_width+sig_width+1

   DW_fp_addsub     design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: ieee_compliance = 0
                    Parameter: fp_size = exp_width+sig_width+1

   DW_fp_cmp        design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: ieee_compliance = 0
                    Parameter: fp_size = sig_width+exp_width+1

   DW_fp_div        design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: ieee_compliance = 0
                    HDL parameter: faithful_round = 0
                    Parameter: fp_width = exp_width + sig_width + 1

   DW_fp_div_seq    design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: ieee_compliance = 0
                    HDL parameter: num_cyc = 4
                    HDL parameter: rst_mode = 0
                    HDL parameter: input_mode = 1
                    HDL parameter: output_mode = 1
                    HDL parameter: early_start = 0
                    HDL parameter: internal_reg = 1
                    Parameter: fp_width = exp_width + sig_width + 1

   DW_fp_dp2        design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: ieee_compliance = 0
                    HDL parameter: arch_type = 0
                    Parameter: fp_size = exp_width+sig_width+1

   DW_fp_dp3        design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: ieee_compliance = 0
                    HDL parameter: arch_type = 0
                    Parameter: fp_size = exp_width+sig_width+1

   DW_fp_dp4        design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: ieee_compliance = 0
                    HDL parameter: arch_type = 0
                    Parameter: fp_size = exp_width+sig_width+1

   DW_fp_exp        design_library: DW02
                    HDL parameter: sig_width = 10
                    HDL parameter: exp_width = 5
                    HDL parameter: ieee_compliance = 0
                    HDL parameter: arch = 2
                    Parameter: fp_size = exp_width+sig_width+1

   DW_fp_exp2       design_library: DW02
                    HDL parameter: sig_width = 10
                    HDL parameter: exp_width = 5
                    HDL parameter: ieee_compliance = 0
                    HDL parameter: arch = 2
                    Parameter: fp_size = exp_width+sig_width+1

   DW_fp_flt2i      design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: isize = 32
                    HDL parameter: ieee_compliance = 0
                    Parameter: a_width = exp_width+sig_width+1

   DW_fp_i2flt      design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: isize = 32
                    HDL parameter: isign = 1
                    Parameter: z_width = exp_width + sig_width + 1

   DW_fp_ifp_conv   design_library: DW02
                    HDL parameter: sig_widthi = 23
                    HDL parameter: exp_widthi = 8
                    HDL parameter: sig_widtho = 25
                    HDL parameter: exp_widtho = 8
                    HDL parameter: use_denormal = 0
                    HDL parameter: use_1scmpl = 0
                    Parameter: fp_input_size = exp_widthi+sig_widthi+1
                    Parameter: ifp_output_size = exp_widtho+sig_widtho+7

   DW_fp_invsqrt    design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: ieee_compliance = 0
                    Parameter: fp_size = exp_width+sig_width+1

   DW_fp_ln         design_library: DW02
                    HDL parameter: sig_width = 10
                    HDL parameter: exp_width = 5
                    HDL parameter: ieee_compliance = 0
                    HDL parameter: extra_prec = 0
                    HDL parameter: arch = 0
                    Parameter: fp_size = exp_width+sig_width+1

   DW_fp_log2       design_library: DW02
                    HDL parameter: sig_width = 10
                    HDL parameter: exp_width = 5
                    HDL parameter: ieee_compliance = 0
                    HDL parameter: extra_prec = 0
                    HDL parameter: arch = 2
                    Parameter: fp_size = exp_width+sig_width+1

   DW_fp_mac        design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: ieee_compliance = 0
                    Parameter: fp_width = exp_width + sig_width + 1

   DW_fp_mult       design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: ieee_compliance = 0
                    Parameter: fp_width = exp_width + sig_width + 1

   DW_fp_recip      design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: ieee_compliance = 0
                    HDL parameter: faithful_round = 0
                    Parameter: fp_width = exp_width + sig_width + 1

   DW_fp_sincos     design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: ieee_compliance = 0
                    HDL parameter: pi_multiple = 1
                    HDL parameter: arch = 2
                    HDL parameter: err_range = 1
                    Parameter: fp_width = exp_width + sig_width + 1

   DW_fp_sqrt       design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: ieee_compliance = 0
                    Parameter: fp_width = exp_width + sig_width + 1

   DW_fp_square     design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: ieee_compliance = 0
                    Parameter: fp_width = exp_width + sig_width + 1

   DW_fp_sub        design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: ieee_compliance = 0
                    Parameter: fp_size = exp_width+sig_width+1

   DW_fp_sum3       design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: ieee_compliance = 0
                    HDL parameter: arch_type = 0
                    Parameter: fp_size = exp_width+sig_width+1

   DW_fp_sum4       design_library: DW02
                    HDL parameter: sig_width = 23
                    HDL parameter: exp_width = 8
                    HDL parameter: ieee_compliance = 0
                    HDL parameter: arch_type = 0
                    Parameter: fp_size = exp_width+sig_width+1

   DW_gray2bin      design_library: DW01
                    HDL parameter: width = width('g')

   DW_gray_sync     design_library: DW03
                    HDL parameter: width = 8
                    HDL parameter: offset = 0
                    HDL parameter: reg_count_d = 1
                    HDL parameter: f_sync_type = 2
                    HDL parameter: tst_mode = 0
                    HDL parameter: verif_en = 1
                    HDL parameter: pipe_delay = 0
                    HDL parameter: reg_count_s = 1
                    HDL parameter: reg_offset_count_s = 1

   DW_ifp_addsub    design_library: DW02
                    HDL parameter: sig_widthi = 17
                    HDL parameter: exp_widthi = 9
                    HDL parameter: sig_widtho = 17
                    HDL parameter: exp_widtho = 9
                    HDL parameter: use_denormal = 0
                    HDL parameter: use_1scmpl = 0
                    Parameter: ifp_input_size = exp_widthi+sig_widthi+7
                    Parameter: ifp_output_size = exp_widtho+sig_widtho+7

   DW_ifp_fp_conv   design_library: DW02
                    HDL parameter: sig_widthi = 23
                    HDL parameter: exp_widthi = 8
                    HDL parameter: sig_width = 25
                    HDL parameter: exp_width = 8
                    HDL parameter: use_denormal = 0
                    Parameter: ifp_input_size = exp_widthi+sig_widthi+7
                    Parameter: fp_output_size = exp_width+sig_width+1

   DW_ifp_mult      design_library: DW02
                    HDL parameter: sig_widthi = 23
                    HDL parameter: exp_widthi = 8
                    HDL parameter: sig_widtho = 23
                    HDL parameter: exp_widtho = 8
                    Parameter: ifp_input_size = exp_widthi+sig_widthi+7
                    Parameter: ifp_output_size = exp_widtho+sig_widtho+7

   DW_iir_dc        design_library: DW03
                    HDL parameter: data_in_width = 8
                    HDL parameter: data_out_width = 16
                    HDL parameter: frac_data_out_width = 4
                    HDL parameter: feedback_width = 12
                    HDL parameter: max_coef_width = 8
                    HDL parameter: frac_coef_width = 4
                    HDL parameter: saturation_mode = 0
                    HDL parameter: out_reg = 1

   DW_iir_sc        design_library: DW03
                    HDL parameter: data_in_width = 4
                    HDL parameter: data_out_width = 6
                    HDL parameter: frac_data_out_width = 0
                    HDL parameter: feedback_width = 8
                    HDL parameter: max_coef_width = 4
                    HDL parameter: frac_coef_width = 0
                    HDL parameter: saturation_mode = 1
                    HDL parameter: out_reg = 1
                    HDL parameter: A1_coef = -2
                    HDL parameter: A2_coef = 3
                    HDL parameter: B0_coef = 5
                    HDL parameter: B1_coef = -6
                    HDL parameter: B2_coef = -2

   DW_inc           design_library: DW01
                    HDL parameter: width = max( width('a'), width('sum') )
                    module type: inc

   DW_inc_gray      design_library: DW01
                    HDL parameter: width = width('a')

   DW_incdec        design_library: DW01
                    HDL parameter: width = max( width('a'), width('sum') )
                    module type: incdec

   DW_inv_sqrt      design_library: DW02
                    HDL parameter: a_width = 8
                    HDL parameter: prec_control = 0

   DW_leftsh        design_library: DW01
                    HDL parameter: A_width = width('A')
                    HDL parameter: SH_width = width('SH')
                    module type: unidir_left_shift

   DW_ln            design_library: DW02
                    HDL parameter: op_width = 11
                    HDL parameter: arch = 0
                    HDL parameter: err_range = 1

   DW_lod           design_library: DW01
                    HDL parameter: a_width = width('a')
                    Parameter: enc_width = log2(a_width)+1

   DW_log2          design_library: DW02
                    HDL parameter: op_width = 11
                    HDL parameter: arch = 2
                    HDL parameter: err_range = 1

   DW_lsd           design_library: DW01
                    HDL parameter: a_width = width('a')
                    Parameter: enc_width = log2(a_width)

   DW_lza           design_library: DW01
                    HDL parameter: width = width('a')
                    Parameter: count_width = log2(width)

   DW_lzd           design_library: DW01
                    HDL parameter: a_width = width('a')
                    Parameter: enc_width = log2(a_width)+1

   DW_lzod          design_library: DW01
                    HDL parameter: a_width = width('a')
                    HDL parameter: detect_1 = 0
                    Parameter: enc_width = log2(a_width)+1

   DW_mac_tc        design_library: DW02
                    HDL parameter: A_width = width('A')
                    HDL parameter: B_width = width('B')
                    Parameter: PRODUCT_width = B_width + A_width
                    module type: multiply_accumulate

   DW_mac_uns       design_library: DW02
                    HDL parameter: A_width = width('A')
                    HDL parameter: B_width = width('B')
                    Parameter: PRODUCT_width = B_width + A_width
                    module type: multiply_accumulate

   DW_minmax        design_library: DW01
                    HDL parameter: width = width('value')
                    HDL parameter: num_inputs = width('a')/width('value')
                    Parameter: a_width = width*num_inputs
                    Parameter: index_width = log2(num_inputs)

   DW_minmax2       design_library: DW01
                    HDL parameter: width = width('a')

   DW_minmax4       design_library: DW01
                    HDL parameter: width = width('a0')

   DW_mod_tc        design_library: DW02
                    HDL parameter: a_width = max(width('a'),width('quotient'))
                    HDL parameter: b_width = max(width('b'),width('remainder'))
                    Parameter: quotient_width = max(width('a'),width('quotient'))
                    Parameter: remainder_width = max(width('b'),width('remainder'))

   DW_mod_uns       design_library: DW02
                    HDL parameter: a_width = max(width('a'),width('quotient'))
                    HDL parameter: b_width = max(width('b'),width('remainder'))
                    Parameter: quotient_width = max(width('a'),width('quotient'))
                    Parameter: remainder_width = max(width('b'),width('remainder'))

   DW_mtree         design_library: DW02
                    HDL parameter: a_width = 8
                    HDL parameter: b_width = 8
                    Parameter: ppa_width = (a_width/2+1)*(b_width+2)
                    Parameter: bth_width = a_width/2+1
                    Parameter: out_width = a_width+b_width+1

   DW_mult_dx       design_library: DW02
                    HDL parameter: width = width('a')
                    HDL parameter: p1_width = width / 2
                    Parameter: product_width = width + width

   DW_mult_pipe     design_library: DW02
                    clocking_scheme: positive_edge
                    HDL parameter: a_width = width('a')
                    HDL parameter: b_width = width('b')
                    HDL parameter: num_stages = 2
                    HDL parameter: stall_mode = 1
                    HDL parameter: rst_mode = 1
                    HDL parameter: op_iso_mode = 0
                    Parameter: product_width = b_width + a_width

   DW_mult_seq      design_library: DW03
                    HDL parameter: a_width = width('a')
                    HDL parameter: b_width = width('b')
                    Parameter: product_width = b_width + a_width
                    HDL parameter: tc_mode = 0
                    HDL parameter: num_cyc = 3
                    HDL parameter: rst_mode = 0
                    HDL parameter: input_mode = 1
                    HDL parameter: output_mode = 1
                    HDL parameter: early_start = 0

   DW_mult_tc       design_library: DW02
                    HDL parameter: a_width = width('a')
                    HDL parameter: b_width = width('b')
                    Parameter: product_width = b_width + a_width
                    module type: mult

   DW_mult_uns      design_library: DW02
                    HDL parameter: a_width = width('a')
                    HDL parameter: b_width = width('b')
                    Parameter: product_width = b_width + a_width
                    module type: mult

   DW_ne            design_library: DW01
                    HDL parameter: width = width('a')
                    module type: compare_ne

   DW_norm          design_library: DW01
                    HDL parameter: a_width = 8
                    HDL parameter: srch_wind = 8
                    HDL parameter: exp_width = 4
                    HDL parameter: exp_ctr = 0

   DW_norm_rnd      design_library: DW01
                    HDL parameter: a_width = 16
                    HDL parameter: srch_wind = 4
                    HDL parameter: exp_width = 4
                    HDL parameter: b_width = 10
                    HDL parameter: exp_ctr = 0

   DW_or_tree       design_library: DW01
                    HDL parameter: width = width('a')

   DW_pipe_reg      design_library: DW03
                    HDL parameter: depth = 0
                    HDL parameter: width = 1
                    HDL parameter: rst_mode = 0

   DW_piped_mac     design_library: DW03
                    HDL parameter: a_width = 8
                    HDL parameter: b_width = 8
                    HDL parameter: acc_width = 16
                    HDL parameter: tc = 0
                    HDL parameter: pipe_reg = 0
                    HDL parameter: id_width = 1
                    HDL parameter: no_pm = 0
                    HDL parameter: op_iso_mode = 0

   DW_pl_reg        design_library: DW03
                    HDL parameter: width = 8
                    HDL parameter: in_reg = 0
                    HDL parameter: stages = 4
                    HDL parameter: out_reg = 0
                    HDL parameter: rst_mode = 0
                    Parameter: pre_enable_width = in_reg + stages + out_reg - 1
                    Parameter: enable_width = max(1, pre_enable_width)

   DW_prod_sum_pipe design_library: DW02
                    clocking_scheme: positive_edge
                    HDL parameter: a_width = 2
                    HDL parameter: b_width = 2
                    HDL parameter: num_inputs = 2
                    HDL parameter: sum_width = 5
                    HDL parameter: num_stages = 2
                    HDL parameter: stall_mode = 1
                    HDL parameter: rst_mode = 1
                    HDL parameter: op_iso_mode = 0
                    Parameter: a_vector_width = num_inputs * a_width
                    Parameter: b_vector_width = num_inputs * b_width

   DW_prod_sum_tc   design_library: DW02
                    HDL parameter: A_width = width('A')
                    HDL parameter: B_width = width('B')
                    HDL parameter: num_inputs
                    HDL parameter: SUM_width = width('SUM')
                    Parameter: A_vector_width = num_inputs * A_width
                    Parameter: B_vector_width = num_inputs * B_width

   DW_prod_sum_uns  design_library: DW02
                    HDL parameter: A_width = width('A')
                    HDL parameter: B_width = width('B')
                    HDL parameter: num_inputs
                    HDL parameter: SUM_width = width('SUM')
                    Parameter: A_vector_width = num_inputs * A_width
                    Parameter: B_vector_width = num_inputs * B_width

   DW_pulse_sync    design_library: DW03
                    HDL parameter: reg_event = 1
                    HDL parameter: f_sync_type = 2
                    HDL parameter: tst_mode = 0
                    HDL parameter: verif_en = 1
                    HDL parameter: pulse_mode = 0

   DW_pulseack_sync design_library: dw03
                    HDL parameter: reg_event = 1
                    HDL parameter: reg_ack = 1
                    HDL parameter: ack_delay = 1
                    HDL parameter: f_sync_type = 2
                    HDL parameter: r_sync_type = 2
                    HDL parameter: tst_mode = 0
                    HDL parameter: verif_en = 1
                    HDL parameter: pulse_mode = 0

   DW_ram_2r_w_a_dff design_library: DW06
                    HDL parameter: data_width = max( width('data_in'), width('data_rd1_out'), width('data_rd2_out'))
                    HDL parameter: depth = max( 2 ** width('wr_addr'), 2 ** width('rd1_addr'), 2 ** width('rd2_addr'))
                    HDL parameter: rst_mode = 1
                    Parameter: addr_width = log2(depth)

   DW_ram_2r_w_a_lat design_library: DW06
                    HDL parameter: data_width = max( width('data_in'), width('data_rd1_out'), width('data_rd2_out'))
                    HDL parameter: depth = max( 2 ** width('wr_addr'), 2 ** width('rd1_addr'), 2 ** width('rd2_addr'))
                    HDL parameter: rst_mode = 1
                    Parameter: addr_width = log2(depth)

   DW_ram_2r_w_s_dff design_library: DW06
                    clocking_scheme: positive_edge
                    HDL parameter: data_width = max( width('data_in'), width('data_rd1_out'), width('data_rd2_out'))
                    HDL parameter: depth = max( 2 ** width('rd1_addr'), 2 ** width('wr_addr'), 2 ** width('rd2_addr') )
                    HDL parameter: rst_mode = 1
                    Parameter: addr_width = log2(depth)

   DW_ram_2r_w_s_lat design_library: DW06
                    clocking_scheme: positive_edge
                    HDL parameter: data_width = max( width('data_in'), width('data_rd1_out'), width('data_rd2_out'))
                    HDL parameter: depth = max( 2 ** width('rd1_addr'), 2 ** width('wr_addr'), 2 ** width('rd2_addr') )
                    Parameter: addr_width = log2(depth)

   DW_ram_r_w_2c_dff design_library: DW06
                    HDL parameter: width = 8
                    HDL parameter: depth = 4
                    HDL parameter: addr_width = log2(depth)
                    HDL parameter: mem_mode = 1
                    HDL parameter: rst_mode = 0

   DW_ram_r_w_a_dff design_library: DW06
                    HDL parameter: data_width = max( width('data_in'), width('data_out') )
                    HDL parameter: depth = max( 2 ** width('rd_addr'), 2 ** width('wr_addr'))
                    HDL parameter: rst_mode = 1
                    Parameter: addr_width = log2(depth)

   DW_ram_r_w_a_lat design_library: DW06
                    HDL parameter: data_width = max( width('data_in'), width('data_out') )
                    HDL parameter: depth = max(2 ** width('rd_addr'), 2 ** width('wr_addr'))
                    HDL parameter: rst_mode = 1
                    Parameter: addr_width = log2(depth)

   DW_ram_r_w_s_dff design_library: DW06
                    clocking_scheme: positive_edge
                    HDL parameter: data_width = max( width('data_in'), width('data_out') )
                    HDL parameter: depth = max( 2 ** width('rd_addr'), 2 ** width('wr_addr') )
                    HDL parameter: rst_mode = 1
                    Parameter: addr_width = log2(depth)

   DW_ram_r_w_s_lat design_library: DW06
                    clocking_scheme: positive_edge
                    HDL parameter: data_width = max( width('data_in'), width('data_out') )
                    HDL parameter: depth = max( 2 ** width('rd_addr'), 2 ** width('wr_addr') )
                    Parameter: addr_width = log2(depth)

   DW_ram_rw_a_dff  design_library: DW06
                    HDL parameter: data_width = max( width('data_in'), width('data_out') )
                    HDL parameter: depth = 2 ** width('rw_addr')
                    HDL parameter: rst_mode = 1
                    Parameter: addr_width = log2(depth)

   DW_ram_rw_a_lat  design_library: DW06
                    HDL parameter: data_width = max( width('data_in'), width('data_out') )
                    HDL parameter: depth = 2 ** width('rw_addr')
                    HDL parameter: rst_mode = 1
                    Parameter: addr_width = log2(depth)

   DW_ram_rw_s_dff  design_library: DW06
                    clocking_scheme: positive_edge
                    HDL parameter: data_width = max( width('data_in'), width('data_out') )
                    HDL parameter: depth = 2 ** width('rw_addr')
                    HDL parameter: rst_mode = 1
                    Parameter: addr_width = log2(depth)

   DW_ram_rw_s_lat  design_library: DW06
                    clocking_scheme: positive_edge
                    HDL parameter: data_width = max( width('data_in'), width('data_out') )
                    HDL parameter: depth = 2 ** width('rw_addr')
                    Parameter: addr_width = log2(depth)

   DW_reset_sync    design_library: DW03
                    HDL parameter: f_sync_type = 2
                    HDL parameter: r_sync_type = 2
                    HDL parameter: clk_d_faster = 1
                    HDL parameter: reg_in_prog = 1
                    HDL parameter: tst_mode = 0
                    HDL parameter: verif_en = 1

   DW_rightsh       design_library: DW01
                    HDL parameter: A_width = width('A')
                    HDL parameter: SH_width = width('SH')
                    module type: unidir_right_shift

   DW_shifter       design_library: DW01
                    HDL parameter: data_width = width('data_in')
                    HDL parameter: sh_width = width('sh')
                    HDL parameter: inv_mode = 0
                    Parameter: sh_width_uplmt = log2(data_width)+1

   DW_sincos        design_library: DW02
                    HDL parameter: A_width = 24
                    HDL parameter: WAVE_width = 25
                    HDL parameter: arch = 0
                    HDL parameter: err_range = 1

   DW_sqrt          design_library: DW02
                    HDL parameter: width = width('a')
                    HDL parameter: tc_mode = 0
                    Parameter: root_width = (width+1)/2

   DW_sqrt_pipe     design_library: DW02
                    clocking_scheme: positive_edge
                    HDL parameter: width = width('a')
                    HDL parameter: tc_mode = 0
                    HDL parameter: num_stages = 2
                    HDL parameter: stall_mode = 1
                    HDL parameter: rst_mode = 1
                    HDL parameter: op_iso_mode = 0
                    Parameter: root_width = (width+1)/2

   DW_sqrt_rem      design_library: DW02
                    HDL parameter: width = 8
                    HDL parameter: tc_mode = 0
                    Parameter: r_width = (width+1)/2
                    Parameter: rm_width = (width+1)/2 + 1

   DW_sqrt_seq      design_library: DW03
                    HDL parameter: width = width('a')
                    Parameter: root_width = (width+1)/2
                    HDL parameter: tc_mode = 0
                    HDL parameter: num_cyc = 3
                    HDL parameter: rst_mode = 0
                    HDL parameter: input_mode = 1
                    HDL parameter: output_mode = 1
                    HDL parameter: early_start = 0

   DW_sqrt_tc       design_library: DW02
                    HDL parameter: width = width('a')
                    Parameter: root_width = (width+1)/2

   DW_sqrt_uns      design_library: DW02
                    HDL parameter: width = width('a')
                    Parameter: root_width = (width+1)/2

   DW_square        design_library: DW02
                    HDL parameter: width = width('a')
                    Parameter: sqr_width = 2 * width

   DW_squarep       design_library: DW02
                    HDL parameter: width = width('a')
                    Parameter: sqr_width = 2 * width

   DW_stack         design_library: DW06
                    HDL parameter: width
                    HDL parameter: depth
                    HDL parameter: err_mode = 0
                    HDL parameter: rst_mode = 0

   DW_stackctl      design_library: DW03
                    HDL parameter: depth
                    HDL parameter: err_mode = 0
                    HDL parameter: rst_mode = 0
                    Parameter: addr_width = log2(depth)

   DW_stream_sync   design_library: DW03
                    HDL parameter: width = 8
                    HDL parameter: depth = 4
                    HDL parameter: prefill_lvl = 0
                    HDL parameter: f_sync_type = 2
                    HDL parameter: reg_stat = 1
                    HDL parameter: tst_mode = 0
                    HDL parameter: verif_en = 1
                    HDL parameter: r_sync_type = 2
                    HDL parameter: clk_d_faster = 1
                    HDL parameter: reg_in_prog = 1

   DW_sync          design_library: DW03
                    HDL parameter: width = 8
                    HDL parameter: f_sync_type = 2
                    HDL parameter: tst_mode = 0
                    HDL parameter: verif_en = 1

   DW_tap           design_library: DW04
                    HDL parameter: width
                    HDL parameter: id = 0
                    HDL parameter: version = 0
                    HDL parameter: part = 0
                    HDL parameter: man_num = 0
                    HDL parameter: sync_mode = 0
                    Parameter: sub_width = width-1
                    module type: TAP

   DW_tap_uc        design_library: DW04
                    HDL parameter: width
                    HDL parameter: id = 0
                    HDL parameter: idcode_opcode = 0
                    HDL parameter: version = 0
                    HDL parameter: part = 0
                    HDL parameter: man_num = 0
                    HDL parameter: sync_mode = 0
                    Parameter: sub_width = width-1
                    Parameter: max_opcode = 2**(min(width,30))
                    module type: TAP_UC

   DW_tap_uc2       design_library: DW04
                    HDL parameter: width
                    HDL parameter: id = 0
                    HDL parameter: idcode_opcode = 0
                    HDL parameter: version = 0
                    HDL parameter: part = 0
                    HDL parameter: man_num = 0
                    HDL parameter: sync_mode = 0
                    Parameter: sub_width = width-1
                    Parameter: max_opcode = 2**(min(width,30))
                    module type: TAP_UC2

   DW_thermdec      design_library: DW01
                    HDL parameter: width = width('a')
                    Parameter: dec_width = 2**width

   DW_wc_d1_s       design_library: DW04
                    HDL parameter: rst_mode = 0
                    module type: WC_D1_S

   DW_wc_s1_s       design_library: DW04
                    HDL parameter: rst_mode = 0
                    module type: WC_S1_S

   DWsc_fifoctl_dif design_library: DW03
                    HDL parameter: width = 8
                    HDL parameter: ram_depth = 8
                    HDL parameter: mem_mode = 5
                    HDL parameter: ram_re_ext = 1
                    HDL parameter: err_mode = 0
                    HDL parameter: arch_type = 0
                    Parameter: log2_ram_depth_p1 = log2(ram_depth+1)
                    Parameter: log2_fifo_depth_p1 = log2((ram_depth+1+(mem_mode % 2)+((mem_mode/2) % 2))+1)
                    Parameter: inuse_width = ((mem_mode % 2)+((mem_mode/2) % 2))+1
                    Parameter: inuse_cnt_width = (inuse_width == 1) ? 1 : 2

   DWsc_fifoctl_s1_df design_library: DW03
                    HDL parameter: depth = 4
                    HDL parameter: err_mode = 0
                    HDL parameter: addr_width = 2
                    HDL parameter: gang_all_status = 0

   DWsc_fifoctl_sif design_library: DW03
                    HDL parameter: ram_depth = 8
                    HDL parameter: mem_mode = 5
                    HDL parameter: err_mode = 0
                    Parameter: log2_ram_depth_p1 = log2(ram_depth+1)
                    Parameter: log2_fifo_depth_p1 = log2((ram_depth+1+(mem_mode % 2)+((mem_mode/2) % 2))+1)
                    Parameter: inuse_width = ((mem_mode % 2)+((mem_mode/2) % 2))+1
                    Parameter: inuse_cnt_width = (inuse_width == 1) ? 1 : 2


Module Pins:

     Attributes:
       c - clock_pin
                                             Default Stall      Pin
   Module           Pins     Dir  Width      Value   Pin        Attributes
   ----------------------------------------------------------------------
   DW01_binenc      A        in   A_width                       
                    ADDR     out  ADDR_width                    

   DW01_bsh         A        in   A_width                       
                    SH       in   SH_width                      
                    B        out  A_width                       

   DW01_csa         a        in   width                         
                    b        in   width                         
                    c        in   width                         
                    ci       in   1                             
                    carry    out  width                         
                    sum      out  width                         
                    co       out  1                             

   DW01_mux_any     A        in   A_width                       
                    SEL      in   SEL_width                     
                    MUX      out  MUX_width                     

   DW01_prienc      A        in   A_width                       
                    INDEX    out  INDEX_width                   

   DW01_satrnd      din      in   width                         
                    tc       in   1                             
                    sat      in   1                             
                    rnd      in   1                             
                    ov       out  1                             
                    dout     out  dout_width                    

   DW02_booth       A        in   n                             
                    TC       in   1                             
                    A_coded  out  e                             

   DW02_cos         A        in   A_width                       
                    COS      out  cos_width                     

   DW02_mac         A        in   A_width                       
                    B        in   B_width                       
                    C        in   PRODUCT_width                 
                    TC       in   1                             
                    MAC      out  PRODUCT_width                 

   DW02_mult_2_stage A       in   A_width                       
                    B        in   B_width                       
                    TC       in   1                             
                    CLK      in   1                             c
                    PRODUCT  out  PRODUCT_width                 

   DW02_mult_3_stage A       in   A_width                       
                    B        in   B_width                       
                    TC       in   1                             
                    CLK      in   1                             c
                    PRODUCT  out  PRODUCT_width                 

   DW02_mult_4_stage A       in   A_width                       
                    B        in   B_width                       
                    TC       in   1                             
                    CLK      in   1                             c
                    PRODUCT  out  PRODUCT_width                 

   DW02_mult_5_stage A       in   A_width                       
                    B        in   B_width                       
                    TC       in   1                             
                    CLK      in   1                             c
                    PRODUCT  out  PRODUCT_width                 

   DW02_mult_6_stage A       in   A_width                       
                    B        in   B_width                       
                    TC       in   1                             
                    CLK      in   1                             c
                    PRODUCT  out  PRODUCT_width                 

   DW02_multp       a        in   a_width                       
                    b        in   b_width                       
                    tc       in   1                             
                    out0     out  out_width                     
                    out1     out  out_width                     

   DW02_prod_sum    A        in   A_vector_width                
                    B        in   B_vector_width                
                    TC       in   1                             
                    SUM      out  SUM_width                     

   DW02_prod_sum1   A        in   A_width                       
                    B        in   B_width                       
                    C        in   SUM_width                     
                    TC       in   1                             
                    SUM      out  SUM_width                     

   DW02_sin         A        in   A_width                       
                    SIN      out  sin_width                     

   DW02_sincos      A        in   A_width                       
                    SIN_COS  in   1                             
                    WAVE     out  wave_width                    

   DW02_sum         INPUT    in   vector_width                  
                    SUM      out  input_width                   

   DW02_tree        INPUT    in   vector_width                  
                    OUT0     out  input_width                   
                    OUT1     out  input_width                   

   DW03_bictr_dcnto data     in   width                         
                    count_to in   width                         
                    up_dn    in   1                             
                    load     in   1                             
                    cen      in   1                             
                    clk      in   1                             
                    reset    in   1                             
                    count    out  width                         
                    tercnt   out  1                             

   DW03_bictr_decode data    in   width                         
                    up_dn    in   1                             
                    load     in   1                             
                    cen      in   1                             
                    clk      in   1                             
                    reset    in   1                             
                    count_dec out dec_width                     
                    tercnt   out  1                             

   DW03_bictr_scnto data     in   width                         
                    up_dn    in   1                             
                    load     in   1                             
                    cen      in   1                             
                    clk      in   1                             
                    reset    in   1                             
                    count    out  width                         
                    tercnt   out  1                             

   DW03_lfsr_dcnto  data     in   width                         
                    count_to in   width                         
                    load     in   1                             
                    cen      in   1                             
                    clk      in   1                             
                    reset    in   1                             
                    count    out  width                         
                    tercnt   out  1                             

   DW03_lfsr_load   data     in   width                         
                    load     in   1                             
                    cen      in   1                             
                    clk      in   1                             
                    reset    in   1                             
                    count    out  width                         

   DW03_lfsr_scnto  data     in   width                         
                    load     in   1                             
                    cen      in   1                             
                    clk      in   1                             
                    reset    in   1                             
                    count    out  width                         
                    tercnt   out  1                             

   DW03_lfsr_updn   updn     in   1                             
                    cen      in   1                             
                    clk      in   1                             
                    reset    in   1                             
                    count    out  width                         
                    tercnt   out  1                             

   DW03_pipe_reg    A        in   width                         
                    clk      in   1                             
                    B        out  width                         

   DW03_reg_s_pl    d        in   width                         
                    clk      in   1                             
                    reset_N  in   1                             
                    enable   in   1                             
                    q        out  width                         

   DW03_shftreg     clk      in   1                             
                    s_in     in   1                             
                    p_in     in   length                        
                    shift_n  in   1                             
                    load_n   in   1                             
                    p_out    out  length                        

   DW03_updn_ctr    data     in   width                         
                    up_dn    in   1                             
                    load     in   1                             
                    cen      in   1                             
                    clk      in   1                             
                    reset    in   1                             
                    count    out  width                         
                    tercnt   out  1                             

   DW04_par_gen     datain   in   width                         
                    parity   out  1                             

   DW04_shad_reg    datain   in   width                         
                    sys_clk  in   1                             
                    shad_clk in   1                             
                    reset    in   1                             
                    SI       in   1                             
                    SE       in   1                             
                    sys_out  out  width                         
                    shad_out out  width                         
                    SO       out  1                             

   DW_8b10b_dec     clk      in   1                             
                    rst_n    in   1                             
                    init_rd_n in  1                             
                    init_rd_val in 1                            
                    data_in  in   data_in_width                 
                    error    out  1                             
                    rd       out  1                             
                    k_char   out  bytes                         
                    data_out out  data_out_width                
                    rd_err   out  1                             
                    code_err out  1                             
                    enable   in   1                             
                    rd_err_bus out bytes                        
                    code_err_bus out bytes                      

   DW_8b10b_enc     clk      in   1                             
                    rst_n    in   1                             
                    init_rd_n in  1                             
                    init_rd_val in 1                            
                    k_char   in   bytes                         
                    data_in  in   enc_data_in_width             
                    rd       out  1                             
                    data_out out  enc_data_out_width            
                    enable   in   1                             

   DW_8b10b_unbal   k_char   in   1                             
                    data_in  in   8                             
                    unbal    out  1                             

   DW_ASYMFIFOCTL_IN_WRAPPER clk in 1                           
                    rst_n    in   1                             
                    push_req_n in 1                             
                    flush_n  in   1                             
                    pop_req_n in  1                             
                    nxt_ram_error in 1                          
                    ram_full in   1                             
                    nxt_ram_full in 1                           
                    byte_ctl_addr in byte_ctl_addr_width        
                    data_in  in   data_in_width                 
                    ram_push_n out 1                            
                    flush_act_n out 1                           
                    inc_byte_cntr out 1                         
                    full     out  1                             
                    error    out  1                             
                    part_wd  out  1                             
                    wr_data  out  data_out_width                
                    cntr_ld_data out buf_addr_width             

   DW_ASYMFIFOCTL_OUT_WRAPPER clk in 1                          
                    rst_n    in   1                             
                    pop_req_n in  1                             
                    nxt_ram_error in 1                          
                    buf_empty in  1                             
                    ram_empty in  1                             
                    mux_ctl_addr in ctl_addr_width              
                    rd_data  in   ram_data_width                
                    inc_byte_cntr out 1                         
                    ram_pop_n out 1                             
                    error    out  1                             
                    data_out out  data_out_width                

   DW_ASYMFIFOCTL_S2SF_INWRP clk_push in 1                      
                    rst_n    in   1                             
                    push_req_n in 1                             
                    flush_n  in   1                             
                    data_in  in   data_in_width                 
                    rd_addr_g in  pntr_width                    
                    ram_push_n out 1                            
                    push_empty out 1                            
                    push_ae  out  1                             
                    push_hf  out  1                             
                    push_af  out  1                             
                    push_full out 1                             
                    ram_full out  1                             
                    part_wd  out  1                             
                    push_error out 1                            
                    wr_data  out  ram_data_width                
                    wr_addr  out  addr_width                    
                    wr_addr_g out pntr_width                    

   DW_ASYMFIFOCTL_S2SF_OUTWRP clk_pop in 1                      
                    rst_n    in   1                             
                    pop_req_n in  1                             
                    rd_data  in   ram_data_width                
                    wr_addr_g in  pntr_width                    
                    pop_empty out 1                             
                    pop_ae   out  1                             
                    pop_hf   out  1                             
                    pop_af   out  1                             
                    pop_full out  1                             
                    pop_error out 1                             
                    rd_addr  out  addr_width                    
                    rd_addr_g out pntr_width                    
                    data_out out  data_out_width                

   DW_BYPASS        capture_clk in 1                            
                    capture_en in 1                             
                    shift_dr in   1                             
                    capture_dr in 1                             
                    tdi      in   1                             
                    so       out  1                             

   DW_CAPTURE       capture_clk in 1                            
                    capture_en in 1                             
                    shift_dr in   1                             
                    si       in   1                             
                    data_in  in   1                             
                    so       out  1                             

   DW_CAPUP         capture_clk in 1                            
                    update_clk in 1                             
                    capture_en in 1                             
                    update_en in  1                             
                    shift_dr in   1                             
                    si       in   1                             
                    data_in  in   1                             
                    data_out out  1                             
                    so       out  1                             

   DW_FIFOCTL_IF    clk      in   1                             
                    rst_n    in   1                             
                    init_n   in   1                             
                    inc_req_n in  1                             
                    other_addr_g in other_addr_g_width          
                    word_count out other_addr_g_width           
                    empty    out  1                             
                    almost_empty out 1                          
                    half_full out 1                             
                    almost_full out 1                           
                    full     out  1                             
                    error    out  1                             
                    this_addr out this_addr_width               
                    this_addr_g out other_addr_g_width          
                    next_word_count out other_addr_g_width      
                    next_empty_n out 1                          
                    next_full out 1                             
                    next_error out 1                            
                    test     in   1                             

   DW_FIR_SEQ_AU    D        in   D_width                       
                    C        in   C_width                       
                    S        in   Y_width                       
                    clk      in   1                             
                    rst_n    in   1                             
                    run      in   1                             
                    start    in   1                             
                    hold     in   1                             
                    TC       in   1                             
                    Y        out  Y_width                       

   DW_FIR_SEQ_CSR   CIN      in   C_width                       
                    raddr    in   addr_width                    
                    clk      in   1                             
                    rst_n    in   1                             
                    coef_shift_en in 1                          
                    COUT     out  C_width                       

   DW_FIR_SEQ_CTL   clk      in   1                             
                    rst_n    in   1                             
                    run      in   1                             
                    coef_shift_en in 1                          
                    dw_addr  out  addr_width                    
                    dr_addr  out  addr_width                    
                    c_addr   out  addr_width                    
                    start    out  1                             
                    hold     out  1                             

   DW_FIR_SEQ_DSR   DIN      in   D_width                       
                    raddr    in   addr_width                    
                    waddr    in   addr_width                    
                    clk      in   1                             
                    rst_n    in   1                             
                    wen      in   1                             
                    DOUT     out  D_width                       

   DW_FP_ALIGN      a        in   a_width                       
                    sh       in   sh_width                      
                    b        out  a_width                       
                    stk      out  1                             

   DW_IDREG         capture_clk in 1                            
                    capture_en in 1                             
                    shift_dr in   1                             
                    si       in   1                             
                    so       out  1                             

   DW_IDREGUC       capture_clk in 1                            
                    capture_en in 1                             
                    shift_dr in   1                             
                    si       in   1                             
                    user_code_sel in 1                          
                    user_code_val in 32                         
                    ver      in   4                             
                    ver_sel  in   1                             
                    part_num in   16                            
                    part_num_sel in 1                           
                    mnfr_id  in   11                            
                    mnfr_id_sel in 1                            
                    so       out  1                             

   DW_INSTRREG      capture_clk in 1                            
                    update_clk in 1                             
                    test_logic_rst in 1                         
                    capture_en in 1                             
                    update_en in  1                             
                    shift_ir in   1                             
                    si       in   1                             
                    init_instr_value in width                   
                    sentinel_val in width                       
                    instruction_out out width                   
                    so       out  1                             
                    instruction_shift out width                 

   DW_MEM_2R_W_A_DFF rst_n   in   1                             
                    wr_n     in   1                             
                    test_mode in  1                             
                    test_clk in   1                             
                    rd1_addr in   log2_depth                    
                    rd2_addr in   log2_depth                    
                    wr_addr_dec in depth                        
                    data_in  in   data_width                    
                    data_rd1_out out data_width                 
                    data_rd2_out out data_width                 

   DW_MEM_2R_W_A_LAT rst_n   in   1                             
                    wr_n     in   1                             
                    rd1_addr in   log2_depth                    
                    rd2_addr in   log2_depth                    
                    wr_addr  in   depth                         
                    data_in  in   data_width                    
                    data_rd1_out out data_width                 
                    data_rd2_out out data_width                 

   DW_MEM_2R_W_S_DFF clk     in   1                             c
                    rst_n    in   1                             
                    wr_n     in   1                             
                    rd1_addr in   log2_depth                    
                    rd2_addr in   log2_depth                    
                    wr_addr  in   depth                         
                    data_in  in   data_width                    
                    data_rd1_out out data_width                 
                    data_rd2_out out data_width                 

   DW_MEM_2R_W_S_LAT clk     in   1                             c
                    wr_n     in   1                             
                    rd1_addr in   log2_depth                    
                    rd2_addr in   log2_depth                    
                    wr_addr  in   depth                         
                    data_in  in   data_width                    
                    data_rd1_out out data_width                 
                    data_rd2_out out data_width                 

   DW_MEM_RW_A_DFF  rst_n    in   1                             
                    wr_n     in   1                             
                    test_mode in  1                             
                    test_clk in   1                             
                    rw_addr  in   depth                         
                    data_in  in   data_width                    
                    data_out out  data_width                    

   DW_MEM_RW_A_LAT  rst_n    in   1                             
                    wr_n     in   1                             
                    rw_addr  in   depth                         
                    data_in  in   data_width                    
                    data_out out  data_width                    

   DW_MEM_RW_S_DFF  clk      in   1                             c
                    rst_n    in   1                             
                    wr_n     in   1                             
                    rw_addr  in   depth                         
                    data_in  in   data_width                    
                    data_out out  data_width                    

   DW_MEM_RW_S_LAT  clk      in   1                             c
                    wr_n     in   1                             
                    rw_addr  in   depth                         
                    data_in  in   data_width                    
                    data_out out  data_width                    

   DW_MEM_R_W_A_DFF rst_n    in   1                             
                    wr_n     in   1                             
                    test_mode in  1                             
                    test_clk in   1                             
                    rd_addr  in   log2_depth                    
                    wr_addr  in   depth                         
                    data_in  in   data_width                    
                    data_out out  data_width                    

   DW_MEM_R_W_A_LAT rst_n    in   1                             
                    wr_n     in   1                             
                    rd_addr  in   log2_depth                    
                    wr_addr  in   depth                         
                    data_in  in   data_width                    
                    data_out out  data_width                    

   DW_MEM_R_W_S_DFF clk      in   1                             c
                    rst_n    in   1                             
                    wr_n     in   1                             
                    rd_addr  in   log2_depth                    
                    wr_addr  in   depth                         
                    data_in  in   data_width                    
                    data_out out  data_width                    

   DW_MEM_R_W_S_LAT clk      in   1                             c
                    wr_n     in   1                             
                    rd_addr  in   log2_depth                    
                    wr_addr  in   depth                         
                    data_in  in   data_width                    
                    data_out out  data_width                    

   DW_MULTP_SC      a        in   a_width                       
                    b        in   b_width                       
                    tc       in   1                             
                    out0     out  out_width                     
                    out1     out  out_width                     

   DW_PREFIX_AND    pi       in   width                         
                    po       out  width                         

   DW_PREFIX_ANDOR  gi       in   width                         
                    pi       in   width                         
                    go       out  width                         
                    po       out  width                         

   DW_PREFIX_OR     pi       in   width                         
                    po       out  width                         

   DW_PREFIX_XOR    pi       in   width                         
                    po       out  width                         

   DW_PRIORITY_CODER A       in   A_width                       
                    DEC      out  A_width                       
                    ENC      out  ENC_width                     

   DW_TAPFSM        tck      in   1                             
                    trst_n   in   1                             
                    tms      in   1                             
                    clock_dr out  1                             
                    dr_sel   out  1                             
                    clock_ir out  1                             
                    shift_dr out  1                             
                    shift_ir out  1                             
                    update_dr out 1                             
                    update_ir out 1                             
                    instr_rst out 1                             
                    state    out  16                            
                    test     in   1                             

   DW_addsub_dx     a        in   width                         
                    b        in   width                         
                    ci1      in   1                             
                    ci2      in   1                             
                    addsub   in   1                             
                    tc       in   1                             
                    sat      in   1                             
                    avg      in   1                             
                    dplx     in   1                             
                    sum      out  width                         
                    co1      out  1                             
                    co2      out  1                             

   DW_and_tree      a        in   width                         
                    b        out  1                             

   DW_arb_2t        clk      in   1                             
                    rst_n    in   1                             
                    init_n   in   1                             
                    enable   in   1                             
                    request  in   n                             
                    prior    in   priority_width                
                    lock     in   n                             
                    mask     in   n                             
                    parked   out  1                             
                    granted  out  1                             
                    locked   out  1                             
                    grant    out  n                             
                    grant_index out index_width                 

   DW_arb_dp        clk      in   1                             
                    rst_n    in   1                             
                    init_n   in   1                             
                    enable   in   1                             
                    request  in   n                             
                    prior    in   priority_width                
                    lock     in   n                             
                    mask     in   n                             
                    parked   out  1                             
                    granted  out  1                             
                    locked   out  1                             
                    grant    out  n                             
                    grant_index out index_width                 

   DW_arb_fcfs      clk      in   1                             
                    rst_n    in   1                             
                    init_n   in   1                             
                    enable   in   1                             
                    request  in   n                             
                    lock     in   n                             
                    mask     in   n                             
                    parked   out  1                             
                    granted  out  1                             
                    locked   out  1                             
                    grant    out  n                             
                    grant_index out index_width                 

   DW_arb_rr        clk      in   1                             
                    rst_n    in   1                             
                    init_n   in   1                             
                    enable   in   1                             
                    request  in   n                             
                    mask     in   n                             
                    granted  out  1                             
                    grant    out  n                             
                    grant_index out grant_index_width           

   DW_arb_sp        clk      in   1                             
                    rst_n    in   1                             
                    init_n   in   1                             
                    enable   in   1                             
                    request  in   n                             
                    lock     in   n                             
                    mask     in   n                             
                    parked   out  1                             
                    locked   out  1                             
                    granted  out  1                             
                    grant    out  n                             
                    grant_index out index_width                 

   DW_asymdata_inbuf clk_push in  1                             
                    rst_push_n in 1                             
                    init_push_n in 1                            
                    push_req_n in 1                             
                    data_in  in   in_width                      
                    flush_n  in   1                             
                    fifo_full in  1                             
                    push_wd_n out 1                             
                    data_out out  out_width                     
                    inbuf_full out 1                            
                    part_wd  out  1                             
                    push_error out 1                            

   DW_asymdata_outbuf clk_pop in  1                             
                    rst_pop_n in  1                             
                    init_pop_n in 1                             
                    pop_req_n in  1                             
                    data_in  in   in_width                      
                    fifo_empty in 1                             
                    pop_wd_n out  1                             
                    data_out out  out_width                     
                    part_wd  out  1                             
                    pop_error out 1                             

   DW_asymfifo_s1_df clk     in   1                             
                    rst_n    in   1                             
                    push_req_n in 1                             
                    flush_n  in   1                             
                    pop_req_n in  1                             
                    diag_n   in   1                             
                    data_in  in   data_in_width                 
                    ae_level in   addr_width                    
                    af_thresh in  addr_width                    
                    empty    out  1                             
                    almost_empty out 1                          
                    half_full out 1                             
                    almost_full out 1                           
                    full     out  1                             
                    ram_full out  1                             
                    error    out  1                             
                    part_wd  out  1                             
                    data_out out  data_out_width                

   DW_asymfifo_s1_sf clk     in   1                             
                    rst_n    in   1                             
                    push_req_n in 1                             
                    flush_n  in   1                             
                    pop_req_n in  1                             
                    diag_n   in   1                             
                    data_in  in   data_in_width                 
                    empty    out  1                             
                    almost_empty out 1                          
                    half_full out 1                             
                    almost_full out 1                           
                    full     out  1                             
                    ram_full out  1                             
                    error    out  1                             
                    part_wd  out  1                             
                    data_out out  data_out_width                

   DW_asymfifo_s2_sf clk_push in  1                             
                    clk_pop  in   1                             
                    rst_n    in   1                             
                    push_req_n in 1                             
                    flush_n  in   1                             
                    pop_req_n in  1                             
                    data_in  in   data_in_width                 
                    push_empty out 1                            
                    push_ae  out  1                             
                    push_hf  out  1                             
                    push_af  out  1                             
                    push_full out 1                             
                    ram_full out  1                             
                    part_wd  out  1                             
                    push_error out 1                            
                    pop_empty out 1                             
                    pop_ae   out  1                             
                    pop_hf   out  1                             
                    pop_af   out  1                             
                    pop_full out  1                             
                    pop_error out 1                             
                    data_out out  data_out_width                

   DW_asymfifoctl_2c_df clk_s in  1                             
                    rst_s_n  in   1                             
                    init_s_n in   1                             
                    clr_s    in   1                             
                    ae_level_s in log2_ram_depth_p1             
                    af_level_s in log2_ram_depth_p1             
                    push_s_n in   1                             
                    flush_s_n in  1                             
                    data_s   in   data_s_width                  
                    clr_sync_s out 1                            
                    clr_in_prog_s out 1                         
                    clr_cmplt_s out 1                           
                    wr_en_s_n out 1                             
                    wr_addr_s out log2_ram_depth                
                    wr_data_s out ram_width                     
                    inbuf_part_wd_s out 1                       
                    inbuf_full_s out 1                          
                    fifo_word_cnt_s out log2_fifo_depth_p1      
                    word_cnt_s out log2_ram_depth_p1            
                    fifo_empty_s out 1                          
                    empty_s  out  1                             
                    almost_empty_s out 1                        
                    half_full_s out 1                           
                    almost_full_s out 1                         
                    ram_full_s out 1                            
                    push_error_s out 1                          
                    clk_d    in   1                             
                    rst_d_n  in   1                             
                    init_d_n in   1                             
                    clr_d    in   1                             
                    ae_level_d in log2_fifo_depth_p1            
                    af_level_d in log2_fifo_depth_p1            
                    pop_d_n  in   1                             
                    rd_data_d in  ram_width                     
                    clr_sync_d out 1                            
                    clr_in_prog_d out 1                         
                    clr_cmplt_d out 1                           
                    ram_re_d_n out 1                            
                    rd_addr_d out log2_ram_depth                
                    data_d   out  data_d_width                  
                    outbuf_part_wd_d out 1                      
                    word_cnt_d out log2_fifo_depth_p1           
                    ram_word_cnt_d out log2_ram_depth_p1        
                    empty_d  out  1                             
                    almost_empty_d out 1                        
                    half_full_d out 1                           
                    almost_full_d out 1                         
                    full_d   out  1                             
                    pop_error_d out 1                           
                    test     in   1                             

   DW_asymfifoctl_s1_df clk  in   1                             
                    rst_n    in   1                             
                    push_req_n in 1                             
                    flush_n  in   1                             
                    pop_req_n in  1                             
                    diag_n   in   1                             
                    data_in  in   data_in_width                 
                    rd_data  in   ram_data_width                
                    ae_level in   addr_width                    
                    af_thresh in  addr_width                    
                    we_n     out  1                             
                    empty    out  1                             
                    almost_empty out 1                          
                    half_full out 1                             
                    almost_full out 1                           
                    full     out  1                             
                    ram_full out  1                             
                    error    out  1                             
                    part_wd  out  1                             
                    wr_data  out  ram_data_width                
                    wr_addr  out  addr_width                    
                    rd_addr  out  addr_width                    
                    data_out out  data_out_width                

   DW_asymfifoctl_s1_sf clk  in   1                             
                    rst_n    in   1                             
                    push_req_n in 1                             
                    flush_n  in   1                             
                    pop_req_n in  1                             
                    diag_n   in   1                             
                    data_in  in   data_in_width                 
                    rd_data  in   ram_data_width                
                    we_n     out  1                             
                    empty    out  1                             
                    almost_empty out 1                          
                    half_full out 1                             
                    almost_full out 1                           
                    full     out  1                             
                    ram_full out  1                             
                    error    out  1                             
                    part_wd  out  1                             
                    wr_data  out  ram_data_width                
                    wr_addr  out  addr_width                    
                    rd_addr  out  addr_width                    
                    data_out out  data_out_width                

   DW_asymfifoctl_s2_sf clk_push in 1                           
                    clk_pop  in   1                             
                    rst_n    in   1                             
                    push_req_n in 1                             
                    flush_n  in   1                             
                    pop_req_n in  1                             
                    data_in  in   data_in_width                 
                    rd_data  in   ram_data_width                
                    we_n     out  1                             
                    push_empty out 1                            
                    push_ae  out  1                             
                    push_hf  out  1                             
                    push_af  out  1                             
                    push_full out 1                             
                    ram_full out  1                             
                    part_wd  out  1                             
                    push_error out 1                            
                    pop_empty out 1                             
                    pop_ae   out  1                             
                    pop_hf   out  1                             
                    pop_af   out  1                             
                    pop_full out  1                             
                    pop_error out 1                             
                    wr_data  out  ram_data_width                
                    wr_addr  out  addr_width                    
                    rd_addr  out  addr_width                    
                    data_out out  data_out_width                

   DW_bc_1          capture_clk in 1                            
                    update_clk in 1                             
                    capture_en in 1                             
                    update_en in  1                             
                    shift_dr in   1                             
                    mode     in   1                             
                    si       in   1                             
                    data_in  in   1                             
                    data_out out  1                             
                    so       out  1                             

   DW_bc_2          capture_clk in 1                            
                    update_clk in 1                             
                    capture_en in 1                             
                    update_en in  1                             
                    shift_dr in   1                             
                    mode     in   1                             
                    si       in   1                             
                    data_in  in   1                             
                    data_out out  1                             
                    so       out  1                             

   DW_bc_3          capture_clk in 1                            
                    capture_en in 1                             
                    shift_dr in   1                             
                    mode     in   1                             
                    si       in   1                             
                    data_in  in   1                             
                    data_out out  1                             
                    so       out  1                             

   DW_bc_4          capture_clk in 1                            
                    capture_en in 1                             
                    shift_dr in   1                             
                    si       in   1                             
                    data_in  in   1                             
                    so       out  1                             
                    data_out out  1                             

   DW_bc_5          capture_clk in 1                            
                    update_clk in 1                             
                    capture_en in 1                             
                    update_en in  1                             
                    shift_dr in   1                             
                    mode     in   1                             
                    intest   in   1                             
                    si       in   1                             
                    data_in  in   1                             
                    data_out out  1                             
                    so       out  1                             

   DW_bc_7          capture_clk in 1                            
                    update_clk in 1                             
                    capture_en in 1                             
                    update_en in  1                             
                    shift_dr in   1                             
                    mode1    in   1                             
                    mode2    in   1                             
                    si       in   1                             
                    pin_input in  1                             
                    control_out in 1                            
                    output_data in 1                            
                    ic_input out  1                             
                    data_out out  1                             
                    so       out  1                             

   DW_bc_8          capture_clk in 1                            
                    update_clk in 1                             
                    capture_en in 1                             
                    update_en in  1                             
                    shift_dr in   1                             
                    mode     in   1                             
                    si       in   1                             
                    pin_input in  1                             
                    output_data in 1                            
                    ic_input out  1                             
                    data_out out  1                             
                    so       out  1                             

   DW_bc_9          capture_clk in 1                            
                    update_clk in 1                             
                    capture_en in 1                             
                    update_en in  1                             
                    shift_dr in   1                             
                    mode1    in   1                             
                    mode2    in   1                             
                    si       in   1                             
                    pin_input in  1                             
                    output_data in 1                            
                    data_out out  1                             
                    so       out  1                             

   DW_bc_10         capture_clk in 1                            
                    update_clk in 1                             
                    capture_en in 1                             
                    update_en in  1                             
                    shift_dr in   1                             
                    mode     in   1                             
                    si       in   1                             
                    pin_input in  1                             
                    output_data in 1                            
                    data_out out  1                             
                    so       out  1                             

   DW_bin2gray      b        in   width                         
                    g        out  width                         

   DW_bit_order     data_in  in   width                         
                    data_out out  width                         

   DW_bthenc        a        in   1                             
                    b        in   1                             
                    c        in   1                             
                    shift0   out  1                             
                    shift1   out  1                             
                    compliment out 1                            

   DW_cmp           A        in   width                         
                    B        in   width                         
                    TC       in   1                             
                    GE_LT    in   1                             
                    GE_GT_EQ in   1                             
                    GE_LT_GT_LE out 1                           
                    EQ_NE    out  1                             

   DW_cmp_dx        a        in   width                         
                    b        in   width                         
                    tc       in   1                             
                    dplx     in   1                             
                    lt1      out  1                             
                    eq1      out  1                             
                    gt1      out  1                             
                    lt2      out  1                             
                    eq2      out  1                             
                    gt2      out  1                             

   DW_cntr_dcnto    clk      in   1                             
                    rst_n    in   1                             
                    enable   in   1                             
                    load_n   in   1                             
                    count_to in   width                         
                    ld_data  in   width                         
                    tercnt_n out  1                             
                    count    out  width                         

   DW_cntr_gray     clk      in   1                             
                    rst_n    in   1                             
                    init_n   in   1                             
                    load_n   in   1                             
                    data     in   width                         
                    cen      in   1                             
                    count    out  width                         

   DW_cntr_scnto    clk      in   1                             
                    rst_n    in   1                             
                    enable   in   1                             
                    load_n   in   1                             
                    ld_data  in   width                         
                    tercnt_n out  1                             
                    count    out  width                         

   DW_cntr_smod     clk      in   1                             
                    rst_n    in   1                             
                    enable   in   1                             
                    load_n   in   1                             
                    ld_data  in   width                         
                    tercnt   out  1                             
                    count    out  width                         

   DW_crc_p         data_in  in   data_width                    
                    crc_in   in   poly_size                     
                    crc_ok   out  1                             
                    crc_out  out  poly_size                     

   DW_crc_s         clk      in   1                             
                    rst_n    in   1                             
                    init_n   in   1                             
                    enable   in   1                             
                    drain    in   1                             
                    ld_crc_n in   1                             
                    data_in  in   data_width                    
                    crc_in   in   poly_size                     
                    draining out  1                             
                    drain_done out 1                            
                    crc_ok   out  1                             
                    data_out out  data_width                    
                    crc_out  out  poly_size                     

   DW_crc_spm       drain_n  in   1                             
                    data_in  in   data_width                    
                    current_crc in poly_size                    
                    next_crc out  poly_size                     

   DW_data_qsync_hl clk_s    in   1                             
                    rst_s_n  in   1                             
                    init_s_n in   1                             
                    send_s   in   1                             
                    data_s   in   width                         
                    clk_d    in   1                             
                    rst_d_n  in   1                             
                    init_d_n in   1                             
                    data_avail_d out 1                          
                    data_d   out  width                         
                    test     in   1                             

   DW_data_qsync_lh clk_s    in   1                             
                    rst_s_n  in   1                             
                    init_s_n in   1                             
                    send_s   in   1                             
                    data_s   in   width                         
                    clk_d    in   1                             
                    rst_d_n  in   1                             
                    init_d_n in   1                             
                    data_avail_d out 1                          
                    data_d   out  width                         
                    test     in   1                             

   DW_data_sync     clk_s    in   1                             
                    rst_s_n  in   1                             
                    init_s_n in   1                             
                    send_s   in   1                             
                    data_s   in   width                         
                    clk_d    in   1                             
                    rst_d_n  in   1                             
                    init_d_n in   1                             
                    test     in   1                             
                    empty_s  out  1                             
                    full_s   out  1                             
                    done_s   out  1                             
                    data_d   out  width                         
                    data_avail_d out 1                          

   DW_data_sync_1c  clk_d    in   1                             
                    rst_d_n  in   1                             
                    init_d_n in   1                             
                    data_s   in   width                         
                    filt_d   in   filt_size                     
                    test     in   1                             
                    data_avail_d out 1                          
                    data_d   out  width                         
                    max_skew_d out max_skew_width               

   DW_data_sync_na  clk_s    in   1                             
                    rst_s_n  in   1                             
                    init_s_n in   1                             
                    send_s   in   1                             
                    data_s   in   width                         
                    clk_d    in   1                             
                    rst_d_n  in   1                             
                    init_d_n in   1                             
                    test     in   1                             
                    data_avail_d out 1                          
                    data_d   out  width                         

   DW_dct_2d        clk      in   1                             
                    rst_n    in   1                             
                    init_n   in   1                             
                    enable   in   1                             
                    start    in   1                             
                    dct_rd_data in inwidth                      
                    tp_rd_data in intwidth                      
                    done     out  1                             
                    ready    out  1                             
                    dct_rd_add out bitwidth                     
                    tp_rd_add out bitwidth                      
                    tp_wr_add out bitwidth                      
                    tp_wr_n  out  1                             
                    tp_wr_data out intwidth                     
                    dct_wr_add out bitwidth                     
                    dct_wr_n out  1                             
                    dct_wr_data out outwidth                    

   DW_dec           borrow_in in  1                             
                    a        in   width                         
                    borrow_out out 1                            
                    sum      out  width                         

   DW_decode_en     en       in   1                             
                    a        in   width                         
                    b        out  dec_width                     

   DW_div           a        in   a_width                       
                    b        in   b_width                       
                    divide_by_0 out 1                           
                    quotient out  quotient_width                
                    remainder out remainder_width               

   DW_div_pipe      clk      in   1                             c
                    rst_n    in   1                  active_high
                    en       in   1                  active_high
                    a        in   a_width                       
                    b        in   b_width                       
                    quotient out  a_width                       
                    remainder out b_width                       
                    divide_by_0 out 1                           

   DW_div_seq       clk      in   1                             
                    rst_n    in   1                             
                    hold     in   1                             
                    start    in   1                             
                    a        in   a_width                       
                    b        in   b_width                       
                    complete out  1                             
                    divide_by_0 out 1                           
                    quotient out  a_width                       
                    remainder out b_width                       

   DW_div_tc        a        in   a_width                       
                    b        in   b_width                       
                    divide_by_0 out 1                           
                    quotient out  quotient_width                
                    remainder out remainder_width               

   DW_div_uns       a        in   a_width                       
                    b        in   b_width                       
                    divide_by_0 out 1                           
                    quotient out  quotient_width                
                    remainder out remainder_width               

   DW_dpll_sd       clk      in   1                             
                    rst_n    in   1                             
                    stall    in   1                             
                    squelch  in   1                             
                    window   in   log2_windows                  
                    data_in  in   width                         
                    clk_out  out  1                             
                    bit_ready out 1                             
                    data_out out  width                         

   DW_ecc           gen      in   1                             
                    correct_n in  1                             
                    datain   in   width                         
                    chkin    in   chkbits                       
                    err_detect out 1                            
                    err_multpl out 1                            
                    dataout  out  width                         
                    chkout   out  chkbits                       

   DW_eq            a        in   width                         
                    b        in   width                         
                    eq       out  1                             

   DW_exp2          a        in   op_width                      
                    z        out  op_width                      

   DW_fifo_2c_df    clk_s    in   1                             
                    rst_s_n  in   1                             
                    init_s_n in   1                             
                    clr_s    in   1                             
                    ae_level_s in log2_ram_depth_p1             
                    af_level_s in log2_ram_depth_p1             
                    push_s_n in   1                             
                    data_s   in   width                         
                    clr_sync_s out 1                            
                    clr_in_prog_s out 1                         
                    clr_cmplt_s out 1                           
                    fifo_word_cnt_s out log2_fifo_depth_p1      
                    word_cnt_s out log2_ram_depth_p1            
                    fifo_empty_s out 1                          
                    empty_s  out  1                             
                    almost_empty_s out 1                        
                    half_full_s out 1                           
                    almost_full_s out 1                         
                    full_s   out  1                             
                    error_s  out  1                             
                    clk_d    in   1                             
                    rst_d_n  in   1                             
                    init_d_n in   1                             
                    clr_d    in   1                             
                    ae_level_d in log2_fifo_depth_p1            
                    af_level_d in log2_fifo_depth_p1            
                    pop_d_n  in   1                             
                    clr_sync_d out 1                            
                    clr_in_prog_d out 1                         
                    clr_cmplt_d out 1                           
                    data_d   out  width                         
                    word_cnt_d out log2_fifo_depth_p1           
                    empty_d  out  1                             
                    almost_empty_d out 1                        
                    half_full_d out 1                           
                    almost_full_d out 1                         
                    full_d   out  1                             
                    error_d  out  1                             
                    test     in   1                             

   DW_fifo_s1_df    clk      in   1                             
                    rst_n    in   1                             
                    push_req_n in 1                             
                    pop_req_n in  1                             
                    diag_n   in   1                             
                    ae_level in   addr_width                    
                    af_thresh in  addr_width                    
                    data_in  in   width                         
                    empty    out  1                             
                    almost_empty out 1                          
                    half_full out 1                             
                    almost_full out 1                           
                    full     out  1                             
                    error    out  1                             
                    data_out out  width                         

   DW_fifo_s1_sf    clk      in   1                             
                    rst_n    in   1                             
                    push_req_n in 1                             
                    pop_req_n in  1                             
                    diag_n   in   1                             
                    data_in  in   width                         
                    empty    out  1                             
                    almost_empty out 1                          
                    half_full out 1                             
                    almost_full out 1                           
                    full     out  1                             
                    error    out  1                             
                    data_out out  width                         

   DW_fifo_s2_sf    clk_push in   1                             
                    clk_pop  in   1                             
                    rst_n    in   1                             
                    push_req_n in 1                             
                    pop_req_n in  1                             
                    data_in  in   width                         
                    push_empty out 1                            
                    push_ae  out  1                             
                    push_hf  out  1                             
                    push_af  out  1                             
                    push_full out 1                             
                    push_error out 1                            
                    pop_empty out 1                             
                    pop_ae   out  1                             
                    pop_hf   out  1                             
                    pop_af   out  1                             
                    pop_full out  1                             
                    pop_error out 1                             
                    data_out out  width                         

   DW_fifoctl_2c_df clk_s    in   1                             
                    rst_s_n  in   1                             
                    init_s_n in   1                             
                    clr_s    in   1                             
                    ae_level_s in log2_ram_depth_p1             
                    af_level_s in log2_ram_depth_p1             
                    push_s_n in   1                             
                    clr_sync_s out 1                            
                    clr_in_prog_s out 1                         
                    clr_cmplt_s out 1                           
                    wr_en_s_n out 1                             
                    wr_addr_s out log2_ram_depth                
                    fifo_word_cnt_s out log2_fifo_depth_p1      
                    word_cnt_s out log2_ram_depth_p1            
                    fifo_empty_s out 1                          
                    empty_s  out  1                             
                    almost_empty_s out 1                        
                    half_full_s out 1                           
                    almost_full_s out 1                         
                    full_s   out  1                             
                    error_s  out  1                             
                    clk_d    in   1                             
                    rst_d_n  in   1                             
                    init_d_n in   1                             
                    clr_d    in   1                             
                    ae_level_d in log2_fifo_depth_p1            
                    af_level_d in log2_fifo_depth_p1            
                    pop_d_n  in   1                             
                    rd_data_d in  width                         
                    clr_sync_d out 1                            
                    clr_in_prog_d out 1                         
                    clr_cmplt_d out 1                           
                    ram_re_d_n out 1                            
                    rd_addr_d out log2_ram_depth                
                    data_d   out  width                         
                    word_cnt_d out log2_fifo_depth_p1           
                    ram_word_cnt_d out log2_ram_depth_p1        
                    empty_d  out  1                             
                    almost_empty_d out 1                        
                    half_full_d out 1                           
                    almost_full_d out 1                         
                    full_d   out  1                             
                    error_d  out  1                             
                    test     in   1                             

   DW_fifoctl_s1_df clk      in   1                             
                    rst_n    in   1                             
                    push_req_n in 1                             
                    pop_req_n in  1                             
                    diag_n   in   1                             
                    ae_level in   addr_width                    
                    af_thresh in  addr_width                    
                    we_n     out  1                             
                    empty    out  1                             
                    almost_empty out 1                          
                    half_full out 1                             
                    almost_full out 1                           
                    full     out  1                             
                    error    out  1                             
                    wr_addr  out  addr_width                    
                    rd_addr  out  addr_width                    

   DW_fifoctl_s1_sf clk      in   1                             
                    rst_n    in   1                             
                    push_req_n in 1                             
                    pop_req_n in  1                             
                    diag_n   in   1                             
                    we_n     out  1                             
                    empty    out  1                             
                    almost_empty out 1                          
                    half_full out 1                             
                    almost_full out 1                           
                    full     out  1                             
                    error    out  1                             
                    wr_addr  out  addr_width                    
                    rd_addr  out  addr_width                    

   DW_fifoctl_s1r   clk      in   1                             
                    rst_n    in   1                             
                    init_n   in   1                             
                    push_req_n in 1                             
                    data_in  in   width                         
                    we_n     out  1                             
                    wr_addr  out  log2_depthM2                  
                    pop_req_n in  1                             
                    ram_rd_data in width                        
                    re_n     out  1                             
                    rd_addr  out  log2_depthM2                  
                    data_out out  width                         
                    empty    out  1                             
                    full     out  1                             
                    error    out  1                             
                    wrd_count out log2_depth                    
                    next_data_out out width                     
                    next_empty out 1                            
                    next_full out 1                             
                    next_error out 1                            
                    next_wrd_count out log2_depth               

   DW_fifoctl_s2_sf clk_push in   1                             
                    clk_pop  in   1                             
                    rst_n    in   1                             
                    push_req_n in 1                             
                    pop_req_n in  1                             
                    we_n     out  1                             
                    push_empty out 1                            
                    push_ae  out  1                             
                    push_hf  out  1                             
                    push_af  out  1                             
                    push_full out 1                             
                    push_error out 1                            
                    pop_empty out 1                             
                    pop_ae   out  1                             
                    pop_hf   out  1                             
                    pop_af   out  1                             
                    pop_full out  1                             
                    pop_error out 1                             
                    wr_addr  out  wr_addr_width                 
                    rd_addr  out  wr_addr_width                 
                    push_word_count out push_word_count_width   
                    pop_word_count out push_word_count_width    
                    test     in   1                             

   DW_fifoctl_s2dr_sf clk_push in 1                             
                    clk_pop  in   1                             
                    rst_push_n in 1                             
                    rst_pop_n in  1                             
                    init_push_n in 1                            
                    init_pop_n in 1                             
                    push_req_n in 1                             
                    pop_req_n in  1                             
                    we_n     out  1                             
                    push_empty out 1                            
                    push_ae  out  1                             
                    push_hf  out  1                             
                    push_af  out  1                             
                    push_full out 1                             
                    push_error out 1                            
                    pop_empty out 1                             
                    pop_ae   out  1                             
                    pop_hf   out  1                             
                    pop_af   out  1                             
                    pop_full out  1                             
                    pop_error out 1                             
                    wr_addr  out  wr_addr_width                 
                    rd_addr  out  wr_addr_width                 
                    push_word_count out push_word_count_width   
                    pop_word_count out push_word_count_width    
                    test     in   1                             

   DW_fir           clk      in   1                             
                    rst_n    in   1                             
                    coef_shift_en in 1                          
                    tc       in   1                             
                    data_in  in   data_in_width                 
                    coef_in  in   coef_width                    
                    init_acc_val in data_out_width              
                    data_out out  data_out_width                
                    coef_out out  coef_width                    

   DW_fir_seq       clk      in   1                             
                    rst_n    in   1                             
                    coef_shift_en in 1                          
                    tc       in   1                             
                    run      in   1                             
                    data_in  in   data_in_width                 
                    coef_in  in   coef_width                    
                    init_acc_val in data_out_width              
                    start    out  1                             
                    hold     out  1                             
                    data_out out  data_out_width                

   DW_fp_add        a        in   fp_size                       
                    b        in   fp_size                       
                    rnd      in   3                             
                    z        out  fp_size                       
                    status   out  8                             

   DW_fp_addsub     a        in   fp_size                       
                    b        in   fp_size                       
                    rnd      in   3                             
                    op       in   1                             
                    z        out  fp_size                       
                    status   out  8                             

   DW_fp_cmp        a        in   fp_size                       
                    b        in   fp_size                       
                    zctr     in   1                             
                    aeqb     out  1                             
                    altb     out  1                             
                    agtb     out  1                             
                    unordered out 1                             
                    z0       out  fp_size                       
                    z1       out  fp_size                       
                    status0  out  8                             
                    status1  out  8                             

   DW_fp_div        a        in   fp_width                      
                    b        in   fp_width                      
                    rnd      in   3                             
                    z        out  fp_width                      
                    status   out  8                             

   DW_fp_div_seq    a        in   fp_width                      
                    b        in   fp_width                      
                    rnd      in   3                             
                    clk      in   1                             
                    rst_n    in   1                             
                    start    in   1                             
                    z        out  fp_width                      
                    status   out  8                             
                    complete out  1                             

   DW_fp_dp2        a        in   fp_size                       
                    b        in   fp_size                       
                    c        in   fp_size                       
                    d        in   fp_size                       
                    rnd      in   3                             
                    z        out  fp_size                       
                    status   out  8                             

   DW_fp_dp3        a        in   fp_size                       
                    b        in   fp_size                       
                    c        in   fp_size                       
                    d        in   fp_size                       
                    e        in   fp_size                       
                    f        in   fp_size                       
                    rnd      in   3                             
                    z        out  fp_size                       
                    status   out  8                             

   DW_fp_dp4        a        in   fp_size                       
                    b        in   fp_size                       
                    c        in   fp_size                       
                    d        in   fp_size                       
                    e        in   fp_size                       
                    f        in   fp_size                       
                    g        in   fp_size                       
                    h        in   fp_size                       
                    rnd      in   3                             
                    z        out  fp_size                       
                    status   out  8                             

   DW_fp_exp        a        in   fp_size                       
                    z        out  fp_size                       
                    status   out  8                             

   DW_fp_exp2       a        in   fp_size                       
                    z        out  fp_size                       
                    status   out  8                             

   DW_fp_flt2i      a        in   a_width                       
                    rnd      in   3                             
                    status   out  8                             
                    z        out  isize                         

   DW_fp_i2flt      a        in   isize                         
                    rnd      in   3                             
                    status   out  8                             
                    z        out  z_width                       

   DW_fp_ifp_conv   a        in   fp_input_size                 
                    z        out  ifp_output_size               

   DW_fp_invsqrt    a        in   fp_size                       
                    rnd      in   3                             
                    z        out  fp_size                       
                    status   out  8                             

   DW_fp_ln         a        in   fp_size                       
                    z        out  fp_size                       
                    status   out  8                             

   DW_fp_log2       a        in   fp_size                       
                    z        out  fp_size                       
                    status   out  8                             

   DW_fp_mac        a        in   fp_width                      
                    b        in   fp_width                      
                    c        in   fp_width                      
                    rnd      in   3                             
                    z        out  fp_width                      
                    status   out  8                             

   DW_fp_mult       a        in   fp_width                      
                    b        in   fp_width                      
                    rnd      in   3                             
                    z        out  fp_width                      
                    status   out  8                             

   DW_fp_recip      a        in   fp_width                      
                    rnd      in   3                             
                    z        out  fp_width                      
                    status   out  8                             

   DW_fp_sincos     a        in   fp_width                      
                    sin_cos  in   1                             
                    z        out  fp_width                      
                    status   out  8                             

   DW_fp_sqrt       a        in   fp_width                      
                    rnd      in   3                             
                    z        out  fp_width                      
                    status   out  8                             

   DW_fp_square     a        in   fp_width                      
                    rnd      in   3                             
                    z        out  fp_width                      
                    status   out  8                             

   DW_fp_sub        a        in   fp_size                       
                    b        in   fp_size                       
                    rnd      in   3                             
                    z        out  fp_size                       
                    status   out  8                             

   DW_fp_sum3       a        in   fp_size                       
                    b        in   fp_size                       
                    c        in   fp_size                       
                    rnd      in   3                             
                    z        out  fp_size                       
                    status   out  8                             

   DW_fp_sum4       a        in   fp_size                       
                    b        in   fp_size                       
                    c        in   fp_size                       
                    d        in   fp_size                       
                    rnd      in   3                             
                    z        out  fp_size                       
                    status   out  8                             

   DW_gray2bin      g        in   width                         
                    b        out  width                         

   DW_gray_sync     clk_s    in   1                             
                    rst_s_n  in   1                             
                    init_s_n in   1                             
                    en_s     in   1                             
                    count_s  out  width                         
                    offset_count_s out width                    
                    clk_d    in   1                             
                    rst_d_n  in   1                             
                    init_d_n in   1                             
                    count_d  out  width                         
                    test     in   1                             

   DW_ifp_addsub    a        in   ifp_input_size                
                    b        in   ifp_input_size                
                    op       in   1                             
                    rnd      in   3                             
                    z        out  ifp_output_size               

   DW_ifp_fp_conv   a        in   ifp_input_size                
                    rnd      in   3                             
                    z        out  fp_output_size                
                    status   out  8                             

   DW_ifp_mult      a        in   ifp_input_size                
                    b        in   ifp_input_size                
                    z        out  ifp_output_size               

   DW_iir_dc        clk      in   1                             
                    rst_n    in   1                             
                    init_n   in   1                             
                    enable   in   1                             
                    A1_coef  in   max_coef_width                
                    A2_coef  in   max_coef_width                
                    B0_coef  in   max_coef_width                
                    B1_coef  in   max_coef_width                
                    B2_coef  in   max_coef_width                
                    data_in  in   data_in_width                 
                    data_out out  data_out_width                
                    saturation out 1                            

   DW_iir_sc        clk      in   1                             
                    rst_n    in   1                             
                    init_n   in   1                             
                    enable   in   1                             
                    data_in  in   data_in_width                 
                    data_out out  data_out_width                
                    saturation out 1                            

   DW_inc           carry_in in   1                             
                    a        in   width                         
                    carry_out out 1                             
                    sum      out  width                         

   DW_inc_gray      a        in   width                         
                    ci       in   1                             
                    z        out  width                         

   DW_incdec        inc_dec  in   1                             
                    c_b_in   in   1                             
                    a        in   width                         
                    c_b_out  out  1                             
                    sum      out  width                         

   DW_inv_sqrt      a        in   a_width                       
                    b        out  a_width                       
                    t        out  1                             

   DW_leftsh        A        in   A_width                       
                    SH       in   SH_width                      
                    B        out  A_width                       

   DW_ln            a        in   op_width                      
                    z        out  op_width                      

   DW_lod           a        in   a_width                       
                    enc      out  enc_width                     
                    dec      out  a_width                       

   DW_log2          a        in   op_width                      
                    z        out  op_width                      

   DW_lsd           a        in   a_width                       
                    enc      out  enc_width                     
                    dec      out  a_width                       

   DW_lza           a        in   width                         
                    b        in   width                         
                    count    out  count_width                   

   DW_lzd           a        in   a_width                       
                    enc      out  enc_width                     
                    dec      out  a_width                       

   DW_lzod          a        in   a_width                       
                    enc      out  enc_width                     
                    dec      out  a_width                       

   DW_mac_tc        A        in   A_width                       
                    B        in   B_width                       
                    C        in   PRODUCT_width                 
                    MAC      out  PRODUCT_width                 

   DW_mac_uns       A        in   A_width                       
                    B        in   B_width                       
                    C        in   PRODUCT_width                 
                    MAC      out  PRODUCT_width                 

   DW_minmax        a        in   a_width                       
                    tc       in   1                             
                    min_max  in   1                             
                    value    out  width                         
                    index    out  index_width                   

   DW_minmax2       a        in   width                         
                    b        in   width                         
                    tc       in   1                             
                    min_max  in   1                             
                    value    out  width                         
                    index    out  1                             

   DW_minmax4       a0       in   width                         
                    a1       in   width                         
                    a2       in   width                         
                    a3       in   width                         
                    tc       in   1                             
                    min_max  in   1                             
                    value    out  width                         
                    index    out  3                             

   DW_mod_tc        a        in   a_width                       
                    b        in   b_width                       
                    divide_by_0 out 1                           
                    quotient out  quotient_width                
                    remainder out remainder_width               

   DW_mod_uns       a        in   a_width                       
                    b        in   b_width                       
                    divide_by_0 out 1                           
                    quotient out  quotient_width                
                    remainder out remainder_width               

   DW_mtree         pp_array in   ppa_width                     
                    booth_bits in bth_width                     
                    out0     out  out_width                     
                    out1     out  out_width                     

   DW_mult_dx       a        in   width                         
                    b        in   width                         
                    tc       in   1                             
                    dplx     in   1                             
                    product  out  product_width                 

   DW_mult_pipe     clk      in   1                             c
                    rst_n    in   1                  active_high
                    en       in   1                  active_high
                    tc       in   1                             
                    a        in   a_width                       
                    b        in   b_width                       
                    product  out  product_width                 

   DW_mult_seq      clk      in   1                             
                    rst_n    in   1                             
                    hold     in   1                             
                    start    in   1                             
                    a        in   a_width                       
                    b        in   b_width                       
                    complete out  1                             
                    product  out  product_width                 

   DW_mult_tc       a        in   a_width                       
                    b        in   b_width                       
                    product  out  product_width                 

   DW_mult_uns      a        in   a_width                       
                    b        in   b_width                       
                    product  out  product_width                 

   DW_ne            a        in   width                         
                    b        in   width                         
                    ne       out  1                             

   DW_norm          a        in   a_width                       
                    exp_offset in exp_width                     
                    no_detect out 1                             
                    ovfl     out  1                             
                    b        out  a_width                       
                    exp_adj  out  exp_width                     

   DW_norm_rnd      a_mag    in   a_width                       
                    pos_offset in exp_width                     
                    sticky_bit in 1                             
                    a_sign   in   1                             
                    rnd_mode in   3                             
                    pos_err  out  1                             
                    no_detect out 1                             
                    b        out  b_width                       
                    pos      out  exp_width                     

   DW_or_tree       a        in   width                         
                    b        out  1                             

   DW_pipe_reg      data_in  in   width                         
                    enable   in   1                             
                    rst_n    in   1                             
                    ld_0_n   in   1                             
                    clk      in   1                             
                    data_out out  width                         

   DW_piped_mac     clk      in   1                             
                    rst_n    in   1                             
                    init_n   in   1                             
                    clr_acc_n in  1                             
                    a        in   a_width                       
                    b        in   b_width                       
                    acc      out  acc_width                     
                    launch   in   1                             
                    launch_id in  id_width                      
                    pipe_full out 1                             
                    pipe_ovf out  1                             
                    accept_n in   1                             
                    arrive   out  1                             
                    arrive_id out id_width                      
                    push_out_n out 1                            
                    pipe_census out 3                           

   DW_pl_reg        clk      in   1                             
                    rst_n    in   1                             
                    enable   in   enable_width                  
                    data_in  in   width                         
                    data_out out  width                         

   DW_prod_sum_pipe clk      in   1                             c
                    rst_n    in   1                  active_high
                    en       in   1                  active_high
                    tc       in   1                             
                    a        in   a_vector_width                
                    b        in   b_vector_width                
                    sum      out  sum_width                     

   DW_prod_sum_tc   A        in   A_vector_width                
                    B        in   B_vector_width                
                    SUM      out  SUM_width                     

   DW_prod_sum_uns  A        in   A_vector_width                
                    B        in   B_vector_width                
                    SUM      out  SUM_width                     

   DW_pulse_sync    clk_s    in   1                             
                    rst_s_n  in   1                             
                    init_s_n in   1                             
                    event_s  in   1                             
                    clk_d    in   1                             
                    rst_d_n  in   1                             
                    init_d_n in   1                             
                    event_d  out  1                             
                    test     in   1                             

   DW_pulseack_sync clk_s    in   1                             
                    rst_s_n  in   1                             
                    init_s_n in   1                             
                    event_s  in   1                             
                    ack_s    out  1                             
                    busy_s   out  1                             
                    clk_d    in   1                             
                    rst_d_n  in   1                             
                    init_d_n in   1                             
                    event_d  out  1                             
                    test     in   1                             

   DW_ram_2r_w_a_dff rst_n   in   1                             
                    cs_n     in   1                             
                    wr_n     in   1                             
                    test_mode in  1                             
                    test_clk in   1                             
                    rd1_addr in   addr_width                    
                    rd2_addr in   addr_width                    
                    wr_addr  in   addr_width                    
                    data_in  in   data_width                    
                    data_rd1_out out data_width                 
                    data_rd2_out out data_width                 

   DW_ram_2r_w_a_lat rst_n   in   1                             
                    cs_n     in   1                             
                    wr_n     in   1                             
                    rd1_addr in   addr_width                    
                    rd2_addr in   addr_width                    
                    wr_addr  in   addr_width                    
                    data_in  in   data_width                    
                    data_rd1_out out data_width                 
                    data_rd2_out out data_width                 

   DW_ram_2r_w_s_dff clk     in   1                             c
                    rst_n    in   1                  active_high
                    cs_n     in   1                  active_low 
                    wr_n     in   1                  active_high
                    rd1_addr in   addr_width         active_high
                    rd2_addr in   addr_width         active_high
                    wr_addr  in   addr_width         active_high
                    data_in  in   data_width         active_low 
                    data_rd1_out out data_width                 
                    data_rd2_out out data_width                 

   DW_ram_2r_w_s_lat clk     in   1                             c
                    cs_n     in   1                  active_low 
                    wr_n     in   1                  active_high
                    rd1_addr in   addr_width         active_high
                    rd2_addr in   addr_width         active_high
                    wr_addr  in   addr_width         active_high
                    data_in  in   data_width         active_low 
                    data_rd1_out out data_width                 
                    data_rd2_out out data_width                 

   DW_ram_r_w_2c_dff clk_w   in   1                             
                    rst_w_n  in   1                             
                    init_w_n in   1                             
                    en_w_n   in   1                             
                    addr_w   in   addr_width                    
                    data_w   in   width                         
                    clk_r    in   1                             
                    rst_r_n  in   1                             
                    init_r_n in   1                             
                    en_r_n   in   1                             
                    addr_r   in   addr_width                    
                    data_r_a out  1                             
                    data_r   out  width                         

   DW_ram_r_w_a_dff rst_n    in   1                             
                    cs_n     in   1                             
                    wr_n     in   1                             
                    test_mode in  1                             
                    test_clk in   1                             
                    rd_addr  in   addr_width                    
                    wr_addr  in   addr_width                    
                    data_in  in   data_width                    
                    data_out out  data_width                    

   DW_ram_r_w_a_lat rst_n    in   1                             
                    cs_n     in   1                             
                    wr_n     in   1                             
                    rd_addr  in   addr_width                    
                    wr_addr  in   addr_width                    
                    data_in  in   data_width                    
                    data_out out  data_width                    

   DW_ram_r_w_s_dff clk      in   1                             c
                    rst_n    in   1                  active_high
                    cs_n     in   1                  active_low 
                    wr_n     in   1                  active_high
                    rd_addr  in   addr_width         active_high
                    wr_addr  in   addr_width         active_high
                    data_in  in   data_width         active_low 
                    data_out out  data_width                    

   DW_ram_r_w_s_lat clk      in   1                             c
                    cs_n     in   1                  active_low 
                    wr_n     in   1                  active_high
                    rd_addr  in   addr_width         active_high
                    wr_addr  in   addr_width         active_high
                    data_in  in   data_width         active_low 
                    data_out out  data_width                    

   DW_ram_rw_a_dff  rst_n    in   1                             
                    cs_n     in   1                             
                    wr_n     in   1                             
                    test_mode in  1                             
                    test_clk in   1                             
                    rw_addr  in   addr_width                    
                    data_in  in   data_width                    
                    data_out out  data_width                    

   DW_ram_rw_a_lat  rst_n    in   1                             
                    cs_n     in   1                             
                    wr_n     in   1                             
                    rw_addr  in   addr_width                    
                    data_in  in   data_width                    
                    data_out out  data_width                    

   DW_ram_rw_s_dff  clk      in   1                             c
                    rst_n    in   1                  active_high
                    cs_n     in   1                  active_low 
                    wr_n     in   1                  active_high
                    rw_addr  in   addr_width         active_high
                    data_in  in   data_width         active_low 
                    data_out out  data_width                    

   DW_ram_rw_s_lat  clk      in   1                             c
                    cs_n     in   1                  active_low 
                    wr_n     in   1                  active_high
                    rw_addr  in   addr_width         active_high
                    data_in  in   data_width         active_low 
                    data_out out  data_width                    

   DW_reset_sync    clk_s    in   1                             
                    rst_s_n  in   1                             
                    init_s_n in   1                             
                    clr_s    in   1                             
                    clr_sync_s out 1                            
                    clr_in_prog_s out 1                         
                    clr_cmplt_s out 1                           
                    clk_d    in   1                             
                    rst_d_n  in   1                             
                    init_d_n in   1                             
                    clr_d    in   1                             
                    clr_in_prog_d out 1                         
                    clr_sync_d out 1                            
                    clr_cmplt_d out 1                           
                    test     in   1                             

   DW_rightsh       A        in   A_width                       
                    DATA_TC  in   1                             
                    SH       in   SH_width                      
                    B        out  A_width                       

   DW_shifter       data_in  in   data_width                    
                    data_tc  in   1                             
                    sh       in   sh_width                      
                    sh_tc    in   1                             
                    sh_mode  in   1                             
                    data_out out  data_width                    

   DW_sincos        A        in   A_width                       
                    SIN_COS  in   1                             
                    WAVE     out  WAVE_width                    

   DW_sqrt          a        in   width                         
                    root     out  root_width                    

   DW_sqrt_pipe     clk      in   1                             c
                    rst_n    in   1                  active_high
                    en       in   1                  active_high
                    a        in   width                         
                    root     out  root_width                    

   DW_sqrt_rem      a        in   width                         
                    root     out  r_width                       
                    remainder out rm_width                      

   DW_sqrt_seq      clk      in   1                             
                    rst_n    in   1                             
                    hold     in   1                             
                    start    in   1                             
                    a        in   width                         
                    complete out  1                             
                    root     out  root_width                    

   DW_sqrt_tc       a        in   width                         
                    root     out  root_width                    

   DW_sqrt_uns      a        in   width                         
                    root     out  root_width                    

   DW_square        a        in   width                         
                    tc       in   1                             
                    square   out  sqr_width                     

   DW_squarep       a        in   width                         
                    tc       in   1                             
                    out0     out  sqr_width                     
                    out1     out  sqr_width                     

   DW_stack         clk      in   1                             
                    rst_n    in   1                             
                    push_req_n in 1                             
                    pop_req_n in  1                             
                    data_in  in   width                         
                    empty    out  1                             
                    full     out  1                             
                    error    out  1                             
                    data_out out  width                         

   DW_stackctl      clk      in   1                             
                    rst_n    in   1                             
                    push_req_n in 1                             
                    pop_req_n in  1                             
                    we_n     out  1                             
                    empty    out  1                             
                    full     out  1                             
                    error    out  1                             
                    wr_addr  out  addr_width                    
                    rd_addr  out  addr_width                    

   DW_stream_sync   clk_s    in   1                             
                    rst_s_n  in   1                             
                    init_s_n in   1                             
                    clr_s    in   1                             
                    send_s   in   1                             
                    data_s   in   width                         
                    clr_sync_s out 1                            
                    clr_in_prog_s out 1                         
                    clr_cmplt_s out 1                           
                    clk_d    in   1                             
                    rst_d_n  in   1                             
                    init_d_n in   1                             
                    clr_d    in   1                             
                    prefill_d in  1                             
                    clr_in_prog_d out 1                         
                    clr_sync_d out 1                            
                    clr_cmplt_d out 1                           
                    data_avail_d out 1                          
                    data_d   out  width                         
                    prefilling_d out 1                          
                    test     in   1                             

   DW_sync          clk_d    in   1                             
                    rst_d_n  in   1                             
                    init_d_n in   1                             
                    data_s   in   width                         
                    test     in   1                             
                    data_d   out  width                         

   DW_tap           tck      in   1                             
                    trst_n   in   1                             
                    tms      in   1                             
                    tdi      in   1                             
                    so       in   1                             
                    bypass_sel in 1                             
                    sentinel_val in sub_width                   
                    clock_dr out  1                             
                    shift_dr out  1                             
                    update_dr out 1                             
                    tdo      out  1                             
                    tdo_en   out  1                             
                    tap_state out 16                            
                    extest   out  1                             
                    samp_load out 1                             
                    instructions out width                      
                    sync_capture_en out 1                       
                    sync_update_dr out 1                        
                    test     in   1                             

   DW_tap_uc        tck      in   1                             
                    trst_n   in   1                             
                    tms      in   1                             
                    tdi      in   1                             
                    so       in   1                             
                    bypass_sel in 1                             
                    sentinel_val in sub_width                   
                    device_id_sel in 1                          
                    user_code_sel in 1                          
                    user_code_val in 32                         
                    ver      in   4                             
                    ver_sel  in   1                             
                    part_num in   16                            
                    part_num_sel in 1                           
                    mnfr_id  in   11                            
                    mnfr_id_sel in 1                            
                    clock_dr out  1                             
                    shift_dr out  1                             
                    update_dr out 1                             
                    tdo      out  1                             
                    tdo_en   out  1                             
                    tap_state out 16                            
                    instructions out width                      
                    sync_capture_en out 1                       
                    sync_update_dr out 1                        
                    test     in   1                             

   DW_tap_uc2       tck      in   1                             
                    trst_n   in   1                             
                    tms      in   1                             
                    tdi      in   1                             
                    so       in   1                             
                    bypass_sel in 1                             
                    sentinel_val in sub_width                   
                    device_id_sel in 1                          
                    user_code_sel in 1                          
                    user_code_val in 32                         
                    ver      in   4                             
                    ver_sel  in   1                             
                    part_num in   16                            
                    part_num_sel in 1                           
                    mnfr_id  in   11                            
                    mnfr_id_sel in 1                            
                    clock_dr out  1                             
                    shift_dr out  1                             
                    update_dr out 1                             
                    tdo      out  1                             
                    tdo_en   out  1                             
                    tap_state out 16                            
                    instructions out width                      
                    sync_capture_en out 1                       
                    sync_update_dr out 1                        
                    test     in   1                             
                    instructions_shift out width                

   DW_thermdec      en       in   1                             
                    a        in   width                         
                    b        out  dec_width                     

   DW_wc_d1_s       shift_clk in  1                             
                    rst_n    in   1                             
                    set_n    in   1                             
                    shift_en in   1                             
                    capture_en in 1                             
                    safe_control in 1                           
                    safe_value in 1                             
                    cfi      in   1                             
                    cti      in   1                             
                    cfo      out  1                             
                    cto      out  1                             
                    toggle_state in 1                           

   DW_wc_s1_s       shift_clk in  1                             
                    rst_n    in   1                             
                    set_n    in   1                             
                    shift_en in   1                             
                    capture_en in 1                             
                    safe_control in 1                           
                    safe_value in 1                             
                    cfi      in   1                             
                    cti      in   1                             
                    cfo      out  1                             
                    cfo_n    out  1                             
                    cto      out  1                             
                    toggle_state in 1                           

   DWsc_fifoctl_dif clk_d    in   1                             
                    rst_d_n  in   1                             
                    init_d_n in   1                             
                    clr_sync_d in 1                             
                    ae_level_d in log2_fifo_depth_p1            
                    af_level_d in log2_fifo_depth_p1            
                    clr_in_prog_d in 1                          
                    pop_d_n  in   1                             
                    rd_data_d in  width                         
                    wr_ptr_d in   log2_ram_depth_p1             
                    rd_ptr_d in   log2_ram_depth_p1             
                    ram_re_d_n out 1                            
                    rd_en_d  out  1                             
                    data_d   out  width                         
                    word_cnt_d out log2_fifo_depth_p1           
                    ram_word_cnt_d out log2_ram_depth_p1        
                    cache_census_gray_d out inuse_cnt_width     
                    empty_d  out  1                             
                    almost_empty_d out 1                        
                    half_full_d out 1                           
                    almost_full_d out 1                         
                    full_d   out  1                             
                    error_d  out  1                             

   DWsc_fifoctl_s1_df clk    in   1                             
                    rst_n    in   1                             
                    init_n   in   1                             
                    push_req_n in 1                             
                    pop_req_n in  1                             
                    diag_n   in   1                             
                    ae_level in   addr_width                    
                    af_thresh in  addr_width                    
                    we_n     out  1                             
                    empty    out  1                             
                    almost_empty out 1                          
                    half_full out 1                             
                    almost_full out 1                           
                    full     out  1                             
                    error    out  1                             
                    wr_addr  out  addr_width                    
                    rd_addr  out  addr_width                    
                    wrd_count out addr_width                    
                    nxt_empty_n out 1                           
                    nxt_full out  1                             
                    nxt_error out 1                             

   DWsc_fifoctl_sif clk_s    in   1                             
                    rst_s_n  in   1                             
                    init_s_n in   1                             
                    clr_sync_s in 1                             
                    ae_level_s in log2_ram_depth_p1             
                    af_level_s in log2_ram_depth_p1             
                    clr_in_prog_s in 1                          
                    push_s_n in   1                             
                    wr_ptr_s in   log2_ram_depth_p1             
                    rd_ptr_s in   log2_ram_depth_p1             
                    cache_census_s in inuse_cnt_width           
                    wr_en_s_n out 1                             
                    wr_en_s  out  1                             
                    fifo_word_cnt_s out log2_fifo_depth_p1      
                    word_cnt_s out log2_ram_depth_p1            
                    fifo_empty_s out 1                          
                    empty_s  out  1                             
                    almost_empty_s out 1                        
                    half_full_s out 1                           
                    almost_full_s out 1                         
                    full_s   out  1                             
                    error_s  out  1                             


Module Implementations:

     Attributes/Parameters:
       v - verify_only
       V - verification implementation
       u - dont_use
       r - regular_licenses
       l - limited_licenses
       d - design_library
       s - priority_set_id
       p - priority
       leg - legal

   Module           Implementations      Attributes/Parameters
   ----------------------------------------------------------------------
   DW01_binenc      str                  r = DesignWare
                                         leg = "(A_width>=1) && (ADDR_width>=log2(A_width))"

                    cla                  r = DesignWare
                                         leg = "(A_width>=1) && (A_width<=512) && (A_width <= 512) && (ADDR_width>=log2(A_width))"

                    aot                  r = DesignWare
                                         leg = "(A_width>=1) && (ADDR_width>=log2(A_width))"

   DW01_bsh         verif                v

                    mx2(replaced with str) r = DesignWare
                                         leg = "(A_width >= 1) && (SH_width>=1)"

                    mx2i(replaced with str) r = DesignWare
                                         leg = "(A_width >= 1) && (SH_width>=1)"

                    mx4(replaced with astr) r = DesignWare
                                         leg = "(A_width >= 1) && (SH_width>=1)"

                    mx8(replaced with astr) r = DesignWare
                                         leg = "(A_width >= 1) && (SH_width>=1)"

   DW01_csa         str                  r = DesignWare
                                         leg = "(width>=1)"

   DW01_mux_any     str                  r = DesignWare
                                         leg = "(A_width>=1) && (SEL_width>=1) && (MUX_width>=1)"

                    fmx                  r = DesignWare
                                         leg = "(A_width>=1) && (SEL_width>=1) && (MUX_width>=1)"

   DW01_prienc      str                  r = DesignWare
                                         leg = "(A_width>=1) && (INDEX_width>=log2(A_width))"

                    cla                  r = DesignWare
                                         leg = "(A_width>=1) && (A_width<=512) && (INDEX_width>=log2(A_width))"

                    aot                  r = DesignWare
                                         leg = "(A_width>=1) && (INDEX_width>=log2(A_width))"

   DW01_satrnd      str                  r = DesignWare
                                         leg = "((width-1)>=msb_out) && (msb_out>lsb_out) && (msb_out>lsb_out) && (lsb_out>=0)"

   DW02_booth       str                  r = DesignWare
                                         leg = "(arch>=0) && (arch<=2)"

   DW02_cos         str                  r = DesignWare
                                         leg = "(A_width>=2) && (A_width<=34) && (cos_width>=2) && (cos_width<=34)"

   DW02_mac         verif                v

                    csa(replaced with apparch) r = DesignWare
                                         leg = "(A_width>=1) && (B_width>=1)"

                    wall(replaced with pparch) r = DesignWare
                                         leg = "(A_width>=1) && (B_width>=1)"

   DW02_mult_2_stage str                 r = DesignWare
                                         leg = "(A_width>=1)&&(B_width>=1)"

                    csa(replaced with str) r = DesignWare
                                         leg = "(PRODUCT_width<=48)&&(A_width>=1)&&(B_width>=1)"

   DW02_mult_3_stage str                 r = DesignWare
                                         leg = "(A_width>=1)&&(B_width>=1)"

                    csa(replaced with str) r = DesignWare
                                         leg = "(PRODUCT_width<=48)&&(A_width>=1)&&(B_width>=1)"

   DW02_mult_4_stage str                 r = DesignWare
                                         leg = "(A_width>=1)&&(B_width>=1)"

                    csa(replaced with str) r = DesignWare
                                         leg = "(PRODUCT_width<=48)&&(A_width>=1)&&(B_width>=1)"

   DW02_mult_5_stage str                 r = DesignWare
                                         leg = "(A_width>=1)&&(B_width>=1)"

                    csa(replaced with str) r = DesignWare
                                         leg = "(PRODUCT_width<=48)&&(A_width>=1)&&(B_width>=1)"

   DW02_mult_6_stage str                 r = DesignWare
                                         leg = "(A_width>=1)&&(B_width>=1)"

                    csa(replaced with str) r = DesignWare
                                         leg = "(PRODUCT_width<=48)&&(A_width>=1)&&(B_width>=1)"

   DW02_multp       wall                 r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1) && (out_width >= a_width+b_width+2)"

                    nbw                  r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1) && (out_width >= a_width+b_width+2)"

   DW02_prod_sum    wall(replaced with pparch) r = DesignWare
                                         leg = "(A_width>=1) && (B_width>=1) && (num_inputs>=1) && (SUM_width>=1)"

                    nbw(replaced with pparch) r = DesignWare
                                         leg = "(A_width>=1) && (B_width>=1) && (num_inputs>=1) && (SUM_width>=1)"

                    csa(replaced with apparch) r = DesignWare
                                         leg = "(A_width>=1) && (B_width>=1) && (num_inputs>=1) && (SUM_width>=1)"

   DW02_prod_sum1   wall(replaced with pparch) r = DesignWare
                                         leg = "(A_width>=1) && (B_width>=1) && (SUM_width>=1)"

                    nbw(replaced with pparch) r = DesignWare
                                         leg = "(A_width>=1) && (B_width>=1) && (SUM_width>=1)"

                    csa(replaced with apparch) r = DesignWare
                                         leg = "(A_width>=1) && (B_width>=1) && (SUM_width>=1)"

   DW02_sin         str                  r = DesignWare
                                         leg = "(A_width>=2) && (A_width<=34) && (sin_width>=2) && (sin_width<=34)"

   DW02_sincos      str                  r = DesignWare
                                         leg = "(A_width>=2) && (A_width<=34) && (wave_width>=2) && (wave_width<=34)"

   DW02_sum         verif                v

                    wallace(replaced with pparch) r = DesignWare
                                         leg = "(num_inputs>=1) && (input_width>=1)"

                    csa(replaced with pparch) r = DesignWare
                                         leg = "(num_inputs>=1) && (input_width>=1)"

                    rpl(replaced with apparch) r = DesignWare
                                         leg = "(num_inputs>=1) && (input_width>=1)"

   DW02_tree        wallace              r = DesignWare
                                         leg = "(num_inputs>=1)&&(input_width>=1)"

   DW03_bictr_dcnto str                  r = DesignWare
                                         leg = "(width>=1)"

   DW03_bictr_decode str                 r = DesignWare
                                         leg = "(width>=1)"

   DW03_bictr_scnto str                  r = DesignWare
                                         leg = "(width>=1)&&(width <= 30)&&(count_to>=1)&&(count_to<=(2^width-1))"

   DW03_lfsr_dcnto  str                  r = DesignWare
                                         leg = "(width >= 1) && (width <= 50)"

   DW03_lfsr_load   str                  r = DesignWare
                                         leg = "(width >= 1) && (width <= 50)"

   DW03_lfsr_scnto  str                  r = DesignWare
                                         leg = "(width >= 2) && (width <= 50) && (count_to >= 1) && (count_to<=(2^width-2))"

   DW03_lfsr_updn   str                  r = DesignWare
                                         leg = "(width >= 2) && (width <= 50)"

   DW03_pipe_reg    str                  r = DesignWare
                                         leg = "(depth>=0) && (width>=1)"

   DW03_reg_s_pl    str                  r = DesignWare
                                         leg = "(width>=1) && ( (reset_value==0) || ((reset_value>=0) && ( ((width < 31)&&(reset_value<(2^width))) || ((width == 31)&&(reset_value <= 2147483647)) )) )"

                    mbstr                r = DesignWare
                                         leg = "(width>=1) && ( (reset_value==0) || ((reset_value>=0) && ( ((width < 31)&&(reset_value<(2^width))) || ((width == 31)&&(reset_value <= 2147483647)) )) )"

   DW03_shftreg     str                  r = DesignWare

   DW03_updn_ctr    rpl                  r = DesignWare
                                         leg = "(width>=0)"

                    cla                  r = DesignWare
                                         leg = "(width>=0)"

                    clf                  r = DesignWare
                                         leg = "(width>=0)"

   DW04_par_gen     str                  r = DesignWare
                                         leg = "(width>=1)&&(width<=16386)&&((par_type==0)||(par_type==1))"

   DW04_shad_reg    str                  r = DesignWare
                                         leg = "(width>=1)&&(width<=512)&&((bld_shad_reg==0)||(bld_shad_reg==1))"

   DW_8b10b_dec     rtl                  r = DesignWare
                                         leg = "(bytes >= 1) && (bytes <= 16) && 		   (k28_5_only >= 0) && (k28_5_only <= 1) && 		   (en_mode >= 0) && (en_mode <= 1) && 		   (init_mode >= 0) && (init_mode <= 1) && 		   (rst_mode >= 0) && (rst_mode <= 1) &&                    (op_iso_mode >= 0) && (op_iso_mode <= 4)"

   DW_8b10b_enc     rtl                  r = DesignWare
                                         leg = "(bytes>0) && (bytes<17) && 	  	         (k28_5_only>=0) && (k28_5_only<2) && 		         (en_mode >= 0) && (en_mode <= 1) && 		         (init_mode >= 0) && (init_mode <= 1) && 		         (rst_mode >= 0) && (rst_mode <= 1) && 		         (op_iso_mode >= 0) && (op_iso_mode <= 4)"

   DW_8b10b_unbal   rtl                  r = DesignWare
                                         leg = "(k28_5_only>=0) && (k28_5_only<2)"

   DW_ASYMFIFOCTL_IN_WRAPPER str         r = DesignWare
                                         leg = "((data_out_width/data_in_width)*data_in_width==data_out_width) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 1) && (push_pop_full>=0) && (push_pop_full<=1) && (byte_order>=0) && (byte_order<=1)"

   DW_ASYMFIFOCTL_OUT_WRAPPER str        r = DesignWare
                                         leg = "((data_in_width/data_out_width)*data_out_width==data_in_width) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 1) && (byte_order>=0) && (byte_order<=1)"

   DW_ASYMFIFOCTL_S2SF_INWRP str         r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 4096) && (data_out_width >= 1) && 		    (data_out_width <= 4096) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || 		    ((data_out_width/data_in_width)*data_in_width==data_out_width)) && 		    (push_ae_lvl >= 1) && (push_ae_lvl <= (depth-1)) && (push_af_lvl >= 1) && 		    (push_af_lvl <= (depth-1)) && (err_mode >= 0) && (err_mode <= 1) && 		    (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth >= 4) && 		    (push_sync >= 1) && (push_sync <= 3) && (byte_order>=0) && (byte_order<=1)"

                    rpl(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && 		    (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || 		    ((data_out_width/data_in_width)*data_in_width==data_out_width)) && 		    (push_ae_lvl >= 1) && (push_ae_lvl <= (depth-1)) && (push_af_lvl >= 1) && 		    (push_af_lvl <= (depth-1)) && (err_mode >= 0) && (err_mode <= 1) && 		    (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth >= 4) && 		    (push_sync >= 1) && (push_sync <= 3) && (byte_order>=0) && (byte_order<=1)"

                    cl2(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && 		    (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || 		    ((data_out_width/data_in_width)*data_in_width==data_out_width)) && 		    (push_ae_lvl >= 1) && (push_ae_lvl <= (depth-1)) && (push_af_lvl >= 1) && 		    (push_af_lvl <= (depth-1)) && (err_mode >= 0) && (err_mode <= 1) && 		    (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth >= 4) && 		    (push_sync >= 1) && (push_sync <= 3) && (byte_order>=0) && (byte_order<=1)"

   DW_ASYMFIFOCTL_S2SF_OUTWRP str        r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 4096) && 		    (data_out_width >= 1) && (data_out_width <= 4096) && 		    (((data_in_width/data_out_width)*data_out_width==data_in_width) || 		    ((data_out_width/data_in_width)*data_in_width==data_out_width)) && 		    (pop_ae_lvl >= 1) && (pop_ae_lvl <= (depth-1)) && (pop_af_lvl >= 1) && 		    (pop_af_lvl <= (depth-1)) && (err_mode >= 0) && (err_mode <= 1) && 		    (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && 		    (depth >= 4) && (pop_sync >= 1) && (pop_sync <= 3) && 		    (byte_order>=0) && (byte_order<=1)"

                    rpl(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && 		    (data_out_width >= 1) && (data_out_width <= 256) && 		    (((data_in_width/data_out_width)*data_out_width==data_in_width) || 		    ((data_out_width/data_in_width)*data_in_width==data_out_width)) && 		    (pop_ae_lvl >= 1) && (pop_ae_lvl <= (depth-1)) && (pop_af_lvl >= 1) && 		    (pop_af_lvl <= (depth-1)) && (err_mode >= 0) && (err_mode <= 1) && 		    (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && 		    (depth >= 4) && (pop_sync >= 1) && (pop_sync <= 3) && 		    (byte_order>=0) && (byte_order<=1)"

                    cl2(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && 		    (data_out_width >= 1) && (data_out_width <= 256) && 		    (((data_in_width/data_out_width)*data_out_width==data_in_width) || 		    ((data_out_width/data_in_width)*data_in_width==data_out_width)) && 		    (pop_ae_lvl >= 1) && (pop_ae_lvl <= (depth-1)) && (pop_af_lvl >= 1) && 		    (pop_af_lvl <= (depth-1)) && (err_mode >= 0) && (err_mode <= 1) && 		    (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && 		    (depth >= 4) && (pop_sync >= 1) && (pop_sync <= 3) && 		    (byte_order>=0) && (byte_order<=1)"

   DW_BYPASS        str                  r = DesignWare Test-IEEE-Std-1149-1

   DW_CAPTURE       str                  r = DesignWare Test-IEEE-Std-1149-1

   DW_CAPUP         str                  r = DesignWare Test-IEEE-Std-1149-1

   DW_FIFOCTL_IF    str                  r = DesignWare
                                         leg = "(depth >= 4) && (depth <= 16777216) && 		   (ae_level >= 1) && (ae_level < depth) && 		   (af_level >= 1) && (ae_level < depth) && 		   (err_mode >= 0) && (err_mode <= 1) && 		   (sync_mode >= 1) && (sync_mode <= 3) && 		   (io_mode >= 0) && (io_mode <= 1) && 		   (tst_mode >= 0) && (tst_mode <= 1)"

                    cl2(replaced with str) r = DesignWare
                                         leg = "(depth >= 4) && (depth <= 16777216) && 		   (ae_level >= 1) && (ae_level < depth) && 		   (af_level >= 1) && (ae_level < depth) && 		   (err_mode >= 0) && (err_mode <= 1) && 		   (sync_mode >= 1) && (sync_mode <= 3) && 		   (io_mode >= 0) && (io_mode <= 1) && 		   (tst_mode >= 0) && (tst_mode <= 1)"

                    rpl(replaced with str) r = DesignWare
                                         leg = "(depth >= 4) && (depth <= 16777216) && 		   (ae_level >= 1) && (ae_level < depth) && 		   (af_level >= 1) && (ae_level < depth) && 		   (err_mode >= 0) && (err_mode <= 1) && 		   (sync_mode >= 1) && (sync_mode <= 3) && 		   (io_mode >= 0) && (io_mode <= 1) && 		   (tst_mode >= 0) && (tst_mode <= 1)"

   DW_FIR_SEQ_AU    str                  r = DesignWare

   DW_FIR_SEQ_CSR   str                  r = DesignWare

   DW_FIR_SEQ_CTL   rtl                  r = DesignWare

   DW_FIR_SEQ_DSR   str                  r = DesignWare

   DW_FP_ALIGN      rtl                  r = DesignWare
                                         leg = "(a_width >= 1) && (sh_width >= 1)"

                    rtl1                 r = DesignWare
                                         leg = "(a_width >= 1) && (sh_width >= 1)"

   DW_IDREG         str                  r = DesignWare Test-IEEE-Std-1149-1
                                         leg = "man_num != 127"

   DW_IDREGUC       str                  r = DesignWare Test-IEEE-Std-1149-1
                                         leg = "man_num != 127"

   DW_INSTRREG      str                  r = DesignWare Test-IEEE-Std-1149-1
                                         leg = "(width>=1)&&(width<=256)"

   DW_MEM_2R_W_A_DFF str                 r = DesignWare
                                         leg = "(data_width <= 256) && (data_width >=1) && 			 (depth <= 256) && (depth >= 2) && 			 (rst_mode >= 0) && (rst_mode <= 1)"

   DW_MEM_2R_W_A_LAT str                 r = DesignWare
                                         leg = "(data_width <= 256) && (data_width >=1) && 			 (depth <= 256) && (depth >= 2) && 			 ((rst_mode==0)||(rst_mode==1))"

   DW_MEM_2R_W_S_DFF str                 r = DesignWare
                                         leg = "(data_width <= 2048) && (data_width >=1) && 			 (depth <= 1024) && (depth >= 2) && 			 (rst_mode >= 0) && (rst_mode <= 1)"

   DW_MEM_2R_W_S_LAT str                 r = DesignWare
                                         leg = "(data_width <= 256) && (data_width >=1) && 			 (depth <= 256) && (depth >= 2)"

   DW_MEM_RW_A_DFF  str                  r = DesignWare
                                         leg = "(data_width <= 256) && (data_width >=1) && 			 (depth <= 256) && (depth >= 2) && 			 (rst_mode >=0) && (rst_mode <= 1)"

   DW_MEM_RW_A_LAT  str                  r = DesignWare
                                         leg = "(data_width <= 256) && (data_width >=1) && 			 (depth <= 256) && (depth >= 2) && 			 ((rst_mode==0)||(rst_mode==1))"

   DW_MEM_RW_S_DFF  str                  r = DesignWare
                                         leg = "(data_width <= 2048) && (data_width >=1) && 			 (depth <= 1024) && (depth >= 2) && 			 (rst_mode >= 0) && (rst_mode <= 1)"

   DW_MEM_RW_S_LAT  str                  r = DesignWare
                                         leg = "(data_width <= 256) && (data_width >=1) && 			 (depth <= 256) && (depth >= 2)"

   DW_MEM_R_W_A_DFF str                  r = DesignWare
                                         leg = "(data_width <= 256) && (data_width >=1) && 			 (depth <= 256) && (depth >= 2) && 			 (rst_mode >= 0) && (rst_mode <= 1)"

   DW_MEM_R_W_A_LAT str                  r = DesignWare
                                         leg = "(data_width <= 256) && (data_width >=1) && 			 (depth <= 256) && (depth >= 2) && 			 ((rst_mode==0)||(rst_mode==1))"

   DW_MEM_R_W_S_DFF str                  r = DesignWare
                                         leg = "(data_width <= 2048) && (data_width >=1) && 			 (depth <= 1024) && (depth >= 2) && 			 ((rst_mode==0)||(rst_mode==1))"

   DW_MEM_R_W_S_LAT str                  r = DesignWare
                                         leg = "(data_width <= 256) && (data_width >=1) && 			 (depth <= 256) && (depth >= 2)"

   DW_MULTP_SC      wall                 r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1) && (out_width >= a_width+b_width+2)"

                    nbw                  r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1) && (out_width >= a_width+b_width+2)"

   DW_PREFIX_AND    sk                   r = DesignWare
                                         leg = "(width >= 1)"

                    rtl                  r = DesignWare
                                         leg = "(width >= 1)"

   DW_PREFIX_ANDOR  sk                   r = DesignWare
                                         leg = "(width >= 1)"

   DW_PREFIX_OR     sk                   r = DesignWare
                                         leg = "(width >= 1)"

   DW_PREFIX_XOR    sk                   r = DesignWare
                                         leg = "(width >= 1)"

   DW_PRIORITY_CODER rtl                 r = DesignWare
                                         leg = "(A_width >= 1) &&                    (A_detect_1 >= 0) && (A_detect_1 <= 1) &&                    (DEC_lsb2msb >= 0) && (DEC_lsb2msb <= 1) &&                    (ENC_lsb2msb >= 0) && (ENC_lsb2msb <= 1)"

                    cla                  r = DesignWare
                                         leg = "(A_width >= 1) &&                    (A_detect_1 >= 0) && (A_detect_1 <= 1) &&                    (DEC_lsb2msb >= 0) && (DEC_lsb2msb <= 1) &&                    (ENC_lsb2msb >= 0) && (ENC_lsb2msb <= 1)"

   DW_TAPFSM        str                  r = DesignWare Test-IEEE-Std-1149-1

   DW_addsub_dx     rpl                  r = DesignWare
                                         leg = "(width>=4) && (p1_width>=2) && (p1_width<=(width-2))"

                    rpcs                 r = DesignWare
                                         leg = "(width>=4) && (p1_width>=2) && (p1_width<=(width-2))"

                    csm                  r = DesignWare
                                         leg = "(width>=4) && (p1_width>=2) && (p1_width<=(width-2))"

   DW_and_tree      str                  r = DesignWare
                                         leg = "(width>=1) && (width<=1024)"

   DW_arb_2t        rtl                  r = DesignWare
                                         leg = "(n >= 2) && (n <= 32) && 		  (p_width >= 1) && (p_width <= 5) && 		  ((park_mode == 0) || (park_mode == 1)) && 		  (park_index >= 0) && (park_index <= 31) && 		  ((output_mode == 0) || (output_mode == 1))"

   DW_arb_dp        rtl                  r = DesignWare
                                         leg = "( (n >= 2) && (n <= 32) && 		 ((park_mode == 0) || (park_mode == 1)) && 		 (park_index >= 0) && (park_index <= (n - 1)) && 		 ((output_mode == 0) || (output_mode == 1)))"

   DW_arb_fcfs      rtl                  r = DesignWare
                                         leg = "( (n >= 2) && (n <= 32) && 		 (park_mode == 0) || (park_mode == 1) && 		 (park_index >= 0) && (park_index <= (n - 1)) && 		 (output_mode == 0) || (output_mode == 1) )"

   DW_arb_rr        rtl                  r = DesignWare
                                         leg = "(n >= 2) && (n <= 256)       && ((output_mode == 0) || (output_mode == 1))"

   DW_arb_sp        rtl                  r = DesignWare
                                         leg = "( (n >= 2) && (n <= 32) && 		 (park_mode == 0) || (park_mode ==  1) && 		 (park_index >= 0) && (park_index <= (n - 1)) && 		 (output_mode == 0) || (output_mode == 1) )"

   DW_asymdata_inbuf rtl                 r = DesignWare
                                         leg = "(in_width < out_width) &&                    (out_width == ((out_width/in_width)*in_width)) &&                    (in_width >= 1) && (in_width <= 256) &&                    (out_width >= 1) && (out_width <= 256) &&                    (err_mode >= 0) && (err_mode <= 1) &&                    (byte_order >= 0) && (byte_order <= 1) &&                    (flush_value >= 0) && (flush_value <= 1)"

   DW_asymdata_outbuf rtl                r = DesignWare
                                         leg = "(in_width > out_width) &&                    (in_width == ((in_width/out_width)*out_width)) &&                    (in_width >= 1) && (in_width <= 256) &&                    (out_width >= 1) && (out_width <= 256) &&                    (err_mode >= 0) && (err_mode <= 1) &&                    (byte_order >= 0) && (byte_order <= 1)"

   DW_asymfifo_s1_df str                 r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || ((data_out_width/data_in_width)*data_in_width==data_out_width)) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 3) && (depth <= 256) && (depth >= 2) && (byte_order>=0) && (byte_order<=1)"

                    rpl(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || ((data_out_width/data_in_width)*data_in_width==data_out_width)) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 3) && (depth <= 256) && (depth >= 2) && (byte_order>=0) && (byte_order<=1)"

                    cl1(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || ((data_out_width/data_in_width)*data_in_width==data_out_width)) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 3) && (depth <= 256) && (depth >= 2) && (byte_order>=0) && (byte_order<=1)"

                    cl2(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || ((data_out_width/data_in_width)*data_in_width==data_out_width)) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 3) && (depth <= 256) && (depth >= 2) && (byte_order>=0) && (byte_order<=1)"

   DW_asymfifo_s1_sf str                 r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || ((data_out_width/data_in_width)*data_in_width==data_out_width)) && (ae_level >= 1) && (ae_level < depth) && (af_level >= 1) && (af_level < depth) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 3) && (depth <= 256) && (depth >= 2) && (byte_order>=0) && (byte_order<=1)"

                    rpl(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || ((data_out_width/data_in_width)*data_in_width==data_out_width)) && (ae_level >= 1) && (ae_level < depth) && (af_level >= 1) && (af_level < depth) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 3) && (depth <= 256) && (depth >= 2) && (byte_order>=0) && (byte_order<=1)"

                    cl1(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || ((data_out_width/data_in_width)*data_in_width==data_out_width)) && (ae_level >= 1) && (ae_level < depth) && (af_level >= 1) && (af_level < depth) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 3) && (depth <= 256) && (depth >= 2) && (byte_order>=0) && (byte_order<=1)"

                    cl2(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || ((data_out_width/data_in_width)*data_in_width==data_out_width)) && (ae_level >= 1) && (ae_level < depth) && (af_level >= 1) && (af_level < depth) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 3) && (depth <= 256) && (depth >= 2) && (byte_order>=0) && (byte_order<=1)"

   DW_asymfifo_s2_sf str                 r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && 	      (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || 		  ((data_out_width/data_in_width)*data_in_width==data_out_width)) && 	      (push_ae_lvl >= 1) && (push_ae_lvl <= (depth-1)) && (push_af_lvl >= 1) && 	      (push_af_lvl <= (depth-1)) && (pop_ae_lvl >= 1) && (pop_ae_lvl <= (depth-1)) && 	      (pop_af_lvl >= 1) && (pop_af_lvl <= (depth-1)) && (err_mode >= 0) && (err_mode <= 1) && 	      (rst_mode >= 0) && (rst_mode <= 3) && (depth <= 256) && (depth >= 4) && 	      (push_sync >= 1) && (push_sync <= 3) && (pop_sync >= 1) && (pop_sync <= 3) && 	      (byte_order>=0) && (byte_order<=1)"

                    rpl(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && 	      (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || 		  ((data_out_width/data_in_width)*data_in_width==data_out_width)) && 	      (push_ae_lvl >= 1) && (push_ae_lvl <= (depth-1)) && (push_af_lvl >= 1) && 	      (push_af_lvl <= (depth-1)) && (pop_ae_lvl >= 1) && (pop_ae_lvl <= (depth-1)) && 	      (pop_af_lvl >= 1) && (pop_af_lvl <= (depth-1)) && (err_mode >= 0) && (err_mode <= 1) && 	      (rst_mode >= 0) && (rst_mode <= 3) && (depth <= 256) && (depth >= 4) && 	      (push_sync >= 1) && (push_sync <= 3) && (pop_sync >= 1) && (pop_sync <= 3) && 	      (byte_order>=0) && (byte_order<=1)"

                    cl2(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && 	      (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || 		  ((data_out_width/data_in_width)*data_in_width==data_out_width)) && 	      (push_ae_lvl >= 1) && (push_ae_lvl <= (depth-1)) && (push_af_lvl >= 1) && 	      (push_af_lvl <= (depth-1)) && (pop_ae_lvl >= 1) && (pop_ae_lvl <= (depth-1)) && 	      (pop_af_lvl >= 1) && (pop_af_lvl <= (depth-1)) && (err_mode >= 0) && (err_mode <= 1) && 	      (rst_mode >= 0) && (rst_mode <= 3) && (depth <= 256) && (depth >= 4) && 	      (push_sync >= 1) && (push_sync <= 3) && (pop_sync >= 1) && (pop_sync <= 3) && 	      (byte_order>=0) && (byte_order<=1)"

   DW_asymfifoctl_2c_df rtl              r = DesignWare
                                         leg = "(data_s_width >= 1) && (data_s_width <= 1024) &&                    (data_d_width >= 1) && (data_d_width <= 1024) &&                    ((data_s_width <= data_d_width) ? (data_d_width == ((data_d_width/data_s_width)*data_s_width)) :                     (data_s_width == ((data_s_width/data_d_width)*data_d_width))) &&                    (ram_depth >= 4) && (ram_depth <= 1024) &&                    (mem_mode >= 0) && (mem_mode <= 7) &&                    (arch_type >= 0) && (arch_type <= 1) &&                    ((f_sync_type % 8) >= 1) && ((f_sync_type % 8) <= 4) &&                   ((r_sync_type % 8) >= 1) && ((r_sync_type % 8) <= 4) &&                   (byte_order >= 0) && (byte_order <= 1) &&                    (flush_value >= 0) && (flush_value <= 1) &&                    (((clk_ratio >= -7) && (clk_ratio <= -1)) ||                     ((clk_ratio >= 1) && (clk_ratio <= 7))) &&                    (ram_re_ext >= 0) && (ram_re_ext <= 1) &&                    (err_mode >= 0) && (err_mode <= 1) &&                    (tst_mode >= 0) && (tst_mode <= 1) &&                    ((verif_en == 0) || (verif_en == 1) || (verif_en == 4))"

   DW_asymfifoctl_s1_df str              r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || ((data_out_width/data_in_width)*data_in_width==data_out_width)) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth >= 2) && (byte_order>=0) && (byte_order<=1)"

                    rpl(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || ((data_out_width/data_in_width)*data_in_width==data_out_width)) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth >= 2) && (byte_order>=0) && (byte_order<=1)"

                    cl1(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || ((data_out_width/data_in_width)*data_in_width==data_out_width)) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth >= 2) && (byte_order>=0) && (byte_order<=1)"

                    cl2(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || ((data_out_width/data_in_width)*data_in_width==data_out_width)) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth >= 2) && (byte_order>=0) && (byte_order<=1)"

   DW_asymfifoctl_s1_sf str              r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || ((data_out_width/data_in_width)*data_in_width==data_out_width)) && (ae_level >= 1) && (ae_level < depth) && (af_level >= 1) && (af_level < depth) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth >= 2) && (byte_order>=0) && (byte_order<=1)"

                    rpl(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || ((data_out_width/data_in_width)*data_in_width==data_out_width)) && (ae_level >= 1) && (ae_level < depth) && (af_level >= 1) && (af_level < depth) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth >= 2) && (byte_order>=0) && (byte_order<=1)"

                    cl1(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || ((data_out_width/data_in_width)*data_in_width==data_out_width)) && (ae_level >= 1) && (ae_level < depth) && (af_level >= 1) && (af_level < depth) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth >= 2) && (byte_order>=0) && (byte_order<=1)"

                    cl2(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || ((data_out_width/data_in_width)*data_in_width==data_out_width)) && (ae_level >= 1) && (ae_level < depth) && (af_level >= 1) && (af_level < depth) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth >= 2) && (byte_order>=0) && (byte_order<=1)"

   DW_asymfifoctl_s2_sf str              r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 4096) && (data_out_width >= 1) && 	      (data_out_width <= 4096) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || 	      ((data_out_width/data_in_width)*data_in_width==data_out_width)) && 	      (push_ae_lvl >= 1) && (push_ae_lvl <= (depth-1)) && (push_af_lvl >= 1) && 	      (push_af_lvl <= (depth-1)) && (pop_ae_lvl >= 1) && (pop_ae_lvl <= (depth-1)) && 	      (pop_af_lvl >= 1) && (pop_af_lvl <= (depth-1)) && (err_mode >= 0) && (err_mode <= 1) && 	      (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth >= 4) && 	      (push_sync >= 1) && (push_sync <= 3) && (pop_sync >= 1) && (pop_sync <= 3)  && 	      (byte_order>=0) && (byte_order<=1)"

                    rpl(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && 	      (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || 	      ((data_out_width/data_in_width)*data_in_width==data_out_width)) && 	      (push_ae_lvl >= 1) && (push_ae_lvl <= (depth-1)) && (push_af_lvl >= 1) && 	      (push_af_lvl <= (depth-1)) && (pop_ae_lvl >= 1) && (pop_ae_lvl <= (depth-1)) && 	      (pop_af_lvl >= 1) && (pop_af_lvl <= (depth-1)) && (err_mode >= 0) && (err_mode <= 1) && 	      (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth >= 4) && 	      (push_sync >= 1) && (push_sync <= 3) && (pop_sync >= 1) && (pop_sync <= 3)  && 	      (byte_order>=0) && (byte_order<=1)"

                    cl2(replaced with str) r = DesignWare
                                         leg = "(data_in_width >= 1) && (data_in_width <= 256) && (data_out_width >= 1) && 	      (data_out_width <= 256) && (((data_in_width/data_out_width)*data_out_width==data_in_width) || 	      ((data_out_width/data_in_width)*data_in_width==data_out_width)) && 	      (push_ae_lvl >= 1) && (push_ae_lvl <= (depth-1)) && (push_af_lvl >= 1) && 	      (push_af_lvl <= (depth-1)) && (pop_ae_lvl >= 1) && (pop_ae_lvl <= (depth-1)) && 	      (pop_af_lvl >= 1) && (pop_af_lvl <= (depth-1)) && (err_mode >= 0) && (err_mode <= 1) && 	      (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth >= 4) && 	      (push_sync >= 1) && (push_sync <= 3) && (pop_sync >= 1) && (pop_sync <= 3)  && 	      (byte_order>=0) && (byte_order<=1)"

   DW_bc_1          str                  r = DesignWare Test-IEEE-Std-1149-1

   DW_bc_2          str                  r = DesignWare Test-IEEE-Std-1149-1

   DW_bc_3          str                  r = DesignWare Test-IEEE-Std-1149-1

   DW_bc_4          str                  r = DesignWare Test-IEEE-Std-1149-1

   DW_bc_5          str                  r = DesignWare Test-IEEE-Std-1149-1

   DW_bc_7          str                  r = DesignWare Test-IEEE-Std-1149-1

   DW_bc_8          str                  r = DesignWare Test-IEEE-Std-1149-1

   DW_bc_9          str                  r = DesignWare Test-IEEE-Std-1149-1

   DW_bc_10         str                  r = DesignWare Test-IEEE-Std-1149-1

   DW_bin2gray      str                  r = DesignWare
                                         leg = "(width >= 1)"

   DW_bit_order     str                  r = DesignWare
                                         leg = "(width>=1) && ( (bit_order <= 1) || 			    ( (width == (width/8)*8) && (bit_order <= 3) ))"

   DW_bthenc        str                  r = DesignWare

   DW_cmp_dx        rpl                  r = DesignWare
                                         leg = "(width>=4) && (p1_width>=2) && (p1_width<=(width-2))"

                    bk                   r = DesignWare
                                         leg = "(width>=4) && (p1_width>=2) && (p1_width<=(width-2))"

   DW_cntr_dcnto    rpl(replaced with str) r = DesignWare
                                         leg = "((rst_mode == 0) || (rst_mode == 1)) && (width <= 256) && (width > 0)"

                    cla(replaced with str) r = DesignWare
                                         leg = "((rst_mode == 0) || (rst_mode == 1)) && (width <= 256) && (width > 0)"

                    clf(replaced with str) r = DesignWare
                                         leg = "((rst_mode == 0) || (rst_mode == 1)) && (width <= 256) && (width > 0)"

                    str                  r = DesignWare
                                         leg = "((rst_mode == 0) || (rst_mode == 1)) && (width <= 256) && (width > 0)"

   DW_cntr_gray     rpl(replaced with str) r = DesignWare
                                         leg = "(width >= 1)"

                    cla(replaced with str) r = DesignWare
                                         leg = "(width >= 1)"

                    str                  r = DesignWare
                                         leg = "(width >= 1)"

   DW_cntr_scnto    rpl(replaced with str) r = DesignWare
                                         leg = "(count_to < 2^width) && (dcod_mode >= 0) && (dcod_mode <= 1) && (rst_mode >= 0) && (rst_mode <= 1) && (width <= 30) && (width > 0)"

                    cla(replaced with str) r = DesignWare
                                         leg = "(count_to < 2^width) && (dcod_mode >= 0) && (dcod_mode <= 1) && (rst_mode >= 0) && (rst_mode <= 1) && (width <= 30) && (width > 0)"

                    clf(replaced with str) r = DesignWare
                                         leg = "(count_to < 2^width) && (dcod_mode >= 0) && (dcod_mode <= 1) && (rst_mode >= 0) && (rst_mode <= 1) && (width <= 30) && (width > 0)"

                    str                  r = DesignWare
                                         leg = "(count_to < 2^width) && (dcod_mode >= 0) && (dcod_mode <= 1) && (rst_mode >= 0) && (rst_mode <= 1) && (width <= 30) && (width > 0)"

   DW_cntr_smod     rpl(replaced with str) r = DesignWare
                                         leg = "(modulus>=2)&&(modulus <= 2^width) && (rst_mode >= 0) && (rst_mode <= 1) && (width <= 30) && (width>=1)"

                    cla(replaced with str) r = DesignWare
                                         leg = "(modulus>=2)&&(modulus <= 2^width) && (rst_mode >= 0) && (rst_mode <= 1) && (width <= 30) && (width>=1)"

                    clf(replaced with str) r = DesignWare
                                         leg = "(modulus>=2)&&(modulus <= 2^width) && (rst_mode >= 0) && (rst_mode <= 1) && (width <= 30) && (width>=1)"

                    str                  r = DesignWare
                                         leg = "(modulus>=2)&&(modulus <= 2^width) && (rst_mode >= 0) && (rst_mode <= 1) && (width <= 30) && (width>=1)"

   DW_crc_p         str                  r = DesignWare
                                         leg = "(data_width>=1) && (data_width<=512) && 			   (poly_size>=2) && (poly_size<=64) && 			   (poly_coef0 != ((poly_coef0/2)*2)) && 			   (poly_coef0 > 0) && (poly_coef0 < 65536) && 			   (poly_coef1 >= 0) && (poly_coef1 < 65536) && 			   (poly_coef2 >= 0) && (poly_coef2 < 65536) && 			   (poly_coef3 >= 0) && (poly_coef3 < 65536) && 			   (crc_cfg>=0) && (crc_cfg<=7) && (bit_order>=0) && 			   ( (bit_order<=1) || ( (poly_size == ((poly_size/8)*8)) && 				(data_width == ((data_width/8)*8)) && (bit_order<=3) ) )"

   DW_crc_s         str                  r = DesignWare
                                         leg = "(data_width>=1) && (data_width<=poly_size) && 			   (poly_size>=2) && (poly_size<=64) && 			   (poly_size == ((poly_size/data_width)*data_width)) && 			   (poly_coef0 != ((poly_coef0/2)*2)) && 			   (poly_coef0 > 0) && (poly_coef0 < 65536) && 			   (poly_coef1 >= 0) && (poly_coef1 < 65536) && 			   (poly_coef2 >= 0) && (poly_coef2 < 65536) && 			   (poly_coef3 >= 0) && (poly_coef3 < 65536) && 			   (crc_cfg>=0) && (crc_cfg<=7) && (bit_order>=0) && 			   ( (bit_order<=1) || ( (data_width == ((data_width/8)*8)) && (bit_order<=3) ) )"

   DW_crc_spm       str                  r = DesignWare
                                         leg = "(data_width>=1) && (poly_size>=2) && (poly_size<=64) && 			   (poly_coef0 != ((poly_coef0/2)*2)) && 			   (poly_coef0 > 0) && (poly_coef0 < 65536) && 			   (poly_coef1 >= 0) && (poly_coef1 < 65536) && 			   (poly_coef2 >= 0) && (poly_coef2 < 65536) && 			   (poly_coef3 >= 0) && (poly_coef3 < 65536)"

   DW_data_qsync_hl rtl                  r = DesignWare
                                         leg = "(width >= 1) && (width <= 1024) &&                    (clk_ratio >= 2) && (clk_ratio <= 1024) &&                    (tst_mode >= 0) && (tst_mode <= 2) "

   DW_data_qsync_lh rtl                  r = DesignWare
                                         leg = "(width >= 1) && (width <= 1024) &&                    (clk_ratio >= 2) && (clk_ratio <= 1024) &&                    (reg_data_s >= 0) && (reg_data_s <= 1) &&                    (reg_data_d >= 0) && (reg_data_d <= 1) &&                    (tst_mode >= 0) && (tst_mode <= 2) "

   DW_data_sync     rtl                  r = DesignWare
                                         leg = "(width >= 1) && (width <= 1024) &&                    (pend_mode >= 0) && (pend_mode <= 1) &&                    (ack_delay >= 0) && (ack_delay <= 1) &&                    ((f_sync_type % 8) >= 0) && ((f_sync_type % 8) <= 4) &&                   ((r_sync_type % 8) >= 0) && ((r_sync_type % 8) <= 4) &&                   (tst_mode >= 0) && (tst_mode <= 1) &&                    (verif_en >= 0) && (verif_en <= 4) &&                    (send_mode >= 0) && (send_mode <= 3)"

   DW_data_sync_1c  rtl                  r = DesignWare
                                         leg = "(width >= 1) && (width <= 1024) &&                    ((f_sync_type % 8) >= 0) && ((f_sync_type % 8) <= 4) &&                   (filt_size >= 1) && (filt_size <= 8) &&                   (tst_mode >= 0) && (tst_mode <= 1) &&                    (verif_en >= 0) && (verif_en <= 4)"

   DW_data_sync_na  rtl                  r = DesignWare
                                         leg = "(width >= 1) && (width <= 1024) &&                    ((f_sync_type % 8) >= 0) && ((f_sync_type % 8) <= 4) &&                   (tst_mode >= 0) && (tst_mode <= 1) &&                    (verif_en >= 0) && (verif_en <= 4) &&                    (send_mode >= 0) && (send_mode <= 3)"

   DW_dct_2d        rtl                  r = DesignWare
                                         leg = "((bpp >= 4) && (bpp <= 32) && 		( n>= 4) && (n <= 16) && 		((reg_out == 0) || ( reg_out == 1)) && 		((tc_mode == 0) || (tc_mode == 1)) && 		((rt_mode == 0) || (rt_mode == 1)) && 		((idct_mode == 0) || (idct_mode == 1)) && 		(co_a>= 0) && (co_a<= 65535) && 		(co_b>= 0) && (co_b<= 65535) && 		(co_c>= 0) && (co_c<= 65535) && 		(co_d>= 0) && (co_d<= 65535) && 		(co_e>= 0) && (co_e<= 65535) && 		(co_f>= 0) && (co_f<= 65535) && 		(co_g>= 0) && (co_g<= 65535) && 		(co_h>= 0) && (co_h<= 65535) && 		(co_i>= 0) && (co_i<= 65535) && 		(co_j>= 0) && (co_j<= 65535) && 		(co_k>= 0) && (co_k<= 65535) && 		(co_l>= 0) && (co_l<= 65535) && 		(co_m>= 0) && (co_m<= 65535) && 		(co_n>= 0) && (co_n<= 65535) && 		(co_o>= 0) && (co_o<= 65535) && 		(co_p>= 0) && (co_p<= 65535) )"

   DW_dec           rpl(replaced with apparch) r = DesignWare
                                         leg = "(width>=1)"

                    cla(replaced with pparch) r = DesignWare
                                         leg = "(width>=1)"

                    clf(replaced with pparch) r = DesignWare
                                         leg = "(width>=1)"

   DW_decode_en     str(replaced with cgen) r = DesignWare
                                         leg = "(width>=1)"

   DW_div           rpl                  r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1) && 	     (tc_mode >= 0) && (tc_mode <= 1) && 	     (rem_mode >= 0) && (rem_mode <= 1)"

                    cla                  r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1) && 	     (tc_mode >= 0) && (tc_mode <= 1) && 	     (rem_mode >= 0) && (rem_mode <= 1)"

                    cla2                 r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1) && 	     (tc_mode >= 0) && (tc_mode <= 1) && 	     (rem_mode >= 0) && (rem_mode <= 1)"

   DW_div_pipe      str                  r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1) && 	     (tc_mode >= 0) && (tc_mode <= 1) && 	     (rem_mode >= 0) && (rem_mode <= 1) && 	     (num_stages >=2) && 	     (stall_mode >= 0) && (stall_mode <= 1) && 	     (rst_mode >= 0) && (rst_mode <= 2) && 	     (op_iso_mode >= 0) && (op_iso_mode <= 4)"

   DW_div_seq       cpa                  r = DesignWare
                                         leg = "(b_width >= 3) && (a_width >= 3) && (b_width <= a_width) &&                           (num_cyc >= 3) && (num_cyc <= a_width) &&                           (tc_mode >= 0) && (tc_mode <= 1) &&                            (input_mode >= 0) && (input_mode <= 1) &&                            (output_mode >= 0) && (output_mode <= 1) &&                            (early_start >= 0) && (early_start <= 1) &&                            (((input_mode == 0) && (early_start == 0))||((input_mode == 1)  && (early_start == 0))||((input_mode == 1) && (early_start == 1))) &&                            (rst_mode >= 0) && (rst_mode <= 1)"

                    cpa2                 r = DesignWare
                                         leg = "(b_width >= 3) && (a_width >= 3) && (b_width <= a_width) &&                           (num_cyc >= 3) && (num_cyc <= a_width) &&                           (tc_mode >= 0) && (tc_mode <= 1) &&                            (input_mode >= 0) && (input_mode <= 1) &&                            (output_mode >= 0) && (output_mode <= 1) &&                            (early_start >= 0) && (early_start <= 1) &&                            (((input_mode == 0) && (early_start == 0))||((input_mode == 1)  && (early_start == 0))||((input_mode == 1) && (early_start == 1))) &&                            (rst_mode >= 0) && (rst_mode <= 1)"

   DW_div_tc        rpl                  r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1)"

                    cla                  r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1)"

                    cla2                 r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1)"

   DW_div_uns       rpl                  r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1)"

                    cla                  r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1)"

                    cla2                 r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1)"

   DW_dpll_sd       str                  r = DesignWare
                                         leg = "(width >= 1) && (width <= 16) && 			   (divisor <= 256) && (divisor >= 4) && 			   (gain >= 1) && (gain <= 2) && 			   (filter >= 0) && (filter <= 8) && 			   (windows >= 1) && (windows <= (divisor+1)/2)"

                    rpl(replaced with str) r = DesignWare
                                         leg = "(width >= 1) && (width <= 16) && 			   (divisor <= 256) && (divisor >= 4) && 			   (gain >= 1) && (gain <= 2) && 			   (filter >= 0) && (filter <= 8) && 			   (windows >= 1) && (windows <= (divisor+1)/2)"

                    cla(replaced with str) r = DesignWare
                                         leg = "(width >= 1) && (width <= 16) && 			   (divisor <= 256) && (divisor >= 4) && 			   (gain >= 1) && (gain <= 2) && 			   (filter >= 0) && (filter <= 8) && 			   (windows >= 1) && (windows <= (divisor+1)/2)"

   DW_ecc           str(replaced with rtl) r = DesignWare
                                         leg = "(width <= 502) && (width >= 8) && 	  	     (chkbits <= 10) && (chkbits >= 5) && 		     (width <= ((2^(chkbits-1))-chkbits)) && 		     ((synd_sel==0)||(synd_sel==1))"

                    rtl                  r = DesignWare
                                         leg = "(width <= 8178) && (width >= 8) && 	  	     (chkbits <= 14) && (chkbits >= 5) && 		     (width <= ((2^(chkbits-1))-chkbits)) && 		     ((synd_sel==0)||(synd_sel==1))"

   DW_eq            str                  r = DesignWare
                                         leg = "(width>=1) && (width<=1024)"

   DW_exp2          rtl                  r = DesignWare
                                         p = "3"
                                         leg = "(op_width >= 2) && (op_width <= 60) &&                    (arch >= 0) && (arch <= 2) &&                    (err_range >= 1) && (err_range <= 2)"

                    str                  r = DesignWare
                                         leg = "(op_width >= 2) && (op_width <= 60) &&                    (arch >= 0) && (arch <= 2) &&                    (err_range >= 1) && (err_range <= 2)"

   DW_fifo_2c_df    rtl                  r = DesignWare
                                         leg = "(width >= 1) && (width <= 1024) &&                    (ram_depth >= 4) && (ram_depth <= 1024) &&                    (mem_mode >= 0) && (mem_mode <= 7) &&                    ((f_sync_type % 8) >= 1) && ((f_sync_type % 8) <= 4) &&                   ((r_sync_type % 8) >= 1) && ((r_sync_type % 8) <= 4) &&                   (((clk_ratio >= -7) && (clk_ratio <= -1)) ||                    ((clk_ratio >= 1) && (clk_ratio <= 7))) &&                    (rst_mode >= 0) && (rst_mode <= 1) &&                    (err_mode >= 0) && (err_mode <= 1) &&                    (tst_mode >= 0) && (tst_mode <= 2) &&                    (verif_en >= 0) && (verif_en <= 4) &&                    (clr_dual_domain >= 0) && (clr_dual_domain <= 1) &&                    (arch_type >= 0) && (arch_type <= 1)"

   DW_fifo_s1_df    rpl(replaced with rtl) r = DesignWare
                                         leg = "(err_mode >= 0) && (err_mode <= 2) && 			 (rst_mode >= 0) && (rst_mode <= 3) && 			 (depth <= 1024) && (depth > 1) && 			 (width <= 2048) && (width >= 1)"

                    cl1(replaced with rtl) r = DesignWare
                                         leg = "(err_mode >= 0) && (err_mode <= 2) && 			 (rst_mode >= 0) && (rst_mode <= 3) && 			 (depth <= 1024) && (depth > 1) && 			 (width <= 2048) && (width >= 1)"

                    cl2(replaced with rtl) r = DesignWare
                                         leg = "(err_mode >= 0) && (err_mode <= 2) && 			 (rst_mode >= 0) && (rst_mode <= 3) && 			 (depth <= 1024) && (depth > 1) && 			 (width <= 2048) && (width >= 1)"

                    rtl                  r = DesignWare
                                         leg = "(err_mode >= 0) && (err_mode <= 2) && 			 (rst_mode >= 0) && (rst_mode <= 3) && 			 (depth <= 1024) && (depth > 1) && 			 (width <= 2048) && (width >= 1)"

   DW_fifo_s1_sf    rpl(replaced with rtl) r = DesignWare
                                         leg = "(ae_level > 0) && (ae_level < depth) && 			 (af_level > 0) && (af_level < depth) && 			 (err_mode >= 0) && (err_mode <= 2) && 			 (rst_mode >= 0) && (rst_mode <= 3) && 			 (depth <= 1024) && (depth > 1) && 			 (width <= 2048) && (width >= 1)"

                    cl1(replaced with rtl) r = DesignWare
                                         leg = "(ae_level > 0) && (ae_level < depth) && 			 (af_level > 0) && (af_level < depth) && 			 (err_mode >= 0) && (err_mode <= 2) && 			 (rst_mode >= 0) && (rst_mode <= 3) && 			 (depth <= 1024) && (depth > 1) && 			 (width <= 2048) && (width >= 1)"

                    cl2(replaced with rtl) r = DesignWare
                                         leg = "(ae_level > 0) && (ae_level < depth) && 			 (af_level > 0) && (af_level < depth) && 			 (err_mode >= 0) && (err_mode <= 2) && 			 (rst_mode >= 0) && (rst_mode <= 3) && 			 (depth <= 1024) && (depth > 1) && 			 (width <= 2048) && (width >= 1)"

                    rtl                  r = DesignWare
                                         leg = "(ae_level > 0) && (ae_level < depth) && 			 (af_level > 0) && (af_level < depth) && 			 (err_mode >= 0) && (err_mode <= 2) && 			 (rst_mode >= 0) && (rst_mode <= 3) && 			 (depth <= 1024) && (depth > 1) && 			 (width <= 2048) && (width >= 1)"

   DW_fifo_s2_sf    str                  r = DesignWare
                                         leg = "(push_ae_lvl >= 1) && (push_ae_lvl <= (depth-1)) && 	      (push_af_lvl >= 1) && (push_af_lvl <= (depth-1)) && (pop_ae_lvl >= 1) && 	      (pop_ae_lvl <= (depth-1)) && (pop_af_lvl >= 1) && 	      (pop_af_lvl <= (depth-1)) && (err_mode >= 0) && (err_mode <= 1) && 	      (rst_mode >= 0) && (rst_mode <= 3) && (width > 0) && (width <= 256) && 	      (depth <= 256) && (depth >= 4) && (push_sync >= 1) && 	      (push_sync <= 3) && (pop_sync >= 1) && (pop_sync <= 3)"

                    rpl(replaced with str) r = DesignWare
                                         leg = "(push_ae_lvl >= 1) && (push_ae_lvl <= (depth-1)) && 	      (push_af_lvl >= 1) && (push_af_lvl <= (depth-1)) && (pop_ae_lvl >= 1) && 	      (pop_ae_lvl <= (depth-1)) && (pop_af_lvl >= 1) && 	      (pop_af_lvl <= (depth-1)) && (err_mode >= 0) && (err_mode <= 1) && 	      (rst_mode >= 0) && (rst_mode <= 3) && (width > 0) && (width <= 256) && 	      (depth <= 256) && (depth >= 4) && (push_sync >= 1) && 	      (push_sync <= 3) && (pop_sync >= 1) && (pop_sync <= 3)"

                    cl2(replaced with str) r = DesignWare
                                         leg = "(push_ae_lvl >= 1) && (push_ae_lvl <= (depth-1)) && 	      (push_af_lvl >= 1) && (push_af_lvl <= (depth-1)) && (pop_ae_lvl >= 1) && 	      (pop_ae_lvl <= (depth-1)) && (pop_af_lvl >= 1) && 	      (pop_af_lvl <= (depth-1)) && (err_mode >= 0) && (err_mode <= 1) && 	      (rst_mode >= 0) && (rst_mode <= 3) && (width > 0) && (width <= 256) && 	      (depth <= 256) && (depth >= 4) && (push_sync >= 1) && 	      (push_sync <= 3) && (pop_sync >= 1) && (pop_sync <= 3)"

   DW_fifoctl_2c_df rtl                  r = DesignWare
                                         leg = "(width >= 1) && (width <= 1024) &&                    (ram_depth >= 4) && (ram_depth <= 16777216) &&                    (mem_mode >= 0) && (mem_mode <= 7) &&                    ((f_sync_type % 8) >= 1) && ((f_sync_type % 8) <= 4) &&                   ((r_sync_type % 8) >= 1) && ((r_sync_type % 8) <= 4) &&                   (((clk_ratio >= -7) && (clk_ratio <= -1)) ||                    ((clk_ratio >= 1) && (clk_ratio <= 7))) &&                    (ram_re_ext >= 0) && (ram_re_ext <= 1) &&                    (err_mode >= 0) && (err_mode <= 1) &&                    (tst_mode >= 0) && (tst_mode <= 2) &&                    (verif_en >= 0) && (verif_en <= 4) &&                    (clr_dual_domain >= 0) && (clr_dual_domain <= 1) &&                    (arch_type >= 0) && (arch_type <= 1)"

   DW_fifoctl_s1_df rpl(replaced with rtl) r = DesignWare
                                         leg = "(err_mode >= 0) && (err_mode <= 2) &&                      (rst_mode >= 0) && (rst_mode <= 1) &&                      (depth <= 16777216) && (depth > 1)"

                    cl1(replaced with rtl) r = DesignWare
                                         leg = "(err_mode >= 0) && (err_mode <= 2) &&                      (rst_mode >= 0) && (rst_mode <= 1) &&                      (depth <= 16777216) && (depth > 1)"

                    cl2(replaced with rtl) r = DesignWare
                                         leg = "(err_mode >= 0) && (err_mode <= 2) &&                      (rst_mode >= 0) && (rst_mode <= 1) &&                      (depth <= 16777216) && (depth > 1)"

                    rtl                  r = DesignWare
                                         leg = "(err_mode >= 0) && (err_mode <= 2) &&                    (rst_mode >= 0) && (rst_mode <= 1) &&                    (depth <= 16777216) && (depth > 1)"

   DW_fifoctl_s1_sf rpl(replaced with rtl) r = DesignWare
                                         leg = "(ae_level > 0) && (ae_level < depth) && (af_level > 0) && (af_level < depth) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth > 1)"

                    cl1(replaced with rtl) r = DesignWare
                                         leg = "(ae_level > 0) && (ae_level < depth) && (af_level > 0) && (af_level < depth) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth > 1)"

                    cl2(replaced with rtl) r = DesignWare
                                         leg = "(ae_level > 0) && (ae_level < depth) && (af_level > 0) && (af_level < depth) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth > 1)"

                    rtl                  r = DesignWare
                                         leg = "(ae_level > 0) && (ae_level < depth) && (af_level > 0) && (af_level < depth) && (err_mode >= 0) && (err_mode <= 2) && (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth > 1)"

   DW_fifoctl_s1r   rpl                  r = DesignWare
                                         leg = "(width >= 1) && (width <= 256) && (depth >= 4) && (depth <= 116777216)"

                    cla                  r = DesignWare
                                         leg = "(width >= 1) && (width <= 256) && (depth >= 4) && (depth <= 116777216)"

   DW_fifoctl_s2_sf cl2(replaced with str) r = DesignWare
                                         leg = "(depth >= 4) && (depth <= 16777216) && 		   (push_ae_lvl >= 1) && (push_ae_lvl < depth) && 		   (push_af_lvl >= 1) && (push_ae_lvl < depth) && 		   (pop_ae_lvl >= 1) && (push_ae_lvl < depth) && 		   (pop_af_lvl >= 1) && (push_ae_lvl < depth) && 		   (err_mode >= 0) && (err_mode <= 1) && 		   (push_sync >= 1) && (push_sync <= 3) && 		   (pop_sync >= 1) && (pop_sync <= 3) && 		   (rst_mode >= 0) && (rst_mode <= 1) && 		   (tst_mode >= 0) && (tst_mode <= 1)"

                    rpl(replaced with str) r = DesignWare
                                         leg = "(depth >= 4) && (depth <= 16777216) && 		   (push_ae_lvl >= 1) && (push_ae_lvl < depth) && 		   (push_af_lvl >= 1) && (push_ae_lvl < depth) && 		   (pop_ae_lvl >= 1) && (push_ae_lvl < depth) && 		   (pop_af_lvl >= 1) && (push_ae_lvl < depth) && 		   (err_mode >= 0) && (err_mode <= 1) && 		   (push_sync >= 1) && (push_sync <= 3) && 		   (pop_sync >= 1) && (pop_sync <= 3) && 		   (rst_mode >= 0) && (rst_mode <= 1) && 		   (tst_mode >= 0) && (tst_mode <= 1)"

                    str                  r = DesignWare
                                         leg = "(depth >= 4) && (depth <= 16777216) && 		   (push_ae_lvl >= 1) && (push_ae_lvl < depth) && 		   (push_af_lvl >= 1) && (push_ae_lvl < depth) && 		   (pop_ae_lvl >= 1) && (push_ae_lvl < depth) && 		   (pop_af_lvl >= 1) && (push_ae_lvl < depth) && 		   (err_mode >= 0) && (err_mode <= 1) && 		   (push_sync >= 1) && (push_sync <= 3) && 		   (pop_sync >= 1) && (pop_sync <= 3) && 		   (rst_mode >= 0) && (rst_mode <= 1) && 		   (tst_mode >= 0) && (tst_mode <= 1)"

   DW_fifoctl_s2dr_sf cl2                r = DesignWare
                                         leg = "(depth >= 4) && (depth <= 16777216) && 		   (push_ae_lvl >= 1) && (push_ae_lvl < depth) && 		   (push_af_lvl >= 1) && (push_ae_lvl < depth) && 		   (pop_ae_lvl >= 1) && (push_ae_lvl < depth) && 		   (pop_af_lvl >= 1) && (push_ae_lvl < depth) && 		   (err_mode >= 0) && (err_mode <= 1) && 		   (push_sync >= 1) && (push_sync <= 3) && 		   (pop_sync >= 1) && (pop_sync <= 3) && 		   (tst_mode >= 0) && (tst_mode <= 1)"

                    rpl                  r = DesignWare
                                         leg = "(depth >= 4) && (depth <= 16777216) && 		   (push_ae_lvl >= 1) && (push_ae_lvl < depth) && 		   (push_af_lvl >= 1) && (push_ae_lvl < depth) && 		   (pop_ae_lvl >= 1) && (push_ae_lvl < depth) && 		   (pop_af_lvl >= 1) && (push_ae_lvl < depth) && 		   (err_mode >= 0) && (err_mode <= 1) && 		   (push_sync >= 1) && (push_sync <= 3) && 		   (pop_sync >= 1) && (pop_sync <= 3) && 		   (tst_mode >= 0) && (tst_mode <= 1)"

   DW_fir           str                  r = DesignWare
                                         leg = "(data_in_width >= 1) && 		   (coef_width >= 1) && 		   (data_out_width >= 1) && 		   (order >= 2) && (order <= 256)"

   DW_fir_seq       str                  r = DesignWare
                                         leg = "(data_in_width >= 1) && 		   (coef_width >= 1) && 		   (data_out_width >= 1) && 		   (order >= 2) && (order <= 256)"

   DW_fp_add        rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1)"

   DW_fp_addsub     rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1)"

                    str                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1)"

   DW_fp_cmp        rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                  (exp_width >= 3) && (exp_width <= 31) &&                  (ieee_compliance >= 0) && (ieee_compliance <= 1)"

   DW_fp_div        str                  r = DesignWare
                                         p = "(sig_width > 15) ? 5 : 3"
                                         leg = "(sig_width >= 2) && (sig_width <= 60) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1) &&                    (faithful_round >= 0) && (faithful_round <= 1)"

                    rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1) &&                    (faithful_round == 0)"

   DW_fp_div_seq    rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1) &&                    (num_cyc >= 4) && (num_cyc <= 2*sig_width+3) &&                    (rst_mode >= 0) && (rst_mode <= 1) &&                    (input_mode >= 0) && (input_mode <= 1) &&                    (output_mode >= 0) && (output_mode <= 1) &&                    (early_start >= 0) && (early_start <= 1)"

   DW_fp_dp2        rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1) &&                    (arch_type >= 0) && (arch_type <= 1)"

   DW_fp_dp3        rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1) &&                    (arch_type >= 0) && (arch_type <= 1)"

   DW_fp_dp4        rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1) &&                    (arch_type >= 0) && (arch_type <= 1)"

   DW_fp_exp        rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 60) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1) &&                    (arch >= 0) && (arch <= 2)"

   DW_fp_exp2       rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 60) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1) &&                    (arch >= 0) && (arch <= 2)"

   DW_fp_flt2i      rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (isize >= 3) && (isize <= 512) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1)"

   DW_fp_i2flt      str                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (isize >= 3) && (isize <= 512) &&                    (isign >= 0) && (isign <= 1)"

                    rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (isize >= 3) && (isize <= 512) &&                    (isign >= 0) && (isign <= 1)"

   DW_fp_ifp_conv   rtl                  r = DesignWare
                                         leg = "(sig_widthi >= 2) && (sig_widthi <= 253) &&                    (exp_widthi >= 3) && (exp_widthi <= 31) &&                    (sig_widtho >= sig_widthi+2) && (sig_widtho <= 253) &&                    (exp_widtho >= exp_widthi) && (exp_widtho <= 31) &&                    (use_denormal >= 0) && (use_denormal <= 1) &&                    (use_1scmpl >= 0) && (use_1scmpl <= 1)"

   DW_fp_invsqrt    rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1)"

   DW_fp_ln         rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 60) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1) &&                    (extra_prec >= 0) && (extra_prec < (60-sig_width)) &&                    (arch >= 0) && (arch <= 1) "

   DW_fp_log2       rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 60) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1) &&                    (extra_prec >= 0) && (extra_prec < (60-sig_width)) &&                    (arch >= 0) && (arch <= 2)"

   DW_fp_mac        rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1)"

                    str                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1)"

   DW_fp_mult       rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1)"

                    str                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance == 0)"

   DW_fp_recip      rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 60) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1) &&                    (faithful_round >= 0) && (faithful_round <= 1)"

   DW_fp_sincos     rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 33) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1) &&                    (pi_multiple >= 0) && (pi_multiple <= 1) &&                    (arch >= 0) && (arch <= 2) &&                    (err_range >= 1) && (err_range <= 2)"

   DW_fp_sqrt       rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1)"

   DW_fp_square     rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1)"

   DW_fp_sub        rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1)"

   DW_fp_sum3       rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1) &&                    (arch_type >= 0) && (arch_type <= 1)"

   DW_fp_sum4       rtl                  r = DesignWare
                                         leg = "(sig_width >= 2) && (sig_width <= 253) &&                    (exp_width >= 3) && (exp_width <= 31) &&                    (ieee_compliance >= 0) && (ieee_compliance <= 1) &&                    (arch_type >= 0) && (arch_type <= 1)"

   DW_gray2bin      rpl                  r = DesignWare
                                         leg = "(width >= 1)"

                    cla                  r = DesignWare
                                         leg = "(width >= 1)"

   DW_gray_sync     rtl                  r = DesignWare
                                         leg = "(width >= 1) && (width <= 1024) &&                    (offset >= 0) && (offset <= (2^(width-1))-1) &&                    (reg_count_d >= 0) && (reg_count_d <= 1) &&                    ((f_sync_type % 8) >= 0) && ((f_sync_type % 8) <= 4) &&                    (tst_mode >= 0) && (tst_mode <= 2) &&                    (verif_en >= 0) && (verif_en <= 4) && 		   (pipe_delay >= 0) && (pipe_delay <= 2) &&                    (reg_offset_count_s >= 0) && (reg_offset_count_s <= 1) &&                    (reg_count_s >= 0) && (reg_count_s <= 1)"

   DW_ifp_addsub    rtl                  r = DesignWare
                                         leg = "(sig_widthi >= 2) && (sig_widthi <= 253) &&                    (exp_widthi >= 3) && (exp_widthi <= 31) &&                    (sig_widtho >= sig_widthi) && (sig_widtho <= 253) &&                    (exp_widtho >= exp_widthi) && (exp_widtho <= 31) &&                    (use_denormal >= 0) && (use_denormal <= 1) &&                    (use_1scmpl >= 0) && (use_1scmpl <= 1)"

   DW_ifp_fp_conv   rtl                  r = DesignWare
                                         leg = "(sig_widthi >= 2) && (sig_widthi <= 253) &&                    (exp_widthi >= 3) && (exp_widthi <= 31) &&                    (sig_width >= 2) && (sig_width <= sig_widthi) &&                    (exp_width >= 3) && (exp_width <= exp_widthi) &&                    (use_denormal >= 0) && (use_denormal <= 1)"

   DW_ifp_mult      rtl                  r = DesignWare
                                         leg = "(sig_widthi >= 2) && (sig_widthi <= 253) &&                    (exp_widthi >= 3) && (exp_widthi <= 31) &&                    (sig_widtho >= sig_widthi) && (sig_widtho <= 253) &&                    (exp_widtho >= exp_widthi) && (exp_widtho <= 31)"

   DW_iir_dc        mult                 r = DesignWare
                                         leg = "(data_in_width >= 2) &&          	    (data_out_width >= 2) &&                     (data_out_width <= max(feedback_width, data_in_width + frac_data_out_width)                                        + max_coef_width + 3 - frac_coef_width) &&          	    (frac_data_out_width >= 0) && (frac_data_out_width < data_out_width) &&                     (feedback_width >= 2) &&                     (max_coef_width >= 2) &&                     (frac_coef_width >= 0) && (frac_coef_width < max_coef_width) &&                     (saturation_mode >= 0) && (saturation_mode <= 1) &&                     (out_reg >= 0) && (out_reg <= 1)"

   DW_iir_sc        vsum                 r = DesignWare
                                         leg = "(data_in_width >= 2) &&          	    (data_out_width >= 2) &&                     (data_out_width <= max(feedback_width, data_in_width + frac_data_out_width)                                        + max_coef_width + 3 - frac_coef_width) &&          	    (frac_data_out_width >= 0) && (frac_data_out_width < data_out_width) &&                     (feedback_width >= 2) &&                     (max_coef_width >= 2) && (max_coef_width <= 31) &&                     (frac_coef_width >= 0) && (frac_coef_width < max_coef_width) &&                     (saturation_mode >= 0) && (saturation_mode <= 1) &&                     (out_reg >= 0) && (out_reg <= 1) &&                     (A1_coef >= -2**(max_coef_width-1)) && (A1_coef <= 2**(max_coef_width-1)-1) &&                     (A2_coef >= -2**(max_coef_width-1)) && (A2_coef <= 2**(max_coef_width-1)-1) &&                     (B0_coef >= -2**(max_coef_width-1)) && (B0_coef <= 2**(max_coef_width-1)-1) &&                     (B1_coef >= -2**(max_coef_width-1)) && (B1_coef <= 2**(max_coef_width-1)-1) &&                     (B2_coef >= -2**(max_coef_width-1)) && (B2_coef <= 2**(max_coef_width-1)-1) &&                     ((B1_coef != 0) || (B2_coef != 0) || (A1_coef != 0) || (A2_coef != 0))"

                    mult                 r = DesignWare
                                         leg = "(data_in_width >= 2) &&          	    (data_out_width >= 2) &&                     (data_out_width <= max(feedback_width, data_in_width + frac_data_out_width)                                        + max_coef_width + 3 - frac_coef_width) &&          	    (frac_data_out_width >= 0) && (frac_data_out_width < data_out_width) &&                     (feedback_width >= 2) &&                     (max_coef_width >= 2) && (max_coef_width <= 31) &&                     (frac_coef_width >= 0) && (frac_coef_width < max_coef_width) &&                     (saturation_mode >= 0) && (saturation_mode <= 1) &&                     (out_reg >= 0) && (out_reg <= 1) &&                     (A1_coef >= -2**(max_coef_width-1)) && (A1_coef <= 2**(max_coef_width-1)-1) &&                     (A2_coef >= -2**(max_coef_width-1)) && (A2_coef <= 2**(max_coef_width-1)-1) &&                     (B0_coef >= -2**(max_coef_width-1)) && (B0_coef <= 2**(max_coef_width-1)-1) &&                     (B1_coef >= -2**(max_coef_width-1)) && (B1_coef <= 2**(max_coef_width-1)-1) &&                     (B2_coef >= -2**(max_coef_width-1)) && (B2_coef <= 2**(max_coef_width-1)-1) &&                     ((B1_coef != 0) || (B2_coef != 0) || (A1_coef != 0) || (A2_coef != 0))"

   DW_inc           rpl(replaced with apparch) r = DesignWare
                                         leg = "(width>=1)"

                    cla(replaced with pparch) r = DesignWare
                                         leg = "(width>=1)"

                    clf(replaced with pparch) r = DesignWare
                                         leg = "(width>=1)"

   DW_inc_gray      rpl                  r = DesignWare
                                         leg = "(width >= 1)"

                    cla                  r = DesignWare
                                         leg = "(width >= 1)"

   DW_incdec        rpl(replaced with apparch) r = DesignWare
                                         leg = "(width>=1)"

                    cla(replaced with pparch) r = DesignWare
                                         leg = "(width>=1)"

                    clf(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

   DW_inv_sqrt      rtl                  r = DesignWare
                                         leg = "(a_width >= 2) &&                    (prec_control <= (a_width - 2)/2)"

   DW_leftsh        astr                 r = DesignWare
                                         leg = "(SH_width>=1) && (A_width>=2)"

                    str                  r = DesignWare
                                         leg = "(SH_width>=1) && (A_width>=2)"

   DW_ln            rtl                  r = DesignWare
                                         leg = "(op_width >= 2) && (op_width <= 60) &&                    (arch >= 0) && (arch <= 1) &&                    (err_range >= 1) && (err_range <= 2)"

   DW_lod           cla                  r = DesignWare
                                         leg = "(a_width >= 1)"

                    rtl                  r = DesignWare
                                         leg = "(a_width >= 1)"

   DW_log2          rtl                  r = DesignWare
                                         leg = "(op_width >= 2) && (op_width <= 60) &&                    (arch >= 0) && (arch <= 2) &&                    (err_range >= 1) && (err_range <= 2)"

   DW_lsd           str                  r = DesignWare
                                         leg = "(a_width >= 1)"

   DW_lza           rtl                  r = DesignWare
                                         leg = "(width >= 2 && width <= 256)"

   DW_lzd           rtl                  r = DesignWare
                                         leg = "(a_width >= 1)"

                    cla                  r = DesignWare
                                         leg = "(a_width >= 1)"

   DW_lzod          rtl                  r = DesignWare
                                         leg = "(a_width >= 1) && 		   (detect_1 >= 0) && (detect_1 <= 1)"

                    cla                  r = DesignWare
                                         leg = "(a_width >= 1) && 		   (detect_1 >= 0) && (detect_1 <= 1)"

   DW_mac_tc        pparch               r = DesignWare
                                         leg = "(A_width>=1) && (B_width>=1)"

                    apparch              r = DesignWare
                                         leg = "(A_width>=1) && (B_width>=1)"

   DW_mac_uns       pparch               r = DesignWare
                                         leg = "(A_width>=1) && (B_width>=1)"

                    apparch              r = DesignWare
                                         leg = "(A_width>=1) && (B_width>=1)"

   DW_minmax        cla                  r = DesignWare
                                         leg = "(width >= 1) && (num_inputs >= 2)"

                    clas                 r = DesignWare
                                         leg = "(width >= 1) && (num_inputs >= 2)"

   DW_minmax2       cla                  r = DesignWare
                                         leg = "(width >= 1)"

   DW_minmax4       clas                 r = DesignWare
                                         leg = "(width >= 1)"

   DW_mod_tc        rpl                  r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1)"

                    cla                  r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1)"

                    cla2                 r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1)"

   DW_mod_uns       rpl                  r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1)"

                    cla                  r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1)"

                    cla2                 r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1)"

   DW_mtree         wall                 r = DesignWare
                                         leg = "a_width > 1"

   DW_mult_dx       wall                 r = DesignWare
                                         leg = "(width>=4) && (p1_width>=2) && (p1_width<=(width-2))"

   DW_mult_pipe     str                  r = DesignWare
                                         leg = "(a_width>=1)&&(b_width>=1) && 	     (num_stages >=2) && 	     (stall_mode >= 0) && (stall_mode <= 1) && 	     (rst_mode >= 0) && (rst_mode <= 2) && 	     (op_iso_mode >= 0) && (op_iso_mode <= 4)"

   DW_mult_seq      cpa                  r = DesignWare
                                         leg = "(b_width >= 3) && (a_width >= 3) && (a_width <= b_width) &&                           (num_cyc >= 3) && (num_cyc <= a_width) &&                           (tc_mode >= 0) && (tc_mode <= 1) &&                            (input_mode >= 0) && (input_mode <= 1) &&                            (output_mode >= 0) && (output_mode <= 1) &&                            (early_start >= 0) && (early_start <= 1) &&                            (((input_mode == 0) && (early_start == 0))||((input_mode == 1)  && (early_start == 0))||((input_mode == 1) && (early_start == 1))) &&                            (rst_mode >= 0) && (rst_mode <= 1)"

   DW_ne            str                  r = DesignWare
                                         leg = "(width>=1) && (width<=1024)"

   DW_norm          str                  r = DesignWare
                                         leg = "(a_width >= 2) &&                    (srch_wind >= 2) && (srch_wind <= a_width) &&                    (exp_width >= 1) &&                    (exp_ctr >= 0) && (exp_ctr <= 1)"

                    rtl                  r = DesignWare
                                         leg = "(a_width >= 2) &&                    (srch_wind >= 2) && (srch_wind <= a_width) &&                    (exp_width >= 1) &&                    (exp_ctr >= 0) && (exp_ctr <= 1)"

   DW_norm_rnd      str                  r = DesignWare
                                         leg = "(a_width >= 2) &&                    (srch_wind >= 2) && (srch_wind <= a_width) &&                    (b_width >= 2) && (b_width <= a_width) &&                    (exp_width >= 1) &&                    (exp_ctr >= 0) && (exp_ctr <= 1)"

                    rtl                  r = DesignWare
                                         leg = "(a_width >= 2) &&                    (srch_wind >= 2) && (srch_wind <= a_width) &&                    (b_width >= 2) && (b_width <= a_width) &&                    (exp_width >= 1) &&                    (exp_ctr >= 0) && (exp_ctr <= 1)"

   DW_or_tree       str                  r = DesignWare
                                         leg = "(width>=1) && (width<=1024)"

   DW_pipe_reg      str                  r = DesignWare
                                         leg = "(depth>=0) && (width>=1) && ((rst_mode==0)||(rst_mode==1))"

   DW_piped_mac     rtl                  r = DesignWare
                                         leg = "(a_width >= 1) && (b_width >= 1) &&                    (acc_width >= 2) &&                    (tc >= 0) && (tc <= 1) &&                    (pipe_reg >= 0) && (pipe_reg <= 7) &&                    (id_width >= 1) && (id_width <= 1024) && 		   (no_pm >= 0) && (no_pm <=1) && 		   (op_iso_mode >= 0) && (op_iso_mode <=3)"

   DW_pl_reg        rtl                  r = DesignWare
                                         leg = "(width > 0) && (stages >= 1) && (stages <= 1024) && 		   (in_reg >=0) && (in_reg <= 1) && 		   (out_reg >=0) && (out_reg <= 1) && 		   ((in_reg==0) || (out_reg==0)) && 		   (rst_mode >=0) && (rst_mode <= 1)"

   DW_prod_sum_pipe str                  r = DesignWare
                                         leg = "(a_width>=1)&&(b_width>=1) && 	     (num_inputs >=1) && 	     (num_stages >=2) && 	     (stall_mode >= 0) && (stall_mode <= 1) && 	     (rst_mode >= 0) && (rst_mode <= 2) && 	     (op_iso_mode >= 0) && (op_iso_mode <= 4)"

   DW_pulse_sync    rtl                  r = DesignWare
                                         leg = "(reg_event >= 0) && (reg_event <= 1) && 		   ((f_sync_type % 8) >= 0) && ((f_sync_type % 8) <= 4) &&                   (tst_mode >= 0) && (tst_mode <= 2) &&                    (verif_en >= 0) && (verif_en <= 4) && 		   (pulse_mode >= 0) && (pulse_mode <= 3)"

   DW_pulseack_sync rtl                  r = DesignWare
                                         leg = "(reg_event >= 0) && (reg_event <= 1) && 		   (reg_ack >= 0) && (reg_ack <= 1) && 		   (ack_delay >= 0) && (ack_delay <= 1) && 		   ((f_sync_type % 8) >= 0) && ((f_sync_type % 8) <= 4) && 		   ((r_sync_type % 8) >= 0) && ((r_sync_type % 8) <= 4) &&                    (tst_mode >= 0) && (tst_mode <= 1) &&                    (verif_en >= 0) && (verif_en <= 4) && 		   (pulse_mode >= 0) && (pulse_mode <= 3)"

   DW_ram_2r_w_a_dff str                 r = DesignWare
                                         leg = "(data_width <= 256) && (data_width >=1) && (depth <= 256) && (depth >= 2) && ((rst_mode == 0)||(rst_mode == 1))"

   DW_ram_2r_w_a_lat str                 r = DesignWare
                                         leg = "(data_width <= 256) && (data_width >=1) && (depth <= 256) && (depth >= 2) && ((rst_mode == 0)||(rst_mode == 1))"

   DW_ram_2r_w_s_dff str                 r = DesignWare
                                         leg = "(data_width <= 2048) && (data_width >=1) && 			(depth <= 1024) && (depth >= 2) && 			(rst_mode >= 0) && (rst_mode <= 1)"

   DW_ram_2r_w_s_lat str                 r = DesignWare
                                         leg = "(data_width <= 256) && (data_width >=1) && (depth <= 256) && (depth >= 2)"

   DW_ram_r_w_2c_dff rtl                 r = DesignWare
                                         leg = "(width >= 1) && (width <= 1024) &&                    (depth >= 2) && (depth <= 1024) &&                    ((2**addr_width) >= depth) && ((2**(addr_width-1)) < depth) &&                    (mem_mode >= 0) && (mem_mode <= 7) &&                    (rst_mode >= 0) && (rst_mode <= 1)"

   DW_ram_r_w_a_dff str                  r = DesignWare
                                         leg = "(data_width <= 256) && (data_width >=1) && (depth <= 256) && (depth >= 2) && ((rst_mode == 0)||(rst_mode == 1))"

   DW_ram_r_w_a_lat str                  r = DesignWare
                                         leg = "(data_width <= 256) && (data_width >=1) && (depth <= 256) && (depth >= 2) && ((rst_mode == 0)||(rst_mode == 1))"

   DW_ram_r_w_s_dff str                  r = DesignWare
                                         leg = "(data_width <= 2048) && (data_width >=1) && 			(depth <= 1024) && (depth >= 2) && 			(rst_mode >=0) && (rst_mode <= 1)"

   DW_ram_r_w_s_lat str                  r = DesignWare
                                         leg = "(data_width <= 256) && (data_width >=1) && (depth <= 256) && (depth >= 2)"

   DW_ram_rw_a_dff  str                  r = DesignWare
                                         leg = "(data_width <= 256) && (data_width >=1) && (depth <= 256) && (depth >= 2) && (rst_mode >= 0) && (rst_mode <= 1)"

   DW_ram_rw_a_lat  str                  r = DesignWare
                                         leg = "(data_width <= 256) && (data_width >=1) && (depth <= 256) && (depth >= 2) && ((rst_mode==0)||(rst_mode==1))"

   DW_ram_rw_s_dff  str                  r = DesignWare
                                         leg = "(data_width <= 2048) && (data_width >=1) && 			(depth <= 1024) && (depth >= 2) && 			(rst_mode>=0) && (rst_mode <= 1)"

   DW_ram_rw_s_lat  str                  r = DesignWare
                                         leg = "(data_width <= 256) && (data_width >=1) && (depth <= 256) && (depth >= 2)"

   DW_reset_sync    rtl                  r = DesignWare
                                         leg = "((f_sync_type % 8) >= 0) && ((f_sync_type % 8) <= 4) &&		   ((r_sync_type % 8) >= 0) && ((r_sync_type % 8) <= 4) &&                   (reg_in_prog >= 0) && (reg_in_prog <= 1) &&                    (tst_mode >= 0) && (tst_mode <= 2) &&                    (verif_en >= 0) && (verif_en <= 4)"

   DW_rightsh       astr                 r = DesignWare
                                         leg = "(SH_width>=1) && (A_width>=2)"

                    str                  r = DesignWare
                                         leg = "(SH_width>=1) && (A_width>=2)"

   DW_shifter       mx2                  r = DesignWare
                                         leg = "(data_width >= 2) && (sh_width>=1) && (sh_width<=sh_width_uplmt) && (inv_mode>=0) && (inv_mode<=3)"

                    mx2i                 r = DesignWare
                                         leg = "(data_width >= 2) && (sh_width>=1) && (sh_width<=sh_width_uplmt) && (inv_mode>=0) && (inv_mode<=3)"

                    mx4                  r = DesignWare
                                         leg = "(data_width >= 2) && (sh_width>=1) && (sh_width<=sh_width_uplmt) && (inv_mode>=0) && (inv_mode<=3)"

                    mx8                  r = DesignWare
                                         leg = "(data_width >= 2) && (sh_width>=1) && (sh_width<=sh_width_uplmt) && (inv_mode>=0) && (inv_mode<=3)"

   DW_sincos        rtl                  r = DesignWare
                                         leg = "(A_width >= 2) && (A_width <= 34) &&                    (WAVE_width >= 2) && (WAVE_width <= 35) &&                    (arch >= 0) && (arch <= 1) &&                    (err_range >= 1) && (err_range <= 2)"

   DW_sqrt          rpl                  r = DesignWare
                                         leg = "(width >= 2) && (tc_mode >= 0) && (tc_mode <= 1)"

                    cla                  r = DesignWare
                                         leg = "(width >= 2) && (tc_mode >= 0) && (tc_mode <= 1)"

   DW_sqrt_pipe     str                  r = DesignWare
                                         leg = "(width >= 2)  && 	     (tc_mode >= 0) && (tc_mode <= 1) && 	     (num_stages >=2) && 	     (stall_mode >= 0) && (stall_mode <= 1) && 	     (rst_mode >= 0) && (rst_mode <= 2) && 	     (op_iso_mode >= 0) && (op_iso_mode <= 4)"

   DW_sqrt_rem      cla                  r = DesignWare
                                         leg = "(width >= 2) &&                    (tc_mode >= 0) && (tc_mode <= 1)"

   DW_sqrt_seq      cpa                  r = DesignWare
                                         leg = "(width >= 6) &&                           (num_cyc >= 3) && (num_cyc <= (width+1)/2) &&                           (tc_mode >= 0) && (tc_mode <= 1) &&                           (input_mode >= 0) && (input_mode <= 1) &&                            (output_mode >= 0) && (output_mode <= 1) &&                            (early_start >= 0) && (early_start <= 1) &&                            (((input_mode == 0) && (early_start == 0))||((input_mode == 1)  && (early_start == 0))||((input_mode == 1) && (early_start == 1))) &&                            (rst_mode >= 0) && (rst_mode <= 1)"

   DW_sqrt_tc       rpl                  r = DesignWare
                                         leg = "(width >= 2)"

                    cla                  r = DesignWare
                                         leg = "(width >= 2)"

   DW_sqrt_uns      rpl                  r = DesignWare
                                         leg = "(width >= 2)"

                    cla                  r = DesignWare
                                         leg = "(width >= 2)"

   DW_square        wall(replaced with apparch) r = DesignWare

   DW_squarep       wall                 r = DesignWare

   DW_stack         str                  r = DesignWare
                                         leg = "(err_mode >= 0) && (err_mode <= 1) && (rst_mode >= 0) && (rst_mode <= 3) && (depth <= 256) && (depth > 1) && (width <= 256) && (width >= 1)"

                    rpl(replaced with str) r = DesignWare
                                         leg = "(err_mode >= 0) && (err_mode <= 1) && (rst_mode >= 0) && (rst_mode <= 3) && (depth <= 256) && (depth > 1) && (width <= 256) && (width >= 1)"

                    cl2(replaced with str) r = DesignWare
                                         leg = "(err_mode >= 0) && (err_mode <= 1) && (rst_mode >= 0) && (rst_mode <= 3) && (depth <= 256) && (depth > 1) && (width <= 256) && (width >= 1)"

   DW_stackctl      str                  r = DesignWare
                                         leg = "(err_mode >= 0) && (err_mode <= 1) && (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth > 1)"

                    rpl(replaced with str) r = DesignWare
                                         leg = "(err_mode >= 0) && (err_mode <= 1) && (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth > 1)"

                    cl2(replaced with str) r = DesignWare
                                         leg = "(err_mode >= 0) && (err_mode <= 1) && (rst_mode >= 0) && (rst_mode <= 1) && (depth <= 16777216) && (depth > 1)"

   DW_stream_sync   rtl                  r = DesignWare
                                         leg = "(width >= 1) && (width <= 1024) &&                    (depth >= 2) && (depth <= 256) &&                    (prefill_lvl >= 0) && (prefill_lvl <= (depth-1)) &&                    ((f_sync_type % 8) >= 0) && ((f_sync_type % 8) <= 4) &&                   (reg_stat >= 0) && (reg_stat <= 1) &&                    (tst_mode >= 0) && (tst_mode <= 2) &&                    (verif_en >= 0) && (verif_en <= 4) &&                    ((r_sync_type % 8) >= 0) && ((r_sync_type % 8) <= 4) &&                   (clk_d_faster >= 0) && (clk_d_faster <= 15) &&                    (reg_in_prog >= 0) && (reg_in_prog <= 1)"

   DW_sync          rtl                  r = DesignWare
                                         leg = "(width >= 1) && (width <= 1024) &&                    ((f_sync_type % 8) >= 0) && ((f_sync_type % 8) <= 4) &&                   (tst_mode >= 0) && (tst_mode <= 2) &&                    (verif_en >= 0) && (verif_en <= 4)"

   DW_tap           str                  r = DesignWare Test-IEEE-Std-1149-1
                                         leg = "(width >= 2 ) && (width <= 256)                           && (id >= 0) && (id <= 1)                           && (version >= 0) && (version <= 15)                           && (part >= 0) && (part <= 65535)                           && ((man_num >= 0) && (man_num <= 2047)) && (man_num != 127)                           && (sync_mode == 0) || (sync_mode == 1)"

   DW_tap_uc        str                  r = DesignWare Test-IEEE-Std-1149-1
                                         leg = "(width >= 2 ) && (width <= 256)                           && (id >= 0) && (id <= 1)                           && (idcode_opcode >= 1) && (idcode_opcode <= max_opcode)                           && (version >= 0) && (version <= 15)                           && (part >= 0) && (part <= 65535)                           && ((man_num >= 0) && (man_num <= 2047)) && (man_num != 127)                           && (sync_mode == 0) || (sync_mode == 1)"

   DW_tap_uc2       str                  r = DesignWare Test-IEEE-Std-1149-1
                                         leg = "(width >= 2 ) && (width <= 256)                           && (id >= 0) && (id <= 1)                           && (idcode_opcode >= 1) && (idcode_opcode <= max_opcode)                           && (version >= 0) && (version <= 15)                           && (part >= 0) && (part <= 65535)                           && ((man_num >= 0) && (man_num <= 2047)) && (man_num != 127)                           && (sync_mode == 0) || (sync_mode == 1)"

   DW_thermdec      verif                v

   DW_wc_d1_s       str                  r = DesignWare Test-Core-Wrapper
                                         leg = "((rst_mode>=0)&&(rst_mode<=3))"

   DW_wc_s1_s       str                  r = DesignWare Test-Core-Wrapper
                                         leg = "((rst_mode>=0)&&(rst_mode<=3))"

   DWsc_fifoctl_dif rtl                  r = DesignWare
                                         leg = "(width >= 1) && (width <= 1024) &&                    (ram_depth >= 4) && (ram_depth <= 16777216) &&                    (mem_mode >= 0) && (mem_mode <= 7) &&                    (ram_re_ext >= 0) && (ram_re_ext <= 1) &&                    (err_mode >= 0) && (err_mode <= 1) &&                    (arch_type >= 0) && (arch_type <= 1)"

   DWsc_fifoctl_s1_df rtl                r = DesignWare

   DWsc_fifoctl_sif rtl                  r = DesignWare
                                         leg = "(ram_depth >= 4) && (ram_depth <= 16777216) &&                    (mem_mode >= 0) && (mem_mode <= 7) &&                    (err_mode >= 0) && (err_mode <= 1)"


Module Bindings:

Module              Binding
--------------------------------------------------------------------------------
DW01_binenc         b1       bound_operator: BINENC_TC_OP
                             Pin Associations (module, oper):
                                 A, A
                                 ADDR, Z

                    b2       bound_operator: BINENC_UNS_OP
                             Pin Associations (module, oper):
                                 A, A
                                 ADDR, Z

                    b3       bound_operator: BINENC_STD_LOGIC_OP
                             Pin Associations (module, oper):
                                 A, A
                                 ADDR, Z

DW01_bsh            b1       bound_operator: BSH_UNS_OP
                             Pin Associations (module, oper):
                                 A, A
                                 SH, SH
                                 B, Z

                    b2       bound_operator: BSH_TC_OP
                             Pin Associations (module, oper):
                                 A, A
                                 SH, SH
                                 B, Z

DW01_csa            csa_b1   bound_operator: CSA_UNS_OP
                             Pin Associations (module, oper):
                                 a, A
                                 b, B
                                 c, C
                                 ci, CI
                                 carry, CARRY
                                 sum, SUM
                                 co, CO

                    csa_b2   bound_operator: CSA_UNS_OP
                             Pin Associations (module, oper):
                                 a, A
                                 b, C
                                 c, B
                                 ci, CI
                                 carry, CARRY
                                 sum, SUM
                                 co, CO

                    csa_b3   bound_operator: CSA_UNS_OP
                             Pin Associations (module, oper):
                                 a, B
                                 b, A
                                 c, C
                                 ci, CI
                                 carry, CARRY
                                 sum, SUM
                                 co, CO

                    csa_b4   bound_operator: CSA_UNS_OP
                             Pin Associations (module, oper):
                                 a, B
                                 b, C
                                 c, A
                                 ci, CI
                                 carry, CARRY
                                 sum, SUM
                                 co, CO

                    csa_b5   bound_operator: CSA_UNS_OP
                             Pin Associations (module, oper):
                                 a, C
                                 b, A
                                 c, B
                                 ci, CI
                                 carry, CARRY
                                 sum, SUM
                                 co, CO

                    csa_b6   bound_operator: CSA_UNS_OP
                             Pin Associations (module, oper):
                                 a, C
                                 b, B
                                 c, A
                                 ci, CI
                                 carry, CARRY
                                 sum, SUM
                                 co, CO

                    csa_b7   bound_operator: CSA_TC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 b, B
                                 c, C
                                 ci, CI
                                 carry, CARRY
                                 sum, SUM
                                 co, CO

                    csa_b8   bound_operator: CSA_TC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 b, C
                                 c, B
                                 ci, CI
                                 carry, CARRY
                                 sum, SUM
                                 co, CO

                    csa_b9   bound_operator: CSA_TC_OP
                             Pin Associations (module, oper):
                                 a, B
                                 b, A
                                 c, C
                                 ci, CI
                                 carry, CARRY
                                 sum, SUM
                                 co, CO

                    csa_b10  bound_operator: CSA_TC_OP
                             Pin Associations (module, oper):
                                 a, B
                                 b, C
                                 c, A
                                 ci, CI
                                 carry, CARRY
                                 sum, SUM
                                 co, CO

                    csa_b11  bound_operator: CSA_TC_OP
                             Pin Associations (module, oper):
                                 a, C
                                 b, A
                                 c, B
                                 ci, CI
                                 carry, CARRY
                                 sum, SUM
                                 co, CO

                    csa_b12  bound_operator: CSA_TC_OP
                             Pin Associations (module, oper):
                                 a, C
                                 b, B
                                 c, A
                                 ci, CI
                                 carry, CARRY
                                 sum, SUM
                                 co, CO

DW01_mux_any        b1       bound_operator: MUX_ANY_OP
                             Pin Associations (module, oper):
                                 A, A
                                 SEL, SEL
                                 MUX, MUX

DW01_prienc         b1       bound_operator: PRIENC_TC_OP
                             Pin Associations (module, oper):
                                 A, A
                                 INDEX, Z

                    b2       bound_operator: PRIENC_UNS_OP
                             Pin Associations (module, oper):
                                 A, A
                                 INDEX, Z

                    b3       bound_operator: PRIENC_STD_LOGIC_OP
                             Pin Associations (module, oper):
                                 A, A
                                 INDEX, Z

DW02_cos            b1       bound_operator: COS_TC_OP
                             Pin Associations (module, oper):
                                 A, A
                                 COS, WAVE
                             Unbound oper pin 'width' is bound to "1"

DW02_mac            b1       bound_operator: MAC_TC_OP
                             Pin Associations (module, oper):
                                 A, A
                                 B, B
                                 C, C
                                 TC,"1"
                                 MAC, Z

                    b2       bound_operator: MAC_TC_OP
                             Pin Associations (module, oper):
                                 A, B
                                 B, A
                                 C, C
                                 TC,"1"
                                 MAC, Z

                    b3       bound_operator: MAC_UNS_OP
                             Pin Associations (module, oper):
                                 A, A
                                 B, B
                                 C, C
                                 TC,"0"
                                 MAC, Z

                    b4       bound_operator: MAC_UNS_OP
                             Pin Associations (module, oper):
                                 A, B
                                 B, A
                                 C, C
                                 TC,"0"
                                 MAC, Z

DW02_multp          b1       bound_operator: MULTP_TC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 b, B
                                 tc,"1"
                                 out0, Z1
                                 out1, Z2

                    b2       bound_operator: MULTP_TC_OP
                             Pin Associations (module, oper):
                                 a, B
                                 b, A
                                 tc,"1"
                                 out0, Z1
                                 out1, Z2

                    b3       bound_operator: MULTP_UNS_OP
                             Pin Associations (module, oper):
                                 a, A
                                 b, B
                                 tc,"0"
                                 out0, Z1
                                 out1, Z2

                    b4       bound_operator: MULTP_UNS_OP
                             Pin Associations (module, oper):
                                 a, B
                                 b, A
                                 tc,"0"
                                 out0, Z1
                                 out1, Z2

DW02_prod_sum       b1       bound_operator: PRODSUM_UNS_OP
                             Pin Associations (module, oper):
                                 A, A
                                 B, B
                                 TC,"0"
                                 SUM, Z
                             Unbound oper pin 'num_inputs' is bound to "1"
                             Unbound oper pin 'SUM_width' is bound to "1"

                    b2       bound_operator: PRODSUM_TC_OP
                             Pin Associations (module, oper):
                                 A, A
                                 B, B
                                 TC,"1"
                                 SUM, Z
                             Unbound oper pin 'num_inputs' is bound to "1"
                             Unbound oper pin 'SUM_width' is bound to "1"

                    b3       bound_operator: PRODSUM_UNS_OP
                             Pin Associations (module, oper):
                                 A, B
                                 B, A
                                 TC,"0"
                                 SUM, Z
                             Unbound oper pin 'num_inputs' is bound to "1"
                             Unbound oper pin 'SUM_width' is bound to "1"

                    b4       bound_operator: PRODSUM_TC_OP
                             Pin Associations (module, oper):
                                 A, B
                                 B, A
                                 TC,"1"
                                 SUM, Z
                             Unbound oper pin 'num_inputs' is bound to "1"
                             Unbound oper pin 'SUM_width' is bound to "1"

DW02_prod_sum1      b1       bound_operator: PRODSUM1_UNS_OP
                             Pin Associations (module, oper):
                                 A, A
                                 B, B
                                 C, C
                                 TC,"0"
                                 SUM, Z

                    b2       bound_operator: PRODSUM1_TC_OP
                             Pin Associations (module, oper):
                                 A, A
                                 B, B
                                 C, C
                                 TC,"1"
                                 SUM, Z

                    b3       bound_operator: PRODSUM1_UNS_OP
                             Pin Associations (module, oper):
                                 A, B
                                 B, A
                                 C, C
                                 TC,"0"
                                 SUM, Z

                    b4       bound_operator: PRODSUM1_TC_OP
                             Pin Associations (module, oper):
                                 A, B
                                 B, A
                                 C, C
                                 TC,"1"
                                 SUM, Z

DW02_sin            b1       bound_operator: SIN_TC_OP
                             Pin Associations (module, oper):
                                 A, A
                                 SIN, WAVE
                             Unbound oper pin 'width' is bound to "1"

DW02_sincos         b1       bound_operator: SIN_TC_OP
                             Pin Associations (module, oper):
                                 A, A
                                 SIN_COS,"0"
                                 WAVE, WAVE
                             Unbound oper pin 'width' is bound to "1"

                    b2       bound_operator: COS_TC_OP
                             Pin Associations (module, oper):
                                 A, A
                                 SIN_COS,"1"
                                 WAVE, WAVE
                             Unbound oper pin 'width' is bound to "1"

DW02_sum            b1       bound_operator: SUM_UNS_OP
                             Pin Associations (module, oper):
                                 INPUT, A
                                 SUM, Z

                    b2       bound_operator: VECTOR_SUM_OP
                             Pin Associations (module, oper):
                                 INPUT, A
                                 SUM, Z

                    b3       bound_operator: SUM_TC_OP
                             Pin Associations (module, oper):
                                 INPUT, A
                                 SUM, Z

DW02_tree           b1       bound_operator: WALL_TREE_TC_OP
                             Pin Associations (module, oper):
                                 INPUT, A
                                 OUT0, Z1
                                 OUT1, Z2

DW04_par_gen        b1       bound_operator: PAR_ODD_OP
                             Pin Associations (module, oper):
                                 datain, datain
                                 parity, parity

DW_PREFIX_AND       b1       bound_operator: PREFIX_AND_OP
                             Pin Associations (module, oper):
                                 pi, PI
                                 po, PO

DW_bin2gray         b1       bound_operator: BIN2GRAY_STD_LOGIC_OP
                             Pin Associations (module, oper):
                                 b, B
                                 g, G

DW_cmp              b1       bound_operator: LT_UNS_OP
                             Pin Associations (module, oper):
                                 TC,"0"
                                 A, A
                                 B, B
                                 GE_LT,"1"
                                 GE_GT_EQ,"0"
                                 GE_LT_GT_LE, Z

                    b2       bound_operator: GT_UNS_OP
                             Pin Associations (module, oper):
                                 TC,"0"
                                 A, A
                                 B, B
                                 GE_LT,"0"
                                 GE_GT_EQ,"1"
                                 GE_LT_GT_LE, Z

                    b3       bound_operator: LEQ_UNS_OP
                             Pin Associations (module, oper):
                                 TC,"0"
                                 A, A
                                 B, B
                                 GE_LT,"0"
                                 GE_GT_EQ,"0"
                                 GE_LT_GT_LE, Z

                    b4       bound_operator: GEQ_UNS_OP
                             Pin Associations (module, oper):
                                 TC,"0"
                                 A, A
                                 B, B
                                 GE_LT,"1"
                                 GE_GT_EQ,"1"
                                 GE_LT_GT_LE, Z

                    b5       bound_operator: EQ_UNS_OP
                             Pin Associations (module, oper):
                                 TC,"0"
                                 A, A
                                 B, B
                                 GE_LT,"0"
                                 GE_GT_EQ,"1"
                                 EQ_NE, Z

                    b6       bound_operator: NE_UNS_OP
                             Pin Associations (module, oper):
                                 TC,"0"
                                 A, A
                                 B, B
                                 GE_LT,"0"
                                 GE_GT_EQ,"0"
                                 EQ_NE, Z

                    b7       bound_operator: LT_TC_OP
                             Pin Associations (module, oper):
                                 TC,"1"
                                 A, A
                                 B, B
                                 GE_LT,"1"
                                 GE_GT_EQ,"0"
                                 GE_LT_GT_LE, Z

                    b8       bound_operator: GT_TC_OP
                             Pin Associations (module, oper):
                                 TC,"1"
                                 A, A
                                 B, B
                                 GE_LT,"0"
                                 GE_GT_EQ,"1"
                                 GE_LT_GT_LE, Z

                    b9       bound_operator: LEQ_TC_OP
                             Pin Associations (module, oper):
                                 TC,"1"
                                 A, A
                                 B, B
                                 GE_LT,"0"
                                 GE_GT_EQ,"0"
                                 GE_LT_GT_LE, Z

                    b10      bound_operator: GEQ_TC_OP
                             Pin Associations (module, oper):
                                 TC,"1"
                                 A, A
                                 B, B
                                 GE_LT,"1"
                                 GE_GT_EQ,"1"
                                 GE_LT_GT_LE, Z

                    b11      bound_operator: EQ_TC_OP
                             Pin Associations (module, oper):
                                 TC,"1"
                                 A, A
                                 B, B
                                 GE_LT,"0"
                                 GE_GT_EQ,"1"
                                 EQ_NE, Z

                    b12      bound_operator: NE_TC_OP
                             Pin Associations (module, oper):
                                 TC,"1"
                                 A, A
                                 B, B
                                 GE_LT,"0"
                                 GE_GT_EQ,"0"
                                 EQ_NE, Z

DW_div_tc           b1       bound_operator: DIV_TC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 b, B
                                 quotient, QUOTIENT

                    b2       bound_operator: REM_TC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 b, B
                                 remainder, REMAINDER

                    b3       bound_operator: DIVREM_TC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 b, B
                                 quotient, QUOTIENT
                                 remainder, REMAINDER

DW_div_uns          b1       bound_operator: DIV_UNS_OP
                             Pin Associations (module, oper):
                                 a, A
                                 b, B
                                 quotient, QUOTIENT

                    b2       bound_operator: REM_UNS_OP
                             Pin Associations (module, oper):
                                 a, A
                                 b, B
                                 remainder, REMAINDER

                    b3       bound_operator: DIVREM_UNS_OP
                             Pin Associations (module, oper):
                                 a, A
                                 b, B
                                 quotient, QUOTIENT
                                 remainder, REMAINDER

DW_ecc              b1       bound_operator: ECC_WR_OP
                             Pin Associations (module, oper):
                                 gen,"1"
                                 correct_n,"0"
                                 datain, datain
                                 chkin,"0"
                                 chkout, chkout
                             Unbound oper pin 'synd_sel' is bound to "0"

                    b2       bound_operator: ECC_RD_OP
                             Pin Associations (module, oper):
                                 gen,"0"
                                 correct_n, correct_n
                                 datain, datain
                                 chkin, chkin
                                 err_detect, err_detect
                                 err_multpl, err_multpl
                                 dataout, dataout
                                 chkout, chkout
                             Unbound oper pin 'correct_n' is bound to "0"
                             Unbound oper pin 'synd_sel' is bound to "0"

DW_gray2bin         b1       bound_operator: GRAY2BIN_STD_LOGIC_OP
                             Pin Associations (module, oper):
                                 g, G
                                 b, B

DW_inc_gray         b1       bound_operator: INC_GRAY_STD_LOGIC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 ci, CI
                                 z, Z

DW_leftsh           b1       bound_operator: ASH_UNS_UNS_OP
                             Pin Associations (module, oper):
                                 A, A
                                 SH, SH
                                 B, Z

                    b2       bound_operator: ASH_TC_UNS_OP
                             Pin Associations (module, oper):
                                 A, A
                                 SH, SH
                                 B, Z

DW_lod              b_dec_std bound_operator: LOD_DEC_STD_LOGIC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 dec, Z

                    b_dec_tc bound_operator: LOD_DEC_TC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 dec, Z

                    b_dec_uns bound_operator: LOD_DEC_UNS_OP
                             Pin Associations (module, oper):
                                 a, A
                                 dec, Z

                    b_enc_std bound_operator: LOD_ENC_STD_LOGIC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 enc, Z

                    b_enc_tc bound_operator: LOD_ENC_TC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 enc, Z

                    b_enc_uns bound_operator: LOD_ENC_UNS_OP
                             Pin Associations (module, oper):
                                 a, A
                                 enc, Z

DW_lsd              b_dec_std bound_operator: LSD_DEC_STD_LOGIC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 dec, Z

                    b_dec_tc bound_operator: LSD_DEC_TC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 dec, Z

                    b_dec_uns bound_operator: LSD_DEC_UNS_OP
                             Pin Associations (module, oper):
                                 a, A
                                 dec, Z

                    b_enc_std bound_operator: LSD_ENC_STD_LOGIC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 enc, Z

                    b_enc_tc bound_operator: LSD_ENC_TC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 enc, Z

                    b_enc_uns bound_operator: LSD_ENC_UNS_OP
                             Pin Associations (module, oper):
                                 a, A
                                 enc, Z

DW_lza              a_cnt_std bound_operator: LZA_CNT_STD_LOGIC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 b, B
                                 count, Z

DW_lzd              b_dec_std bound_operator: LZD_DEC_STD_LOGIC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 dec, Z

                    b_dec_tc bound_operator: LZD_DEC_TC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 dec, Z

                    b_dec_uns bound_operator: LZD_DEC_UNS_OP
                             Pin Associations (module, oper):
                                 a, A
                                 dec, Z

                    b_enc_std bound_operator: LZD_ENC_STD_LOGIC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 enc, Z

                    b_enc_tc bound_operator: LZD_ENC_TC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 enc, Z

                    b_enc_uns bound_operator: LZD_ENC_UNS_OP
                             Pin Associations (module, oper):
                                 a, A
                                 enc, Z

DW_mac_tc           b1       bound_operator: MAC_TC_OP
                             Pin Associations (module, oper):
                                 A, A
                                 B, B
                                 C, C
                                 MAC, Z

DW_mac_uns          b1       bound_operator: MAC_UNS_OP
                             Pin Associations (module, oper):
                                 A, A
                                 B, B
                                 C, C
                                 MAC, Z

DW_minmax           b1       bound_operator: MIN_UNS_OP
                             Pin Associations (module, oper):
                                 a, a
                                 tc,"0"
                                 min_max,"0"
                                 value, value
                             Unbound oper pin 'num_inputs' is bound to "1"

                    b2       bound_operator: MIN_TC_OP
                             Pin Associations (module, oper):
                                 a, a
                                 tc,"1"
                                 min_max,"0"
                                 value, value
                             Unbound oper pin 'num_inputs' is bound to "1"

                    b3       bound_operator: MAX_UNS_OP
                             Pin Associations (module, oper):
                                 a, a
                                 tc,"0"
                                 min_max,"1"
                                 value, value
                             Unbound oper pin 'num_inputs' is bound to "1"

                    b4       bound_operator: MAX_TC_OP
                             Pin Associations (module, oper):
                                 a, a
                                 tc,"1"
                                 min_max,"1"
                                 value, value
                             Unbound oper pin 'num_inputs' is bound to "1"

DW_mod_tc           b1       bound_operator: MOD_TC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 b, B
                                 remainder, REMAINDER

                    b2       bound_operator: DIVMOD_TC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 b, B
                                 quotient, QUOTIENT
                                 remainder, REMAINDER

DW_mod_uns          b1       bound_operator: MOD_UNS_OP
                             Pin Associations (module, oper):
                                 a, A
                                 b, B
                                 remainder, REMAINDER

                    b2       bound_operator: DIVMOD_UNS_OP
                             Pin Associations (module, oper):
                                 a, A
                                 b, B
                                 quotient, QUOTIENT
                                 remainder, REMAINDER

DW_mult_tc          b0       bound_operator: MULT_TC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 b, B
                                 product, Z

                    b1       bound_operator: MULT_TC_OP
                             Pin Associations (module, oper):
                                 a, B
                                 b, A
                                 product, Z

DW_mult_uns         b0       bound_operator: MULT_UNS_OP
                             Pin Associations (module, oper):
                                 a, A
                                 b, B
                                 product, Z

                    b1       bound_operator: MULT_UNS_OP
                             Pin Associations (module, oper):
                                 a, B
                                 b, A
                                 product, Z

DW_prod_sum_tc      b0       bound_operator: PRODSUM_TC_OP
                             Pin Associations (module, oper):
                                 A, A
                                 B, B
                                 SUM, Z
                             Unbound oper pin 'num_inputs' is bound to "1"
                             Unbound oper pin 'SUM_width' is bound to "1"

DW_prod_sum_uns     b0       bound_operator: PRODSUM_UNS_OP
                             Pin Associations (module, oper):
                                 A, A
                                 B, B
                                 SUM, Z
                             Unbound oper pin 'num_inputs' is bound to "1"
                             Unbound oper pin 'SUM_width' is bound to "1"

DW_rightsh          b1       bound_operator: ASHR_UNS_UNS_OP
                             Pin Associations (module, oper):
                                 A, A
                                 DATA_TC,"0"
                                 SH, SH
                                 B, Z

                    b2       bound_operator: ASHR_TC_UNS_OP
                             Pin Associations (module, oper):
                                 A, A
                                 DATA_TC,"1"
                                 SH, SH
                                 B, Z

DW_shifter          b1       bound_operator: SHIFTER_UNS_UNS_OP
                             Pin Associations (module, oper):
                                 data_in, data_in
                                 data_tc,"0"
                                 sh, sh
                                 sh_tc,"0"
                                 sh_mode, sh_mode
                                 data_out, Z

                    b2       bound_operator: SHIFTER_UNS_TC_OP
                             Pin Associations (module, oper):
                                 data_in, data_in
                                 data_tc,"0"
                                 sh, sh
                                 sh_tc,"1"
                                 sh_mode, sh_mode
                                 data_out, Z

                    b3       bound_operator: SHIFTER_TC_UNS_OP
                             Pin Associations (module, oper):
                                 data_in, data_in
                                 data_tc,"1"
                                 sh, sh
                                 sh_tc,"0"
                                 sh_mode, sh_mode
                                 data_out, Z

                    b4       bound_operator: SHIFTER_TC_TC_OP
                             Pin Associations (module, oper):
                                 data_in, data_in
                                 data_tc,"1"
                                 sh, sh
                                 sh_tc,"1"
                                 sh_mode, sh_mode
                                 data_out, Z

DW_sqrt_tc          b2       bound_operator: SQRT_TC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 root, ROOT

DW_sqrt_uns         b1       bound_operator: SQRT_UNS_OP
                             Pin Associations (module, oper):
                                 a, A
                                 root, ROOT

DW_square           b1       bound_operator: SQR_TC_OP
                             Pin Associations (module, oper):
                                 a, A
                                 tc,"1"
                                 square, SQUARE

                    b2       bound_operator: SQR_UNS_OP
                             Pin Associations (module, oper):
                                 a, A
                                 tc,"0"
                                 square, SQUARE


External Implementations:

     Attributes/Parameters:
       v - verify_only
       V - verification implementation
       u - dont_use
       r - regular_licenses
       l - limited_licenses
       d - design_library
       s - priority_set_id
       p - priority
       leg - legal

   Module           Implementations      Attributes/Parameters
   ----------------------------------------------------------------------
   DW01_absval      clf                  r = DesignWare
                                         leg = "(width>=1)"

   DW01_add         apparch              r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    bk(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "width>=1"

                    clf(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    csm(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    pparch               r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    rpcs(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

   DW01_addsub      apparch              r = DesignWare
                                         d = DW01

                    bk(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    clf(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    csm(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    pparch               r = DesignWare
                                         d = DW01

                    rpcs(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

   DW01_ash         astr                 r = DesignWare
                                         d = DW01
                                         leg = "(SH_width>=1) && (A_width>=2)"

                    mx2i(replaced with str) r = DesignWare
                                         d = DW01
                                         leg = "(A_width >= 2) && (SH_width>=1)"

                    mx2n(replaced with str) r = DesignWare
                                         d = DW01
                                         leg = "(A_width >= 2) && (SH_width>=1)"

                    mx4(replaced with astr) r = DesignWare
                                         d = DW01
                                         leg = "(A_width >= 2) && (SH_width>=1)"

                    mx8(replaced with astr) r = DesignWare
                                         d = DW01
                                         leg = "(A_width >= 2) && (SH_width>=1)"

                    str                  r = DesignWare
                                         d = DW01
                                         leg = "(SH_width>=1) && (A_width>=2)"

   DW01_bsh         astr                 r = DesignWare
                                         d = DW01
                                         leg = "(SH_width>=1) && (A_width>=2)"

                    str                  r = DesignWare
                                         d = DW01
                                         leg = "(SH_width>=1) && (A_width>=2)"

   DW01_cmp2        apparch              r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    bk(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    cla(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    pparch               r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

   DW01_cmp6        apparch              r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    bk(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    cla(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    pparch               r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

   DW01_dec         apparch              r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    clf(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    pparch               r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

   DW01_decode      cgen                 r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

   DW01_inc         apparch              r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    clf(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    pparch               r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

   DW01_incdec      apparch              r = DesignWare
                                         d = DW01

                    clf(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    pparch               r = DesignWare
                                         d = DW01

   DW01_sub         apparch              r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    bk(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    clf(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    csm(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    pparch               r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    rpcs(replaced with pparch) r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

   DW02_mac         apparch              r = DesignWare
                                         d = DW02
                                         leg = "(A_width>=1) && (B_width>=1)"

                    pparch               r = DesignWare
                                         d = DW02
                                         leg = "(A_width>=1) && (B_width>=1)"

   DW02_mult        apparch              r = DesignWare
                                         d = DW02
                                         leg = "(A_width>=1) && (B_width>=1)"

                    nbw(replaced with pparch) r = DesignWare
                                         d = DW02
                                         leg = "(A_width>=1) && (B_width>=1)"

                    pparch               r = DesignWare
                                         d = DW02
                                         leg = "(A_width>=1) && (B_width>=1)"

                    wall(replaced with pparch) r = DesignWare
                                         d = DW02
                                         leg = "(A_width>=1) && (B_width>=1)"

   DW02_multp       apparch              r = DesignWare
                                         d = DW02
                                         leg = "(a_width >= 1) && (b_width >= 1) && (out_width >= a_width+b_width+2)"

                    pparch               r = DesignWare
                                         d = DW02
                                         leg = "(a_width >= 1) && (b_width >= 1) && (out_width >= a_width+b_width+2)"

   DW02_prod_sum    apparch              r = DesignWare
                                         d = DW02
                                         leg = "(A_width>=1) && (B_width>=1) && (num_inputs>=1) && (SUM_width>=1)"

                    pparch               r = DesignWare
                                         d = DW02
                                         leg = "(A_width>=1) && (B_width>=1) && (num_inputs>=1) && (SUM_width>=1)"

   DW02_prod_sum1   apparch              r = DesignWare
                                         d = DW02
                                         leg = "(A_width>=1) && (B_width>=1) && (SUM_width>=1)"

                    pparch               r = DesignWare
                                         d = DW02
                                         leg = "(A_width>=1) && (B_width>=1) && (SUM_width>=1)"

   DW02_sum         apparch              r = DesignWare
                                         d = DW02
                                         leg = "(num_inputs>=1) && (input_width>=1)"

                    pparch               r = DesignWare
                                         d = DW02
                                         leg = "(num_inputs>=1) && (input_width>=1)"

   DW02_tree        apparch              r = DesignWare
                                         d = DW02
                                         leg = "(num_inputs>=1)&&(input_width>=1)"

                    pparch               r = DesignWare
                                         d = DW02
                                         leg = "(num_inputs>=1)&&(input_width>=1)"

   DW_FP_ALIGN      str                  r = DesignWare
                                         d = DW02
                                         leg = "(sh_width>=1) && (a_width>=1)"

   DW_cmp           apparch              r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    pparch               r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

   DW_dec           apparch              r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    pparch               r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

   DW_decode_en     cgen                 r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

   DW_inc           apparch              r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    pparch               r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

   DW_incdec        apparch              r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

                    pparch               r = DesignWare
                                         d = DW01
                                         leg = "(width>=1)"

   DW_lbsh          astr                 r = DesignWare
                                         d = DW01
                                         leg = "(SH_width>=1) && (A_width>=2)"

                    str                  r = DesignWare
                                         d = DW01
                                         leg = "(SH_width>=1) && (A_width>=2)"

   DW_mult_tc       apparch              r = DesignWare
                                         d = DW02
                                         leg = "(a_width>=1) && (b_width>=1)"

                    pparch               r = DesignWare
                                         d = DW02
                                         leg = "(a_width>=1) && (b_width>=1)"

   DW_mult_uns      apparch              r = DesignWare
                                         d = DW02
                                         leg = "(a_width>=1) && (b_width>=1)"

                    pparch               r = DesignWare
                                         d = DW02
                                         leg = "(a_width>=1) && (b_width>=1)"

   DW_pricod        cla                  r = DesignWare
                                         leg = "(a_width >= 1)"

                    rtl                  r = DesignWare
                                         leg = "(a_width >= 1)"

   DW_prod_sum_tc   apparch              r = DesignWare
                                         d = DW02
                                         leg = "(A_width>=1) && (B_width>=1) && (num_inputs>=1) && (SUM_width>=1)"

                    pparch               r = DesignWare
                                         d = DW02
                                         leg = "(A_width>=1) && (B_width>=1) && (num_inputs>=1) && (SUM_width>=1)"

   DW_prod_sum_uns  apparch              r = DesignWare
                                         d = DW02
                                         leg = "(A_width>=1) && (B_width>=1) && (num_inputs>=1) && (SUM_width>=1)"

                    pparch               r = DesignWare
                                         d = DW02
                                         leg = "(A_width>=1) && (B_width>=1) && (num_inputs>=1) && (SUM_width>=1)"

   DW_rash          astr                 r = DesignWare
                                         d = DW01
                                         leg = "(SH_width>=1) && (A_width>=2)"

                    str                  r = DesignWare
                                         d = DW01
                                         leg = "(SH_width>=1) && (A_width>=2)"

   DW_rbsh          astr                 r = DesignWare
                                         d = DW01
                                         leg = "(SH_width>=1) && (A_width>=2)"

                    str                  r = DesignWare
                                         d = DW01
                                         leg = "(SH_width>=1) && (A_width>=2)"

   DW_sla           astr                 r = DesignWare
                                         d = DW01
                                         leg = "(SH_width>=1) && (A_width>=2)"

                    str                  r = DesignWare
                                         d = DW01
                                         leg = "(SH_width>=1) && (A_width>=2)"

   DW_square        apparch              r = DesignWare
                                         d = DW02
                                         leg = "(width>=1) && (sqr_width==(2*(width)))"

                    pparch               r = DesignWare
                                         d = DW02
                                         leg = "(width>=1) && (sqr_width==(2*(width)))"

   DW_squarep       apparch              r = DesignWare
                                         d = DW02
                                         leg = "width>=1"

                    pparch               r = DesignWare
                                         d = DW02
                                         leg = "width>=1"

   DW_sra           astr                 r = DesignWare
                                         d = DW01
                                         leg = "(SH_width>=1) && (A_width>=2)"

                    str                  r = DesignWare
                                         d = DW01
                                         leg = "(SH_width>=1) && (A_width>=2)"

   DW_thermdec      cgen                 r = DesignWare
                                         d = DW01
                                         leg = "(width>=1) && (width<=16)"

1
